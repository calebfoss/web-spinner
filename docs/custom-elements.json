{
  "schemaVersion": "1.0.0",
  "readme": "",
  "modules": [
    {
      "kind": "javascript-module",
      "path": "demo/demo.js",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "dist/webSpinner.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "__webpack_exports__Angle",
          "description": "***"
        },
        {
          "kind": "variable",
          "name": "__webpack_exports__Color",
          "description": "***"
        },
        {
          "kind": "variable",
          "name": "__webpack_exports__ConicalGradient",
          "description": "***"
        },
        {
          "kind": "variable",
          "name": "__webpack_exports__LinearGradient",
          "description": "***"
        },
        {
          "kind": "variable",
          "name": "__webpack_exports__NONE",
          "description": "***"
        },
        {
          "kind": "variable",
          "name": "__webpack_exports__RadialGradient",
          "description": "***"
        },
        {
          "kind": "variable",
          "name": "__webpack_exports__Shadow",
          "description": "***"
        },
        {
          "kind": "variable",
          "name": "__webpack_exports__State",
          "description": "***"
        },
        {
          "kind": "variable",
          "name": "__webpack_exports__Vector2D",
          "description": "***"
        },
        {
          "kind": "variable",
          "name": "__webpack_exports__createCanvas",
          "description": "***"
        },
        {
          "kind": "variable",
          "name": "__webpack_exports__createCustomElement",
          "description": "***"
        },
        {
          "kind": "variable",
          "name": "__webpack_exports__createMultiple",
          "description": "***"
        },
        {
          "kind": "variable",
          "name": "__webpack_exports__createState",
          "description": "***"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "Angle",
          "declaration": {
            "name": "__webpack_exports__Angle",
            "module": "dist/webSpinner.js"
          }
        },
        {
          "kind": "js",
          "name": "Color",
          "declaration": {
            "name": "__webpack_exports__Color",
            "module": "dist/webSpinner.js"
          }
        },
        {
          "kind": "js",
          "name": "ConicalGradient",
          "declaration": {
            "name": "__webpack_exports__ConicalGradient",
            "module": "dist/webSpinner.js"
          }
        },
        {
          "kind": "js",
          "name": "LinearGradient",
          "declaration": {
            "name": "__webpack_exports__LinearGradient",
            "module": "dist/webSpinner.js"
          }
        },
        {
          "kind": "js",
          "name": "NONE",
          "declaration": {
            "name": "__webpack_exports__NONE",
            "module": "dist/webSpinner.js"
          }
        },
        {
          "kind": "js",
          "name": "RadialGradient",
          "declaration": {
            "name": "__webpack_exports__RadialGradient",
            "module": "dist/webSpinner.js"
          }
        },
        {
          "kind": "js",
          "name": "Shadow",
          "declaration": {
            "name": "__webpack_exports__Shadow",
            "module": "dist/webSpinner.js"
          }
        },
        {
          "kind": "js",
          "name": "State",
          "declaration": {
            "name": "__webpack_exports__State",
            "module": "dist/webSpinner.js"
          }
        },
        {
          "kind": "js",
          "name": "Vector2D",
          "declaration": {
            "name": "__webpack_exports__Vector2D",
            "module": "dist/webSpinner.js"
          }
        },
        {
          "kind": "js",
          "name": "createCanvas",
          "declaration": {
            "name": "__webpack_exports__createCanvas",
            "module": "dist/webSpinner.js"
          }
        },
        {
          "kind": "js",
          "name": "createCustomElement",
          "declaration": {
            "name": "__webpack_exports__createCustomElement",
            "module": "dist/webSpinner.js"
          }
        },
        {
          "kind": "js",
          "name": "createMultiple",
          "declaration": {
            "name": "__webpack_exports__createMultiple",
            "module": "dist/webSpinner.js"
          }
        },
        {
          "kind": "js",
          "name": "createState",
          "declaration": {
            "name": "__webpack_exports__createState",
            "module": "dist/webSpinner.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "docs/script.ts",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/index.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "NONE",
          "type": {
            "text": "string"
          },
          "default": "\"none\""
        },
        {
          "kind": "function",
          "name": "createMultiple",
          "parameters": [
            {
              "name": "count",
              "type": {
                "text": "number"
              }
            },
            {
              "name": "generator",
              "type": {
                "text": "(index: number) => R"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "createCustomElement",
          "parameters": [
            {
              "name": "ElementClass",
              "type": {
                "text": "E"
              }
            },
            {
              "name": "options",
              "optional": true,
              "type": {
                "text": "Options<InstanceType<E>>"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "createCanvas",
          "parameters": [
            {
              "name": "options",
              "optional": true,
              "type": {
                "text": "Options<Canvas2DCanvasElement>"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "NONE",
          "declaration": {
            "name": "NONE",
            "module": "src/index.ts"
          }
        },
        {
          "kind": "js",
          "name": "createCustomElement",
          "declaration": {
            "name": "createCustomElement",
            "module": "src/index.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "c2d-canvas",
          "declaration": {
            "name": "Canvas2DCanvasElement",
            "module": "/src/elements/canvas2d/canvas"
          }
        },
        {
          "kind": "js",
          "name": "createCanvas",
          "declaration": {
            "name": "createCanvas",
            "module": "src/index.ts"
          }
        },
        {
          "kind": "js",
          "name": "createMultiple",
          "declaration": {
            "name": "createMultiple",
            "module": "src/index.ts"
          }
        },
        {
          "kind": "js",
          "name": "Color",
          "declaration": {
            "name": "Color",
            "module": "src/index.ts"
          }
        },
        {
          "kind": "js",
          "name": "Vector2D",
          "declaration": {
            "name": "Vector2D",
            "module": "src/index.ts"
          }
        },
        {
          "kind": "js",
          "name": "Angle",
          "declaration": {
            "name": "Angle",
            "module": "src/index.ts"
          }
        },
        {
          "kind": "js",
          "name": "State",
          "declaration": {
            "name": "State",
            "module": "src/index.ts"
          }
        },
        {
          "kind": "js",
          "name": "ConicalGradient",
          "declaration": {
            "name": "ConicalGradient",
            "module": "src/index.ts"
          }
        },
        {
          "kind": "js",
          "name": "LinearGradient",
          "declaration": {
            "name": "LinearGradient",
            "module": "src/index.ts"
          }
        },
        {
          "kind": "js",
          "name": "RadialGradient",
          "declaration": {
            "name": "RadialGradient",
            "module": "src/index.ts"
          }
        },
        {
          "kind": "js",
          "name": "Shadow",
          "declaration": {
            "name": "Shadow",
            "module": "src/index.ts"
          }
        },
        {
          "kind": "js",
          "name": "createState",
          "declaration": {
            "name": "createState",
            "module": "src/index.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/classes/angle.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "Angle",
          "members": [
            {
              "kind": "field",
              "name": "#conversions",
              "privacy": "private",
              "default": "new Map<Exclude<AngleUnit, \"rad\">, number>()"
            },
            {
              "kind": "method",
              "name": "#getConverted",
              "privacy": "private",
              "parameters": [
                {
                  "name": "unit",
                  "type": {
                    "text": "Exclude<AngleUnit, \"rad\">"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "#setConverted",
              "privacy": "private",
              "parameters": [
                {
                  "name": "unit",
                  "type": {
                    "text": "Exclude<AngleUnit, \"rad\">"
                  }
                },
                {
                  "name": "value",
                  "type": {
                    "text": "number"
                  }
                }
              ]
            },
            {
              "kind": "field",
              "name": "degrees"
            },
            {
              "kind": "method",
              "name": "toString"
            },
            {
              "kind": "method",
              "name": "convert",
              "static": true,
              "parameters": [
                {
                  "name": "value",
                  "type": {
                    "text": "number"
                  }
                },
                {
                  "name": "unitFrom",
                  "type": {
                    "text": "AngleUnit"
                  }
                },
                {
                  "name": "unitTo",
                  "type": {
                    "text": "AngleUnit"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "degrees",
              "static": true,
              "parameters": [
                {
                  "name": "value",
                  "type": {
                    "text": "number"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "equals",
              "parameters": [
                {
                  "name": "other",
                  "type": {
                    "text": "Angle"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "State",
                "module": "src/classes/state.ts"
              }
            },
            {
              "kind": "method",
              "name": "radians",
              "static": true,
              "parameters": [
                {
                  "name": "value",
                  "type": {
                    "text": "number"
                  }
                }
              ]
            },
            {
              "kind": "field",
              "name": "radians"
            },
            {
              "kind": "field",
              "name": "unit",
              "static": true,
              "default": "{ degrees: \"deg\", radians: \"rad\", gradians: \"grad\", turn: \"turn\", }",
              "type": {
                "text": "{\r\n    degrees: \"deg\",\r\n    radians: \"rad\",\r\n    gradians: \"grad\",\r\n    turn: \"turn\",\r\n  }"
              }
            },
            {
              "kind": "field",
              "name": "unitsInCircle",
              "static": true,
              "readonly": true
            },
            {
              "kind": "field",
              "name": "zero",
              "static": true,
              "readonly": true
            },
            {
              "kind": "field",
              "name": "#listeners",
              "privacy": "private",
              "default": "new Set<ChangeListener<T>>()",
              "inheritedFrom": {
                "name": "State",
                "module": "src/classes/state.ts"
              }
            },
            {
              "kind": "field",
              "name": "#value",
              "privacy": "private",
              "type": {
                "text": "T"
              },
              "default": "initialValue",
              "inheritedFrom": {
                "name": "State",
                "module": "src/classes/state.ts"
              }
            },
            {
              "kind": "method",
              "name": "addChangeListener",
              "parameters": [
                {
                  "name": "listener",
                  "type": {
                    "text": "ChangeListener<T>"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "State",
                "module": "src/classes/state.ts"
              }
            },
            {
              "kind": "method",
              "name": "removeChangeListener",
              "parameters": [
                {
                  "name": "listener",
                  "type": {
                    "text": "ChangeListener<T>"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "State",
                "module": "src/classes/state.ts"
              }
            },
            {
              "kind": "method",
              "name": "handleChange",
              "inheritedFrom": {
                "name": "State",
                "module": "src/classes/state.ts"
              }
            },
            {
              "kind": "method",
              "name": "replace",
              "parameters": [
                {
                  "name": "other",
                  "type": {
                    "text": "O"
                  }
                },
                {
                  "name": "changeListener",
                  "type": {
                    "text": "ChangeListener<T>"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "State",
                "module": "src/classes/state.ts"
              }
            },
            {
              "kind": "field",
              "name": "value",
              "inheritedFrom": {
                "name": "State",
                "module": "src/classes/state.ts"
              }
            }
          ],
          "superclass": {
            "name": "State",
            "module": "/src/classes/state"
          }
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "Angle",
          "declaration": {
            "name": "Angle",
            "module": "src/classes/angle.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/classes/click.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "ClickData",
          "members": [
            {
              "kind": "field",
              "name": "#clicked",
              "privacy": "private",
              "type": {
                "text": "boolean"
              },
              "default": "false"
            },
            {
              "kind": "field",
              "name": "clicked"
            },
            {
              "kind": "method",
              "name": "copy",
              "inheritedFrom": {
                "name": "Vector2D",
                "module": "src/classes/vector2d.ts"
              }
            },
            {
              "kind": "method",
              "name": "equals",
              "parameters": [
                {
                  "name": "x",
                  "type": {
                    "text": "number"
                  }
                },
                {
                  "name": "y",
                  "type": {
                    "text": "number"
                  }
                }
              ],
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "inheritedFrom": {
                "name": "State",
                "module": "src/classes/state.ts"
              }
            },
            {
              "kind": "field",
              "name": "inverse",
              "readonly": true,
              "inheritedFrom": {
                "name": "Vector2D",
                "module": "src/classes/vector2d.ts"
              }
            },
            {
              "kind": "field",
              "name": "one",
              "static": true,
              "readonly": true,
              "inheritedFrom": {
                "name": "Vector2D",
                "module": "src/classes/vector2d.ts"
              }
            },
            {
              "kind": "method",
              "name": "minus",
              "parameters": [
                {
                  "name": "x",
                  "type": {
                    "text": "number"
                  }
                },
                {
                  "name": "y",
                  "type": {
                    "text": "number"
                  }
                }
              ],
              "return": {
                "type": {
                  "text": "Vector2D"
                }
              },
              "inheritedFrom": {
                "name": "Vector2D",
                "module": "src/classes/vector2d.ts"
              }
            },
            {
              "kind": "method",
              "name": "plus",
              "parameters": [
                {
                  "name": "x",
                  "type": {
                    "text": "number"
                  }
                },
                {
                  "name": "y",
                  "type": {
                    "text": "number"
                  }
                }
              ],
              "return": {
                "type": {
                  "text": "Vector2D"
                }
              },
              "inheritedFrom": {
                "name": "Vector2D",
                "module": "src/classes/vector2d.ts"
              }
            },
            {
              "kind": "method",
              "name": "toString",
              "inheritedFrom": {
                "name": "Vector2D",
                "module": "src/classes/vector2d.ts"
              }
            },
            {
              "kind": "method",
              "name": "xy",
              "static": true,
              "parameters": [
                {
                  "name": "x",
                  "type": {
                    "text": "number"
                  }
                },
                {
                  "name": "y",
                  "type": {
                    "text": "number"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Vector2D",
                "module": "src/classes/vector2d.ts"
              }
            },
            {
              "kind": "field",
              "name": "x",
              "inheritedFrom": {
                "name": "Vector2D",
                "module": "src/classes/vector2d.ts"
              }
            },
            {
              "kind": "field",
              "name": "y",
              "inheritedFrom": {
                "name": "Vector2D",
                "module": "src/classes/vector2d.ts"
              }
            },
            {
              "kind": "field",
              "name": "zero",
              "static": true,
              "readonly": true,
              "inheritedFrom": {
                "name": "Vector2D",
                "module": "src/classes/vector2d.ts"
              }
            },
            {
              "kind": "field",
              "name": "#listeners",
              "privacy": "private",
              "default": "new Set<ChangeListener<T>>()",
              "inheritedFrom": {
                "name": "State",
                "module": "src/classes/state.ts"
              }
            },
            {
              "kind": "field",
              "name": "#value",
              "privacy": "private",
              "type": {
                "text": "T"
              },
              "default": "initialValue",
              "inheritedFrom": {
                "name": "State",
                "module": "src/classes/state.ts"
              }
            },
            {
              "kind": "method",
              "name": "addChangeListener",
              "parameters": [
                {
                  "name": "listener",
                  "type": {
                    "text": "ChangeListener<T>"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "State",
                "module": "src/classes/state.ts"
              }
            },
            {
              "kind": "method",
              "name": "removeChangeListener",
              "parameters": [
                {
                  "name": "listener",
                  "type": {
                    "text": "ChangeListener<T>"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "State",
                "module": "src/classes/state.ts"
              }
            },
            {
              "kind": "method",
              "name": "handleChange",
              "inheritedFrom": {
                "name": "State",
                "module": "src/classes/state.ts"
              }
            },
            {
              "kind": "method",
              "name": "replace",
              "parameters": [
                {
                  "name": "other",
                  "type": {
                    "text": "O"
                  }
                },
                {
                  "name": "changeListener",
                  "type": {
                    "text": "ChangeListener<T>"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "State",
                "module": "src/classes/state.ts"
              }
            },
            {
              "kind": "field",
              "name": "value",
              "inheritedFrom": {
                "name": "State",
                "module": "src/classes/state.ts"
              }
            }
          ],
          "superclass": {
            "name": "Vector2D",
            "module": "/src/classes/vector2d"
          }
        },
        {
          "kind": "class",
          "description": "",
          "name": "ClickTracker",
          "members": [
            {
              "kind": "field",
              "name": "#target",
              "privacy": "private",
              "type": {
                "text": "HTMLElement"
              },
              "default": "target"
            },
            {
              "kind": "method",
              "name": "advanceFrame"
            },
            {
              "kind": "field",
              "name": "clicked",
              "readonly": true,
              "inheritedFrom": {
                "name": "ClickData",
                "module": "src/classes/click.ts"
              }
            },
            {
              "kind": "field",
              "name": "position",
              "type": {
                "text": "Vector2D"
              },
              "readonly": true
            },
            {
              "kind": "field",
              "name": "x",
              "inheritedFrom": {
                "name": "Vector2D",
                "module": "src/classes/vector2d.ts"
              },
              "readonly": true
            },
            {
              "kind": "field",
              "name": "y",
              "inheritedFrom": {
                "name": "Vector2D",
                "module": "src/classes/vector2d.ts"
              },
              "readonly": true
            },
            {
              "kind": "field",
              "name": "#clicked",
              "privacy": "private",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "inheritedFrom": {
                "name": "ClickData",
                "module": "src/classes/click.ts"
              }
            },
            {
              "kind": "method",
              "name": "copy",
              "inheritedFrom": {
                "name": "Vector2D",
                "module": "src/classes/vector2d.ts"
              }
            },
            {
              "kind": "method",
              "name": "equals",
              "parameters": [
                {
                  "name": "x",
                  "type": {
                    "text": "number"
                  }
                },
                {
                  "name": "y",
                  "type": {
                    "text": "number"
                  }
                }
              ],
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "inheritedFrom": {
                "name": "State",
                "module": "src/classes/state.ts"
              }
            },
            {
              "kind": "field",
              "name": "inverse",
              "readonly": true,
              "inheritedFrom": {
                "name": "Vector2D",
                "module": "src/classes/vector2d.ts"
              }
            },
            {
              "kind": "field",
              "name": "one",
              "static": true,
              "readonly": true,
              "inheritedFrom": {
                "name": "Vector2D",
                "module": "src/classes/vector2d.ts"
              }
            },
            {
              "kind": "method",
              "name": "minus",
              "parameters": [
                {
                  "name": "x",
                  "type": {
                    "text": "number"
                  }
                },
                {
                  "name": "y",
                  "type": {
                    "text": "number"
                  }
                }
              ],
              "return": {
                "type": {
                  "text": "Vector2D"
                }
              },
              "inheritedFrom": {
                "name": "Vector2D",
                "module": "src/classes/vector2d.ts"
              }
            },
            {
              "kind": "method",
              "name": "plus",
              "parameters": [
                {
                  "name": "x",
                  "type": {
                    "text": "number"
                  }
                },
                {
                  "name": "y",
                  "type": {
                    "text": "number"
                  }
                }
              ],
              "return": {
                "type": {
                  "text": "Vector2D"
                }
              },
              "inheritedFrom": {
                "name": "Vector2D",
                "module": "src/classes/vector2d.ts"
              }
            },
            {
              "kind": "method",
              "name": "toString",
              "inheritedFrom": {
                "name": "Vector2D",
                "module": "src/classes/vector2d.ts"
              }
            },
            {
              "kind": "method",
              "name": "xy",
              "static": true,
              "parameters": [
                {
                  "name": "x",
                  "type": {
                    "text": "number"
                  }
                },
                {
                  "name": "y",
                  "type": {
                    "text": "number"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Vector2D",
                "module": "src/classes/vector2d.ts"
              }
            },
            {
              "kind": "field",
              "name": "zero",
              "static": true,
              "readonly": true,
              "inheritedFrom": {
                "name": "Vector2D",
                "module": "src/classes/vector2d.ts"
              }
            },
            {
              "kind": "field",
              "name": "#listeners",
              "privacy": "private",
              "default": "new Set<ChangeListener<T>>()",
              "inheritedFrom": {
                "name": "State",
                "module": "src/classes/state.ts"
              }
            },
            {
              "kind": "field",
              "name": "#value",
              "privacy": "private",
              "type": {
                "text": "T"
              },
              "default": "initialValue",
              "inheritedFrom": {
                "name": "State",
                "module": "src/classes/state.ts"
              }
            },
            {
              "kind": "method",
              "name": "addChangeListener",
              "parameters": [
                {
                  "name": "listener",
                  "type": {
                    "text": "ChangeListener<T>"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "State",
                "module": "src/classes/state.ts"
              }
            },
            {
              "kind": "method",
              "name": "removeChangeListener",
              "parameters": [
                {
                  "name": "listener",
                  "type": {
                    "text": "ChangeListener<T>"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "State",
                "module": "src/classes/state.ts"
              }
            },
            {
              "kind": "method",
              "name": "handleChange",
              "inheritedFrom": {
                "name": "State",
                "module": "src/classes/state.ts"
              }
            },
            {
              "kind": "method",
              "name": "replace",
              "parameters": [
                {
                  "name": "other",
                  "type": {
                    "text": "O"
                  }
                },
                {
                  "name": "changeListener",
                  "type": {
                    "text": "ChangeListener<T>"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "State",
                "module": "src/classes/state.ts"
              }
            },
            {
              "kind": "field",
              "name": "value",
              "inheritedFrom": {
                "name": "State",
                "module": "src/classes/state.ts"
              }
            }
          ],
          "superclass": {
            "name": "ClickData",
            "module": "src/classes/click.ts"
          }
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "ClickData",
          "declaration": {
            "name": "ClickData",
            "module": "src/classes/click.ts"
          }
        },
        {
          "kind": "js",
          "name": "ClickTracker",
          "declaration": {
            "name": "ClickTracker",
            "module": "src/classes/click.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/classes/color.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "Color",
          "members": [
            {
              "kind": "field",
              "name": "#str",
              "privacy": "private",
              "type": {
                "text": "string"
              }
            },
            {
              "kind": "method",
              "name": "gray",
              "static": true,
              "parameters": [
                {
                  "name": "value",
                  "type": {
                    "text": "number"
                  }
                },
                {
                  "name": "alpha",
                  "optional": true,
                  "type": {
                    "text": "number"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "colorString",
              "static": true,
              "parameters": [
                {
                  "name": "value",
                  "type": {
                    "text": "string"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "equals",
              "parameters": [
                {
                  "name": "other",
                  "type": {
                    "text": "Color"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "toString"
            },
            {
              "kind": "field",
              "name": "random",
              "static": true,
              "readonly": true
            },
            {
              "kind": "method",
              "name": "rgb",
              "static": true,
              "parameters": [
                {
                  "name": "red",
                  "type": {
                    "text": "number"
                  }
                },
                {
                  "name": "green",
                  "type": {
                    "text": "number"
                  }
                },
                {
                  "name": "blue",
                  "type": {
                    "text": "number"
                  }
                },
                {
                  "name": "alpha",
                  "optional": true,
                  "type": {
                    "text": "number"
                  }
                }
              ]
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "Color",
          "declaration": {
            "name": "Color",
            "module": "src/classes/color.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/classes/gradient.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "Gradient",
          "members": [
            {
              "kind": "field",
              "name": "#stops",
              "privacy": "private",
              "type": {
                "text": "ColorStop[]"
              },
              "default": "[]"
            },
            {
              "kind": "method",
              "name": "addColorStop",
              "parameters": [
                {
                  "name": "offset",
                  "type": {
                    "text": "number"
                  }
                },
                {
                  "name": "color",
                  "type": {
                    "text": "Color"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "applyStops",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "gradient",
                  "type": {
                    "text": "CanvasGradient"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "render",
              "return": {
                "type": {
                  "text": "CanvasGradient"
                }
              },
              "parameters": [
                {
                  "name": "context",
                  "type": {
                    "text": "CanvasRenderingContext2D"
                  }
                },
                {
                  "name": "args",
                  "type": {
                    "text": "any[]"
                  }
                }
              ]
            },
            {
              "kind": "field",
              "name": "stops",
              "readonly": true
            },
            {
              "kind": "method",
              "name": "toString"
            }
          ]
        },
        {
          "kind": "class",
          "description": "",
          "name": "LinearGradient",
          "members": [
            {
              "kind": "field",
              "name": "#colorStartX",
              "privacy": "private",
              "type": {
                "text": "number"
              },
              "default": "startX"
            },
            {
              "kind": "field",
              "name": "#colorStartY",
              "privacy": "private",
              "type": {
                "text": "number"
              },
              "default": "startY"
            },
            {
              "kind": "field",
              "name": "#colorEndX",
              "privacy": "private",
              "type": {
                "text": "number"
              },
              "default": "endX"
            },
            {
              "kind": "field",
              "name": "#colorEndY",
              "privacy": "private",
              "type": {
                "text": "number"
              },
              "default": "endY"
            },
            {
              "kind": "method",
              "name": "render",
              "return": {
                "type": {
                  "text": "CanvasGradient"
                }
              },
              "parameters": [
                {
                  "name": "context",
                  "type": {
                    "text": "CanvasRenderingContext2D"
                  }
                },
                {
                  "name": "boundsX",
                  "type": {
                    "text": "number"
                  }
                },
                {
                  "name": "boundsY",
                  "type": {
                    "text": "number"
                  }
                },
                {
                  "name": "boundsWidth",
                  "type": {
                    "text": "number"
                  }
                },
                {
                  "name": "boundsHeight",
                  "type": {
                    "text": "number"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Gradient",
                "module": "src/classes/gradient.ts"
              }
            },
            {
              "kind": "field",
              "name": "#stops",
              "privacy": "private",
              "type": {
                "text": "ColorStop[]"
              },
              "default": "[]",
              "inheritedFrom": {
                "name": "Gradient",
                "module": "src/classes/gradient.ts"
              }
            },
            {
              "kind": "method",
              "name": "addColorStop",
              "parameters": [
                {
                  "name": "offset",
                  "type": {
                    "text": "number"
                  }
                },
                {
                  "name": "color",
                  "type": {
                    "text": "Color"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Gradient",
                "module": "src/classes/gradient.ts"
              }
            },
            {
              "kind": "method",
              "name": "applyStops",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "gradient",
                  "type": {
                    "text": "CanvasGradient"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Gradient",
                "module": "src/classes/gradient.ts"
              }
            },
            {
              "kind": "field",
              "name": "stops",
              "readonly": true,
              "inheritedFrom": {
                "name": "Gradient",
                "module": "src/classes/gradient.ts"
              }
            },
            {
              "kind": "method",
              "name": "toString",
              "inheritedFrom": {
                "name": "Gradient",
                "module": "src/classes/gradient.ts"
              }
            }
          ],
          "superclass": {
            "name": "Gradient",
            "module": "src/classes/gradient.ts"
          }
        },
        {
          "kind": "class",
          "description": "",
          "name": "RadialGradient",
          "members": [
            {
              "kind": "field",
              "name": "#startX",
              "privacy": "private",
              "type": {
                "text": "number"
              },
              "default": "startX"
            },
            {
              "kind": "field",
              "name": "#startY",
              "privacy": "private",
              "type": {
                "text": "number"
              },
              "default": "startY"
            },
            {
              "kind": "field",
              "name": "#startRadius",
              "privacy": "private",
              "type": {
                "text": "number"
              },
              "default": "startRadius"
            },
            {
              "kind": "field",
              "name": "#endX",
              "privacy": "private",
              "type": {
                "text": "number"
              },
              "default": "endX"
            },
            {
              "kind": "field",
              "name": "#endY",
              "privacy": "private",
              "type": {
                "text": "number"
              },
              "default": "endY"
            },
            {
              "kind": "field",
              "name": "#endRadius",
              "privacy": "private",
              "type": {
                "text": "number"
              },
              "default": "endRadius"
            },
            {
              "kind": "method",
              "name": "render",
              "return": {
                "type": {
                  "text": "CanvasGradient"
                }
              },
              "parameters": [
                {
                  "name": "context",
                  "type": {
                    "text": "CanvasRenderingContext2D"
                  }
                },
                {
                  "name": "boundsX",
                  "type": {
                    "text": "number"
                  }
                },
                {
                  "name": "boundsY",
                  "type": {
                    "text": "number"
                  }
                },
                {
                  "name": "boundsRadius",
                  "type": {
                    "text": "number"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Gradient",
                "module": "src/classes/gradient.ts"
              }
            },
            {
              "kind": "field",
              "name": "#stops",
              "privacy": "private",
              "type": {
                "text": "ColorStop[]"
              },
              "default": "[]",
              "inheritedFrom": {
                "name": "Gradient",
                "module": "src/classes/gradient.ts"
              }
            },
            {
              "kind": "method",
              "name": "addColorStop",
              "parameters": [
                {
                  "name": "offset",
                  "type": {
                    "text": "number"
                  }
                },
                {
                  "name": "color",
                  "type": {
                    "text": "Color"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Gradient",
                "module": "src/classes/gradient.ts"
              }
            },
            {
              "kind": "method",
              "name": "applyStops",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "gradient",
                  "type": {
                    "text": "CanvasGradient"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Gradient",
                "module": "src/classes/gradient.ts"
              }
            },
            {
              "kind": "field",
              "name": "stops",
              "readonly": true,
              "inheritedFrom": {
                "name": "Gradient",
                "module": "src/classes/gradient.ts"
              }
            },
            {
              "kind": "method",
              "name": "toString",
              "inheritedFrom": {
                "name": "Gradient",
                "module": "src/classes/gradient.ts"
              }
            }
          ],
          "superclass": {
            "name": "Gradient",
            "module": "src/classes/gradient.ts"
          }
        },
        {
          "kind": "class",
          "description": "",
          "name": "ConicalGradient",
          "members": [
            {
              "kind": "field",
              "name": "#startAngle",
              "privacy": "private",
              "type": {
                "text": "Angle"
              },
              "default": "startAngle"
            },
            {
              "kind": "field",
              "name": "#offset",
              "privacy": "private",
              "type": {
                "text": "Vector2D"
              },
              "default": "offset"
            },
            {
              "kind": "method",
              "name": "render",
              "return": {
                "type": {
                  "text": "CanvasGradient"
                }
              },
              "parameters": [
                {
                  "name": "context",
                  "type": {
                    "text": "CanvasRenderingContext2D"
                  }
                },
                {
                  "name": "center",
                  "type": {
                    "text": "Vector2D"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Gradient",
                "module": "src/classes/gradient.ts"
              }
            },
            {
              "kind": "field",
              "name": "#stops",
              "privacy": "private",
              "type": {
                "text": "ColorStop[]"
              },
              "default": "[]",
              "inheritedFrom": {
                "name": "Gradient",
                "module": "src/classes/gradient.ts"
              }
            },
            {
              "kind": "method",
              "name": "addColorStop",
              "parameters": [
                {
                  "name": "offset",
                  "type": {
                    "text": "number"
                  }
                },
                {
                  "name": "color",
                  "type": {
                    "text": "Color"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Gradient",
                "module": "src/classes/gradient.ts"
              }
            },
            {
              "kind": "method",
              "name": "applyStops",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "gradient",
                  "type": {
                    "text": "CanvasGradient"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Gradient",
                "module": "src/classes/gradient.ts"
              }
            },
            {
              "kind": "field",
              "name": "stops",
              "readonly": true,
              "inheritedFrom": {
                "name": "Gradient",
                "module": "src/classes/gradient.ts"
              }
            },
            {
              "kind": "method",
              "name": "toString",
              "inheritedFrom": {
                "name": "Gradient",
                "module": "src/classes/gradient.ts"
              }
            }
          ],
          "superclass": {
            "name": "Gradient",
            "module": "src/classes/gradient.ts"
          }
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "Gradient",
          "declaration": {
            "name": "Gradient",
            "module": "src/classes/gradient.ts"
          }
        },
        {
          "kind": "js",
          "name": "LinearGradient",
          "declaration": {
            "name": "LinearGradient",
            "module": "src/classes/gradient.ts"
          }
        },
        {
          "kind": "js",
          "name": "RadialGradient",
          "declaration": {
            "name": "RadialGradient",
            "module": "src/classes/gradient.ts"
          }
        },
        {
          "kind": "js",
          "name": "ConicalGradient",
          "declaration": {
            "name": "ConicalGradient",
            "module": "src/classes/gradient.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/classes/keyboard.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "KeyboardTracker",
          "members": [
            {
              "kind": "field",
              "name": "#current",
              "privacy": "private",
              "default": "new Map<string, boolean>()"
            },
            {
              "kind": "field",
              "name": "#previous",
              "privacy": "private",
              "default": "new Map<string, boolean>()"
            },
            {
              "kind": "field",
              "name": "#last",
              "privacy": "private",
              "type": {
                "text": "string"
              },
              "default": "\"\""
            },
            {
              "kind": "field",
              "name": "#down",
              "privacy": "private",
              "type": {
                "text": "boolean"
              },
              "default": "false"
            },
            {
              "kind": "method",
              "name": "advanceFrame"
            },
            {
              "kind": "field",
              "name": "down",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "last",
              "readonly": true
            },
            {
              "kind": "method",
              "name": "keyHeld",
              "parameters": [
                {
                  "name": "key",
                  "type": {
                    "text": "string"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "keyPreviouslyHeld",
              "parameters": [
                {
                  "name": "key",
                  "type": {
                    "text": "string"
                  }
                }
              ]
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "KeyboardTracker",
          "declaration": {
            "name": "KeyboardTracker",
            "module": "src/classes/keyboard.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/classes/mouse.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "MouseData",
          "members": [
            {
              "kind": "field",
              "name": "#buttonStates",
              "privacy": "private",
              "type": {
                "text": "array"
              },
              "default": "[false, false, false, false, false]"
            },
            {
              "kind": "field",
              "name": "#over",
              "privacy": "private",
              "type": {
                "text": "boolean"
              },
              "default": "false"
            },
            {
              "kind": "field",
              "name": "buttonStates"
            },
            {
              "kind": "field",
              "name": "over"
            },
            {
              "kind": "method",
              "name": "copy",
              "inheritedFrom": {
                "name": "Vector2D",
                "module": "src/classes/vector2d.ts"
              }
            },
            {
              "kind": "method",
              "name": "equals",
              "parameters": [
                {
                  "name": "x",
                  "type": {
                    "text": "number"
                  }
                },
                {
                  "name": "y",
                  "type": {
                    "text": "number"
                  }
                }
              ],
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "inheritedFrom": {
                "name": "State",
                "module": "src/classes/state.ts"
              }
            },
            {
              "kind": "field",
              "name": "inverse",
              "readonly": true,
              "inheritedFrom": {
                "name": "Vector2D",
                "module": "src/classes/vector2d.ts"
              }
            },
            {
              "kind": "field",
              "name": "one",
              "static": true,
              "readonly": true,
              "inheritedFrom": {
                "name": "Vector2D",
                "module": "src/classes/vector2d.ts"
              }
            },
            {
              "kind": "method",
              "name": "minus",
              "parameters": [
                {
                  "name": "x",
                  "type": {
                    "text": "number"
                  }
                },
                {
                  "name": "y",
                  "type": {
                    "text": "number"
                  }
                }
              ],
              "return": {
                "type": {
                  "text": "Vector2D"
                }
              },
              "inheritedFrom": {
                "name": "Vector2D",
                "module": "src/classes/vector2d.ts"
              }
            },
            {
              "kind": "method",
              "name": "plus",
              "parameters": [
                {
                  "name": "x",
                  "type": {
                    "text": "number"
                  }
                },
                {
                  "name": "y",
                  "type": {
                    "text": "number"
                  }
                }
              ],
              "return": {
                "type": {
                  "text": "Vector2D"
                }
              },
              "inheritedFrom": {
                "name": "Vector2D",
                "module": "src/classes/vector2d.ts"
              }
            },
            {
              "kind": "method",
              "name": "toString",
              "inheritedFrom": {
                "name": "Vector2D",
                "module": "src/classes/vector2d.ts"
              }
            },
            {
              "kind": "method",
              "name": "xy",
              "static": true,
              "parameters": [
                {
                  "name": "x",
                  "type": {
                    "text": "number"
                  }
                },
                {
                  "name": "y",
                  "type": {
                    "text": "number"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Vector2D",
                "module": "src/classes/vector2d.ts"
              }
            },
            {
              "kind": "field",
              "name": "x",
              "inheritedFrom": {
                "name": "Vector2D",
                "module": "src/classes/vector2d.ts"
              }
            },
            {
              "kind": "field",
              "name": "y",
              "inheritedFrom": {
                "name": "Vector2D",
                "module": "src/classes/vector2d.ts"
              }
            },
            {
              "kind": "field",
              "name": "zero",
              "static": true,
              "readonly": true,
              "inheritedFrom": {
                "name": "Vector2D",
                "module": "src/classes/vector2d.ts"
              }
            },
            {
              "kind": "field",
              "name": "#listeners",
              "privacy": "private",
              "default": "new Set<ChangeListener<T>>()",
              "inheritedFrom": {
                "name": "State",
                "module": "src/classes/state.ts"
              }
            },
            {
              "kind": "field",
              "name": "#value",
              "privacy": "private",
              "type": {
                "text": "T"
              },
              "default": "initialValue",
              "inheritedFrom": {
                "name": "State",
                "module": "src/classes/state.ts"
              }
            },
            {
              "kind": "method",
              "name": "addChangeListener",
              "parameters": [
                {
                  "name": "listener",
                  "type": {
                    "text": "ChangeListener<T>"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "State",
                "module": "src/classes/state.ts"
              }
            },
            {
              "kind": "method",
              "name": "removeChangeListener",
              "parameters": [
                {
                  "name": "listener",
                  "type": {
                    "text": "ChangeListener<T>"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "State",
                "module": "src/classes/state.ts"
              }
            },
            {
              "kind": "method",
              "name": "handleChange",
              "inheritedFrom": {
                "name": "State",
                "module": "src/classes/state.ts"
              }
            },
            {
              "kind": "method",
              "name": "replace",
              "parameters": [
                {
                  "name": "other",
                  "type": {
                    "text": "O"
                  }
                },
                {
                  "name": "changeListener",
                  "type": {
                    "text": "ChangeListener<T>"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "State",
                "module": "src/classes/state.ts"
              }
            },
            {
              "kind": "field",
              "name": "value",
              "inheritedFrom": {
                "name": "State",
                "module": "src/classes/state.ts"
              }
            }
          ],
          "superclass": {
            "name": "Vector2D",
            "module": "/src/classes/vector2d"
          }
        },
        {
          "kind": "class",
          "description": "",
          "name": "MouseTracker",
          "members": [
            {
              "kind": "field",
              "name": "#previous",
              "privacy": "private",
              "type": {
                "text": "MouseData"
              },
              "default": "new MouseData()"
            },
            {
              "kind": "field",
              "name": "#target",
              "privacy": "private",
              "type": {
                "text": "HTMLElement | Window"
              },
              "default": "target"
            },
            {
              "kind": "method",
              "name": "advanceFrame"
            },
            {
              "kind": "field",
              "name": "buttonStates",
              "readonly": true,
              "inheritedFrom": {
                "name": "MouseData",
                "module": "src/classes/mouse.ts"
              }
            },
            {
              "kind": "field",
              "name": "over",
              "readonly": true,
              "inheritedFrom": {
                "name": "MouseData",
                "module": "src/classes/mouse.ts"
              }
            },
            {
              "kind": "field",
              "name": "previous",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "x",
              "inheritedFrom": {
                "name": "Vector2D",
                "module": "src/classes/vector2d.ts"
              },
              "readonly": true
            },
            {
              "kind": "field",
              "name": "y",
              "inheritedFrom": {
                "name": "Vector2D",
                "module": "src/classes/vector2d.ts"
              },
              "readonly": true
            },
            {
              "kind": "field",
              "name": "#buttonStates",
              "privacy": "private",
              "type": {
                "text": "array"
              },
              "default": "[false, false, false, false, false]",
              "inheritedFrom": {
                "name": "MouseData",
                "module": "src/classes/mouse.ts"
              }
            },
            {
              "kind": "field",
              "name": "#over",
              "privacy": "private",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "inheritedFrom": {
                "name": "MouseData",
                "module": "src/classes/mouse.ts"
              }
            },
            {
              "kind": "method",
              "name": "copy",
              "inheritedFrom": {
                "name": "Vector2D",
                "module": "src/classes/vector2d.ts"
              }
            },
            {
              "kind": "method",
              "name": "equals",
              "parameters": [
                {
                  "name": "x",
                  "type": {
                    "text": "number"
                  }
                },
                {
                  "name": "y",
                  "type": {
                    "text": "number"
                  }
                }
              ],
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "inheritedFrom": {
                "name": "State",
                "module": "src/classes/state.ts"
              }
            },
            {
              "kind": "field",
              "name": "inverse",
              "readonly": true,
              "inheritedFrom": {
                "name": "Vector2D",
                "module": "src/classes/vector2d.ts"
              }
            },
            {
              "kind": "field",
              "name": "one",
              "static": true,
              "readonly": true,
              "inheritedFrom": {
                "name": "Vector2D",
                "module": "src/classes/vector2d.ts"
              }
            },
            {
              "kind": "method",
              "name": "minus",
              "parameters": [
                {
                  "name": "x",
                  "type": {
                    "text": "number"
                  }
                },
                {
                  "name": "y",
                  "type": {
                    "text": "number"
                  }
                }
              ],
              "return": {
                "type": {
                  "text": "Vector2D"
                }
              },
              "inheritedFrom": {
                "name": "Vector2D",
                "module": "src/classes/vector2d.ts"
              }
            },
            {
              "kind": "method",
              "name": "plus",
              "parameters": [
                {
                  "name": "x",
                  "type": {
                    "text": "number"
                  }
                },
                {
                  "name": "y",
                  "type": {
                    "text": "number"
                  }
                }
              ],
              "return": {
                "type": {
                  "text": "Vector2D"
                }
              },
              "inheritedFrom": {
                "name": "Vector2D",
                "module": "src/classes/vector2d.ts"
              }
            },
            {
              "kind": "method",
              "name": "toString",
              "inheritedFrom": {
                "name": "Vector2D",
                "module": "src/classes/vector2d.ts"
              }
            },
            {
              "kind": "method",
              "name": "xy",
              "static": true,
              "parameters": [
                {
                  "name": "x",
                  "type": {
                    "text": "number"
                  }
                },
                {
                  "name": "y",
                  "type": {
                    "text": "number"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Vector2D",
                "module": "src/classes/vector2d.ts"
              }
            },
            {
              "kind": "field",
              "name": "zero",
              "static": true,
              "readonly": true,
              "inheritedFrom": {
                "name": "Vector2D",
                "module": "src/classes/vector2d.ts"
              }
            },
            {
              "kind": "field",
              "name": "#listeners",
              "privacy": "private",
              "default": "new Set<ChangeListener<T>>()",
              "inheritedFrom": {
                "name": "State",
                "module": "src/classes/state.ts"
              }
            },
            {
              "kind": "field",
              "name": "#value",
              "privacy": "private",
              "type": {
                "text": "T"
              },
              "default": "initialValue",
              "inheritedFrom": {
                "name": "State",
                "module": "src/classes/state.ts"
              }
            },
            {
              "kind": "method",
              "name": "addChangeListener",
              "parameters": [
                {
                  "name": "listener",
                  "type": {
                    "text": "ChangeListener<T>"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "State",
                "module": "src/classes/state.ts"
              }
            },
            {
              "kind": "method",
              "name": "removeChangeListener",
              "parameters": [
                {
                  "name": "listener",
                  "type": {
                    "text": "ChangeListener<T>"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "State",
                "module": "src/classes/state.ts"
              }
            },
            {
              "kind": "method",
              "name": "handleChange",
              "inheritedFrom": {
                "name": "State",
                "module": "src/classes/state.ts"
              }
            },
            {
              "kind": "method",
              "name": "replace",
              "parameters": [
                {
                  "name": "other",
                  "type": {
                    "text": "O"
                  }
                },
                {
                  "name": "changeListener",
                  "type": {
                    "text": "ChangeListener<T>"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "State",
                "module": "src/classes/state.ts"
              }
            },
            {
              "kind": "field",
              "name": "value",
              "inheritedFrom": {
                "name": "State",
                "module": "src/classes/state.ts"
              }
            }
          ],
          "superclass": {
            "name": "MouseData",
            "module": "src/classes/mouse.ts"
          }
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "MouseData",
          "declaration": {
            "name": "MouseData",
            "module": "src/classes/mouse.ts"
          }
        },
        {
          "kind": "js",
          "name": "MouseTracker",
          "declaration": {
            "name": "MouseTracker",
            "module": "src/classes/mouse.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/classes/shadow.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "Shadow",
          "members": [
            {
              "kind": "field",
              "name": "#blur",
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "#color",
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "#offset",
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "#changeListenerMap",
              "privacy": "private",
              "default": "new Map<ChangeListener<Shadow>, () => void>()"
            },
            {
              "kind": "method",
              "name": "addChangeListener",
              "parameters": [
                {
                  "name": "listener",
                  "type": {
                    "text": "(updatedValue: Shadow) => void"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "removeChangeListener",
              "parameters": [
                {
                  "name": "listener",
                  "type": {
                    "text": "ChangeListener<Shadow>"
                  }
                }
              ]
            },
            {
              "kind": "field",
              "name": "#changeListener",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "#handleChange",
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "blur"
            },
            {
              "kind": "field",
              "name": "color"
            },
            {
              "kind": "method",
              "name": "equals",
              "parameters": [
                {
                  "name": "other",
                  "type": {
                    "text": "Shadow"
                  }
                }
              ]
            },
            {
              "kind": "field",
              "name": "offset"
            },
            {
              "kind": "method",
              "name": "render",
              "parameters": [
                {
                  "name": "context",
                  "type": {
                    "text": "CanvasRenderingContext2D"
                  }
                }
              ]
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "Shadow",
          "declaration": {
            "name": "Shadow",
            "module": "src/classes/shadow.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/classes/state.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "State",
          "members": [
            {
              "kind": "field",
              "name": "#listeners",
              "privacy": "private",
              "default": "new Set<ChangeListener<T>>()"
            },
            {
              "kind": "field",
              "name": "#value",
              "privacy": "private",
              "type": {
                "text": "T"
              },
              "default": "initialValue"
            },
            {
              "kind": "method",
              "name": "addChangeListener",
              "parameters": [
                {
                  "name": "listener",
                  "type": {
                    "text": "ChangeListener<T>"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "removeChangeListener",
              "parameters": [
                {
                  "name": "listener",
                  "type": {
                    "text": "ChangeListener<T>"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleChange"
            },
            {
              "kind": "method",
              "name": "equals",
              "parameters": [
                {
                  "name": "other",
                  "type": {
                    "text": "T | State<T>"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "replace",
              "parameters": [
                {
                  "name": "other",
                  "type": {
                    "text": "O"
                  }
                },
                {
                  "name": "changeListener",
                  "type": {
                    "text": "ChangeListener<T>"
                  }
                }
              ]
            },
            {
              "kind": "field",
              "name": "value"
            }
          ]
        },
        {
          "kind": "function",
          "name": "createState",
          "parameters": [
            {
              "name": "target",
              "type": {
                "text": "T"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "State",
          "declaration": {
            "name": "State",
            "module": "src/classes/state.ts"
          }
        },
        {
          "kind": "js",
          "name": "createState",
          "declaration": {
            "name": "createState",
            "module": "src/classes/state.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/classes/units.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "Units",
          "members": [
            {
              "kind": "field",
              "name": "size",
              "static": true,
              "default": "{ centimeters: \"cm\", millimeters: \"mm\", quarterMillimeters: \"Q\", inches: \"in\", picas: \"pc\", points: \"pt\", pixels: \"px\", percentViewportHeight: \"vh\", percentViewportWidth: \"vw\", }",
              "type": {
                "text": "{\r\n    centimeters: \"cm\",\r\n    millimeters: \"mm\",\r\n    quarterMillimeters: \"Q\",\r\n    inches: \"in\",\r\n    picas: \"pc\",\r\n    points: \"pt\",\r\n    pixels: \"px\",\r\n    percentViewportHeight: \"vh\",\r\n    percentViewportWidth: \"vw\",\r\n  }"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "Units",
          "declaration": {
            "name": "Units",
            "module": "src/classes/units.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/classes/vector2d.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "Vector2DBase",
          "members": [
            {
              "kind": "field",
              "name": "#x",
              "privacy": "private",
              "type": {
                "text": "number"
              },
              "default": "x"
            },
            {
              "kind": "field",
              "name": "#y",
              "privacy": "private",
              "type": {
                "text": "number"
              },
              "default": "y"
            },
            {
              "kind": "field",
              "name": "x"
            },
            {
              "kind": "field",
              "name": "y"
            }
          ]
        },
        {
          "kind": "class",
          "description": "",
          "name": "Vector2D",
          "members": [
            {
              "kind": "method",
              "name": "copy"
            },
            {
              "kind": "method",
              "name": "equals",
              "parameters": [
                {
                  "name": "x",
                  "type": {
                    "text": "number"
                  }
                },
                {
                  "name": "y",
                  "type": {
                    "text": "number"
                  }
                }
              ],
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "inheritedFrom": {
                "name": "State",
                "module": "src/classes/state.ts"
              }
            },
            {
              "kind": "method",
              "name": "equals",
              "parameters": [
                {
                  "name": "x",
                  "type": {
                    "text": "number"
                  }
                },
                {
                  "name": "y",
                  "type": {
                    "text": "number"
                  }
                }
              ],
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "inheritedFrom": {
                "name": "State",
                "module": "src/classes/state.ts"
              }
            },
            {
              "kind": "method",
              "name": "equals",
              "parameters": [
                {
                  "name": "x",
                  "type": {
                    "text": "number"
                  }
                },
                {
                  "name": "y",
                  "type": {
                    "text": "number"
                  }
                }
              ],
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "inheritedFrom": {
                "name": "State",
                "module": "src/classes/state.ts"
              }
            },
            {
              "kind": "field",
              "name": "inverse",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "one",
              "static": true,
              "readonly": true
            },
            {
              "kind": "method",
              "name": "minus",
              "return": {
                "type": {
                  "text": "Vector2D"
                }
              },
              "parameters": [
                {
                  "name": "x",
                  "type": {
                    "text": "number"
                  }
                },
                {
                  "name": "y",
                  "type": {
                    "text": "number"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "minus",
              "return": {
                "type": {
                  "text": "Vector2D"
                }
              },
              "parameters": [
                {
                  "name": "other",
                  "type": {
                    "text": "Vector2D"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "minus",
              "parameters": [
                {
                  "name": "arg1",
                  "type": {
                    "text": "Vector2D | number"
                  }
                },
                {
                  "name": "arg2",
                  "optional": true,
                  "type": {
                    "text": "number"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "plus",
              "return": {
                "type": {
                  "text": "Vector2D"
                }
              },
              "parameters": [
                {
                  "name": "x",
                  "type": {
                    "text": "number"
                  }
                },
                {
                  "name": "y",
                  "type": {
                    "text": "number"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "plus",
              "return": {
                "type": {
                  "text": "Vector2D"
                }
              },
              "parameters": [
                {
                  "name": "other",
                  "type": {
                    "text": "Vector2D"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "plus",
              "parameters": [
                {
                  "name": "arg1",
                  "type": {
                    "text": "Vector2D | number"
                  }
                },
                {
                  "name": "arg2",
                  "optional": true,
                  "type": {
                    "text": "number"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "toString"
            },
            {
              "kind": "method",
              "name": "xy",
              "static": true,
              "parameters": [
                {
                  "name": "x",
                  "type": {
                    "text": "number"
                  }
                },
                {
                  "name": "y",
                  "type": {
                    "text": "number"
                  }
                }
              ]
            },
            {
              "kind": "field",
              "name": "x"
            },
            {
              "kind": "field",
              "name": "y"
            },
            {
              "kind": "field",
              "name": "zero",
              "static": true,
              "readonly": true
            },
            {
              "kind": "field",
              "name": "#listeners",
              "privacy": "private",
              "default": "new Set<ChangeListener<T>>()",
              "inheritedFrom": {
                "name": "State",
                "module": "src/classes/state.ts"
              }
            },
            {
              "kind": "field",
              "name": "#value",
              "privacy": "private",
              "type": {
                "text": "T"
              },
              "default": "initialValue",
              "inheritedFrom": {
                "name": "State",
                "module": "src/classes/state.ts"
              }
            },
            {
              "kind": "method",
              "name": "addChangeListener",
              "parameters": [
                {
                  "name": "listener",
                  "type": {
                    "text": "ChangeListener<T>"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "State",
                "module": "src/classes/state.ts"
              }
            },
            {
              "kind": "method",
              "name": "removeChangeListener",
              "parameters": [
                {
                  "name": "listener",
                  "type": {
                    "text": "ChangeListener<T>"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "State",
                "module": "src/classes/state.ts"
              }
            },
            {
              "kind": "method",
              "name": "handleChange",
              "inheritedFrom": {
                "name": "State",
                "module": "src/classes/state.ts"
              }
            },
            {
              "kind": "method",
              "name": "replace",
              "parameters": [
                {
                  "name": "other",
                  "type": {
                    "text": "O"
                  }
                },
                {
                  "name": "changeListener",
                  "type": {
                    "text": "ChangeListener<T>"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "State",
                "module": "src/classes/state.ts"
              }
            },
            {
              "kind": "field",
              "name": "value",
              "inheritedFrom": {
                "name": "State",
                "module": "src/classes/state.ts"
              }
            }
          ],
          "superclass": {
            "name": "State",
            "module": "/src/classes/state"
          }
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "Vector2DBase",
          "declaration": {
            "name": "Vector2DBase",
            "module": "src/classes/vector2d.ts"
          }
        },
        {
          "kind": "js",
          "name": "Vector2D",
          "declaration": {
            "name": "Vector2D",
            "module": "src/classes/vector2d.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/mixins/children.ts",
      "declarations": [
        {
          "kind": "mixin",
          "description": "",
          "name": "standaloneChildren",
          "members": [
            {
              "kind": "method",
              "name": "bezier",
              "return": {
                "type": {
                  "text": "Canvas2DBezier"
                }
              },
              "parameters": [
                {
                  "name": "options",
                  "optional": true,
                  "type": {
                    "text": "Options<Canvas2DBezier>"
                  }
                }
              ],
              "description": "Creates a `<c2d-bezier>` child element and returns it."
            },
            {
              "kind": "method",
              "name": "ellipse",
              "return": {
                "type": {
                  "text": "Canvas2DEllipse"
                }
              },
              "parameters": [
                {
                  "name": "options",
                  "optional": true,
                  "type": {
                    "text": "Options<Canvas2DEllipse>"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "image",
              "return": {
                "type": {
                  "text": "Canvas2DImage"
                }
              },
              "parameters": [
                {
                  "name": "options",
                  "optional": true,
                  "type": {
                    "text": "Options<Canvas2DImage>"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "multiple",
              "return": {
                "type": {
                  "text": "Node[]"
                }
              },
              "parameters": [
                {
                  "name": "callback",
                  "type": {
                    "text": "MultipleCallback"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "multiple",
              "return": {
                "type": {
                  "text": "Node[]"
                }
              },
              "parameters": [
                {
                  "name": "count",
                  "type": {
                    "text": "number"
                  }
                },
                {
                  "name": "callback",
                  "type": {
                    "text": "(index: number) => Node"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "multiple",
              "return": {
                "type": {
                  "text": "Node[]"
                }
              },
              "parameters": [
                {
                  "name": "arg1",
                  "type": {
                    "text": "A1"
                  }
                },
                {
                  "name": "arg2",
                  "optional": true,
                  "type": {
                    "text": "A2"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "line",
              "return": {
                "type": {
                  "text": "Canvas2DLine"
                }
              },
              "parameters": [
                {
                  "name": "options",
                  "optional": true,
                  "type": {
                    "text": "Options<Canvas2DLine>"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "rectangle",
              "return": {
                "type": {
                  "text": "Canvas2DRectangle"
                }
              },
              "parameters": [
                {
                  "name": "options",
                  "optional": true,
                  "type": {
                    "text": "Options<Canvas2DRectangle>"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "shape",
              "return": {
                "type": {
                  "text": "Canvas2DShape"
                }
              },
              "parameters": [
                {
                  "name": "options",
                  "optional": true,
                  "type": {
                    "text": "Options<Canvas2DShape>"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "text",
              "return": {
                "type": {
                  "text": "Canvas2DText"
                }
              },
              "parameters": [
                {
                  "name": "options",
                  "optional": true,
                  "type": {
                    "text": "Options<Canvas2DText>"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "video",
              "return": {
                "type": {
                  "text": "Canvas2DVideo"
                }
              },
              "parameters": [
                {
                  "name": "options",
                  "optional": true,
                  "type": {
                    "text": "Options<Canvas2DVideo>"
                  }
                }
              ]
            }
          ],
          "parameters": [
            {
              "name": "Base",
              "type": {
                "text": "B"
              }
            }
          ]
        },
        {
          "kind": "mixin",
          "description": "",
          "name": "partChildren",
          "members": [
            {
              "kind": "method",
              "name": "bezier",
              "parameters": [
                {
                  "name": "options",
                  "optional": true,
                  "type": {
                    "text": "Options<Canvas2DShapeBezier>"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "ellipse",
              "parameters": [
                {
                  "name": "options",
                  "optional": true,
                  "type": {
                    "text": "Options<Canvas2DShapeEllipse>"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "line",
              "parameters": [
                {
                  "name": "options",
                  "optional": true,
                  "type": {
                    "text": "Options<Canvas2DShapeLine>"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "rectangle",
              "parameters": [
                {
                  "name": "options",
                  "optional": true,
                  "type": {
                    "text": "Options<Canvas2DShapeRectangle>"
                  }
                }
              ]
            }
          ],
          "parameters": [
            {
              "name": "Base",
              "type": {
                "text": "B"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "standaloneChildren",
          "declaration": {
            "name": "standaloneChildren",
            "module": "src/mixins/children.ts"
          }
        },
        {
          "kind": "js",
          "name": "partChildren",
          "declaration": {
            "name": "partChildren",
            "module": "src/mixins/children.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/mixins/dimensions.ts",
      "declarations": [
        {
          "kind": "mixin",
          "description": "",
          "name": "hasDimensions",
          "members": [
            {
              "kind": "field",
              "name": "#width",
              "privacy": "private",
              "type": {
                "text": "number"
              },
              "default": "100"
            },
            {
              "kind": "field",
              "name": "#height",
              "privacy": "private",
              "type": {
                "text": "number"
              },
              "default": "100"
            },
            {
              "kind": "field",
              "name": "width"
            },
            {
              "kind": "field",
              "name": "height"
            }
          ],
          "parameters": [
            {
              "name": "Base",
              "type": {
                "text": "B"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "hasDimensions",
          "declaration": {
            "name": "hasDimensions",
            "module": "src/mixins/dimensions.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/mixins/fill.ts",
      "declarations": [
        {
          "kind": "mixin",
          "description": "",
          "name": "fillable",
          "members": [
            {
              "kind": "field",
              "name": "#fill",
              "privacy": "private",
              "type": {
                "text": "DrawStyle | null"
              },
              "default": "null"
            },
            {
              "kind": "field",
              "name": "fill",
              "type": {
                "text": "DrawStyle | null"
              },
              "description": "The rendering style inside the element. This may be a color or gradient.\r\nWhen set to null, the parent element's style is used. When\r\nset to \"none\", the inside will be transparent.",
              "reflects": true,
              "attribute": "fill"
            },
            {
              "kind": "method",
              "name": "render",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "canvas2D",
                  "type": {
                    "text": "Canvas2DCanvasElement"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "afterRender",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "canvas2D",
                  "type": {
                    "text": "Canvas2DCanvasElement"
                  }
                }
              ]
            }
          ],
          "attributes": [
            {
              "name": "fill",
              "type": {
                "text": "DrawStyle | null"
              },
              "description": "The rendering style inside the element. This may be a color or gradient.\r\nWhen set to null, the parent element's style is used. When\r\nset to \"none\", the inside will be transparent.",
              "fieldName": "fill"
            }
          ],
          "parameters": [
            {
              "name": "Base",
              "type": {
                "text": "B"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "fillable",
          "declaration": {
            "name": "fillable",
            "module": "src/mixins/fill.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/mixins/font.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "fontSizeUnits",
          "type": {
            "text": "{\r\n  ...Units.size,\r\n  capHeight: \"cap\",\r\n  characterWidth: \"ch\",\r\n  calculated: \"em\",\r\n  xHeight: \"ex\",\r\n  characterHeight: \"ic\",\r\n  lineHeight: \"lh\",\r\n  rootCapHeight: \"rcap\",\r\n  rootCharacterWidth: \"rch\",\r\n  rootSize: \"rem\",\r\n  rootXHeight: \"rex\",\r\n  rootCharacterHeight: \"ic\",\r\n  rootLineHeight: \"rlh\",\r\n}"
          },
          "default": "{ ...Units.size, capHeight: \"cap\", characterWidth: \"ch\", calculated: \"em\", xHeight: \"ex\", characterHeight: \"ic\", lineHeight: \"lh\", rootCapHeight: \"rcap\", rootCharacterWidth: \"rch\", rootSize: \"rem\", rootXHeight: \"rex\", rootCharacterHeight: \"ic\", rootLineHeight: \"rlh\", }"
        },
        {
          "kind": "mixin",
          "description": "",
          "name": "useFont",
          "members": [
            {
              "kind": "field",
              "name": "#fontFamily",
              "privacy": "private",
              "type": {
                "text": "string | null"
              },
              "default": "null"
            },
            {
              "kind": "field",
              "name": "#kerning",
              "privacy": "private",
              "type": {
                "text": "CanvasFontKerning | null"
              },
              "default": "null"
            },
            {
              "kind": "field",
              "name": "#size",
              "privacy": "private",
              "type": {
                "text": "number | null"
              },
              "default": "null"
            },
            {
              "kind": "field",
              "name": "#sizeUnit",
              "privacy": "private",
              "type": {
                "text": "FontSizeUnit"
              },
              "default": "\"px\""
            },
            {
              "kind": "field",
              "name": "#stretch",
              "privacy": "private",
              "type": {
                "text": "CanvasFontStretch | null"
              },
              "default": "null"
            },
            {
              "kind": "field",
              "name": "#fontStyle",
              "privacy": "private",
              "type": {
                "text": "FontStyle | null"
              },
              "default": "null"
            },
            {
              "kind": "field",
              "name": "sizeUnit",
              "static": true,
              "default": "{ ...Units.size, capHeight: \"cap\", characterWidth: \"ch\", calculated: \"em\", xHeight: \"ex\", characterHeight: \"ic\", lineHeight: \"lh\", rootCapHeight: \"rcap\", rootCharacterWidth: \"rch\", rootSize: \"rem\", rootXHeight: \"rex\", rootCharacterHeight: \"ic\", rootLineHeight: \"rlh\", }",
              "type": {
                "text": "{\r\n  ...Units.size,\r\n  capHeight: \"cap\",\r\n  characterWidth: \"ch\",\r\n  calculated: \"em\",\r\n  xHeight: \"ex\",\r\n  characterHeight: \"ic\",\r\n  lineHeight: \"lh\",\r\n  rootCapHeight: \"rcap\",\r\n  rootCharacterWidth: \"rch\",\r\n  rootSize: \"rem\",\r\n  rootXHeight: \"rex\",\r\n  rootCharacterHeight: \"ic\",\r\n  rootLineHeight: \"rlh\",\r\n}"
              }
            },
            {
              "kind": "field",
              "name": "stretch",
              "type": {
                "text": "{ [key: string]: CanvasFontStretch }"
              },
              "static": true,
              "default": "{ normal: \"normal\", ultraCondensed: \"ultra-condensed\", extraCondensed: \"extra-condensed\", condensed: \"condensed\", expanded: \"expanded\", extraExpanded: \"extra-expanded\", ultraExpanded: \"ultra-expanded\", }"
            },
            {
              "kind": "field",
              "name": "style",
              "static": true,
              "default": "{ normal: \"normal\", italic: \"italic\", oblique: \"oblique\", }",
              "type": {
                "text": "{\r\n  normal: \"normal\",\r\n  italic: \"italic\",\r\n  oblique: \"oblique\",\r\n}"
              }
            },
            {
              "kind": "field",
              "name": "fontFamily"
            },
            {
              "kind": "field",
              "name": "fontStyle"
            },
            {
              "kind": "field",
              "name": "kerning"
            },
            {
              "kind": "method",
              "name": "render",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "canvas2D",
                  "type": {
                    "text": "Canvas2DCanvasElement"
                  }
                }
              ]
            },
            {
              "kind": "field",
              "name": "size"
            },
            {
              "kind": "field",
              "name": "sizeUnit"
            },
            {
              "kind": "field",
              "name": "sizeString",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "stretch"
            }
          ],
          "attributes": [
            {
              "name": "size"
            },
            {
              "name": "stretch"
            },
            {
              "name": "font-family"
            },
            {
              "name": "font-style"
            },
            {
              "name": "kerning"
            }
          ],
          "parameters": [
            {
              "name": "Base",
              "type": {
                "text": "B"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "fontSizeUnits",
          "declaration": {
            "name": "fontSizeUnits",
            "module": "src/mixins/font.ts"
          }
        },
        {
          "kind": "js",
          "name": "useFont",
          "declaration": {
            "name": "useFont",
            "module": "src/mixins/font.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/mixins/fromTo.ts",
      "declarations": [
        {
          "kind": "mixin",
          "description": "",
          "name": "hasTo",
          "members": [
            {
              "kind": "field",
              "name": "#to",
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "to",
              "description": "End point of the element relative to its anchor.",
              "reflects": true,
              "attribute": "to"
            },
            {
              "kind": "field",
              "name": "#anchor",
              "privacy": "private",
              "inheritedFrom": {
                "name": "transformeable",
                "module": "src/mixins/transform.ts"
              }
            },
            {
              "kind": "field",
              "name": "#angle",
              "privacy": "private",
              "inheritedFrom": {
                "name": "transformeable",
                "module": "src/mixins/transform.ts"
              }
            },
            {
              "kind": "field",
              "name": "#angularVelocity",
              "privacy": "private",
              "inheritedFrom": {
                "name": "transformeable",
                "module": "src/mixins/transform.ts"
              }
            },
            {
              "kind": "field",
              "name": "#scale",
              "privacy": "private",
              "inheritedFrom": {
                "name": "transformeable",
                "module": "src/mixins/transform.ts"
              }
            },
            {
              "kind": "field",
              "name": "#velocity",
              "privacy": "private",
              "inheritedFrom": {
                "name": "transformeable",
                "module": "src/mixins/transform.ts"
              }
            },
            {
              "kind": "field",
              "name": "#angleChangeListener",
              "privacy": "private",
              "type": {
                "text": "ChangeListener<number>"
              },
              "inheritedFrom": {
                "name": "transformeable",
                "module": "src/mixins/transform.ts"
              }
            },
            {
              "kind": "field",
              "name": "angle",
              "type": {
                "text": "Angle"
              },
              "description": "Clockwise rotation of the element around its anchor.",
              "reflects": true,
              "attribute": "angle",
              "inheritedFrom": {
                "name": "transformeable",
                "module": "src/mixins/transform.ts"
              }
            },
            {
              "kind": "field",
              "name": "#angularVelocityChangedTime",
              "privacy": "private",
              "type": {
                "text": "number"
              },
              "default": "-1",
              "inheritedFrom": {
                "name": "transformeable",
                "module": "src/mixins/transform.ts"
              }
            },
            {
              "kind": "field",
              "name": "angularVelocity",
              "type": {
                "text": "Angle"
              },
              "description": "Clockwise rotation per second.",
              "reflects": true,
              "attribute": "angular-velocity",
              "inheritedFrom": {
                "name": "transformeable",
                "module": "src/mixins/transform.ts"
              }
            },
            {
              "kind": "field",
              "name": "anchor",
              "type": {
                "text": "Vector2D"
              },
              "description": "Base position of the element relative to its parent's anchor.",
              "reflects": true,
              "attribute": "anchor",
              "inheritedFrom": {
                "name": "transformeable",
                "module": "src/mixins/transform.ts"
              }
            },
            {
              "kind": "field",
              "name": "#anchorChangeListener",
              "privacy": "private",
              "type": {
                "text": "ChangeListener<Vector2DBase>"
              },
              "inheritedFrom": {
                "name": "transformeable",
                "module": "src/mixins/transform.ts"
              }
            },
            {
              "kind": "method",
              "name": "moveAnchor",
              "parameters": [
                {
                  "name": "x",
                  "type": {
                    "text": "number"
                  }
                },
                {
                  "name": "y",
                  "type": {
                    "text": "number"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "transformeable",
                "module": "src/mixins/transform.ts"
              }
            },
            {
              "kind": "method",
              "name": "render",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "canvas2D",
                  "type": {
                    "text": "Canvas2DCanvasElement"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "transformeable",
                "module": "src/mixins/transform.ts"
              }
            },
            {
              "kind": "method",
              "name": "afterRender",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "canvas2D",
                  "type": {
                    "text": "Canvas2DCanvasElement"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "transformeable",
                "module": "src/mixins/transform.ts"
              }
            },
            {
              "kind": "method",
              "name": "rotateClockwise",
              "parameters": [
                {
                  "name": "angle",
                  "type": {
                    "text": "Angle"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "transformeable",
                "module": "src/mixins/transform.ts"
              }
            },
            {
              "kind": "method",
              "name": "rotateCounterclockwise",
              "parameters": [
                {
                  "name": "angle",
                  "type": {
                    "text": "Angle"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "transformeable",
                "module": "src/mixins/transform.ts"
              }
            },
            {
              "kind": "field",
              "name": "scale",
              "inheritedFrom": {
                "name": "transformeable",
                "module": "src/mixins/transform.ts"
              }
            },
            {
              "kind": "field",
              "name": "#velocityChangedTime",
              "privacy": "private",
              "type": {
                "text": "number"
              },
              "default": "-1",
              "inheritedFrom": {
                "name": "transformeable",
                "module": "src/mixins/transform.ts"
              }
            },
            {
              "kind": "field",
              "name": "velocity",
              "type": {
                "text": "Vector2D"
              },
              "description": "Anchor movement per second.",
              "reflects": true,
              "attribute": "velocity",
              "inheritedFrom": {
                "name": "transformeable",
                "module": "src/mixins/transform.ts"
              }
            }
          ],
          "attributes": [
            {
              "name": "to",
              "description": "End point of the element relative to its anchor.",
              "fieldName": "to"
            },
            {
              "name": "angle",
              "type": {
                "text": "Angle"
              },
              "description": "Clockwise rotation of the element around its anchor.",
              "fieldName": "angle",
              "inheritedFrom": {
                "name": "transformeable",
                "module": "src/mixins/transform.ts"
              }
            },
            {
              "name": "angular-velocity",
              "type": {
                "text": "Angle"
              },
              "description": "Clockwise rotation per second.",
              "fieldName": "angularVelocity",
              "inheritedFrom": {
                "name": "transformeable",
                "module": "src/mixins/transform.ts"
              }
            },
            {
              "name": "anchor",
              "type": {
                "text": "Vector2D"
              },
              "description": "Base position of the element relative to its parent's anchor.",
              "fieldName": "anchor",
              "inheritedFrom": {
                "name": "transformeable",
                "module": "src/mixins/transform.ts"
              }
            },
            {
              "name": "scale",
              "inheritedFrom": {
                "name": "transformeable",
                "module": "src/mixins/transform.ts"
              }
            },
            {
              "name": "velocity",
              "type": {
                "text": "Vector2D"
              },
              "description": "Anchor movement per second.",
              "fieldName": "velocity",
              "inheritedFrom": {
                "name": "transformeable",
                "module": "src/mixins/transform.ts"
              }
            }
          ],
          "mixins": [
            {
              "name": "transformeable",
              "module": "/src/mixins/transform"
            }
          ],
          "parameters": [
            {
              "name": "Base",
              "type": {
                "text": "B"
              }
            }
          ]
        },
        {
          "kind": "mixin",
          "description": "",
          "name": "hasFrom",
          "members": [
            {
              "kind": "field",
              "name": "#from",
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "from",
              "type": {
                "text": "Vector2D"
              },
              "description": "Starting point of the element relative to its anchor.",
              "reflects": true,
              "attribute": "from"
            }
          ],
          "attributes": [
            {
              "name": "from",
              "type": {
                "text": "Vector2D"
              },
              "description": "Starting point of the element relative to its anchor.",
              "fieldName": "from"
            }
          ],
          "parameters": [
            {
              "name": "Base",
              "type": {
                "text": "B"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "hasTo",
          "declaration": {
            "name": "hasTo",
            "module": "src/mixins/fromTo.ts"
          }
        },
        {
          "kind": "js",
          "name": "hasFrom",
          "declaration": {
            "name": "hasFrom",
            "module": "src/mixins/fromTo.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/mixins/offset.ts",
      "declarations": [
        {
          "kind": "mixin",
          "description": "",
          "name": "offset",
          "members": [
            {
              "kind": "field",
              "name": "#offset",
              "privacy": "private",
              "default": "new Vector2D(0, 0)"
            },
            {
              "kind": "method",
              "name": "moveOffset",
              "parameters": [
                {
                  "name": "x",
                  "type": {
                    "text": "number"
                  }
                },
                {
                  "name": "y",
                  "type": {
                    "text": "number"
                  }
                }
              ]
            },
            {
              "kind": "field",
              "name": "#offsetChangeListener",
              "privacy": "private",
              "type": {
                "text": "ChangeListener<Vector2DBase>"
              }
            },
            {
              "kind": "field",
              "name": "offset",
              "type": {
                "text": "Vector2D"
              },
              "description": "Position of the element's origin relative to its anchor.",
              "reflects": true,
              "attribute": "offset"
            }
          ],
          "attributes": [
            {
              "name": "offset",
              "type": {
                "text": "Vector2D"
              },
              "description": "Position of the element's origin relative to its anchor.",
              "fieldName": "offset"
            }
          ],
          "parameters": [
            {
              "name": "Base",
              "type": {
                "text": "B"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "offset",
          "declaration": {
            "name": "offset",
            "module": "src/mixins/offset.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/mixins/rectangleBounds.ts",
      "declarations": [
        {
          "kind": "mixin",
          "description": "",
          "name": "hasRectangleBounds",
          "members": [
            {
              "kind": "field",
              "name": "#origin",
              "privacy": "private",
              "type": {
                "text": "Origin"
              },
              "default": "\"topLeft\""
            },
            {
              "kind": "field",
              "name": "topLeft",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "topRight",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "center",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "bottomLeft",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "bottomRight",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "origin"
            },
            {
              "kind": "method",
              "name": "renderConicalGradient",
              "return": {
                "type": {
                  "text": "CanvasGradient"
                }
              },
              "parameters": [
                {
                  "name": "context",
                  "type": {
                    "text": "CanvasRenderingContext2D"
                  }
                },
                {
                  "name": "gradient",
                  "type": {
                    "text": "ConicalGradient"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "renderLinearGradient",
              "return": {
                "type": {
                  "text": "CanvasGradient"
                }
              },
              "parameters": [
                {
                  "name": "context",
                  "type": {
                    "text": "CanvasRenderingContext2D"
                  }
                },
                {
                  "name": "gradient",
                  "type": {
                    "text": "LinearGradient"
                  }
                }
              ]
            },
            {
              "kind": "field",
              "name": "#width",
              "privacy": "private",
              "type": {
                "text": "number"
              },
              "default": "100",
              "inheritedFrom": {
                "name": "hasDimensions",
                "module": "src/mixins/dimensions.ts"
              }
            },
            {
              "kind": "field",
              "name": "#height",
              "privacy": "private",
              "type": {
                "text": "number"
              },
              "default": "100",
              "inheritedFrom": {
                "name": "hasDimensions",
                "module": "src/mixins/dimensions.ts"
              }
            },
            {
              "kind": "field",
              "name": "width",
              "inheritedFrom": {
                "name": "hasDimensions",
                "module": "src/mixins/dimensions.ts"
              }
            },
            {
              "kind": "field",
              "name": "height",
              "inheritedFrom": {
                "name": "hasDimensions",
                "module": "src/mixins/dimensions.ts"
              }
            },
            {
              "kind": "field",
              "name": "#offset",
              "privacy": "private",
              "default": "new Vector2D(0, 0)",
              "inheritedFrom": {
                "name": "offset",
                "module": "src/mixins/offset.ts"
              }
            },
            {
              "kind": "method",
              "name": "moveOffset",
              "parameters": [
                {
                  "name": "x",
                  "type": {
                    "text": "number"
                  }
                },
                {
                  "name": "y",
                  "type": {
                    "text": "number"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "offset",
                "module": "src/mixins/offset.ts"
              }
            },
            {
              "kind": "field",
              "name": "#offsetChangeListener",
              "privacy": "private",
              "type": {
                "text": "ChangeListener<Vector2DBase>"
              },
              "inheritedFrom": {
                "name": "offset",
                "module": "src/mixins/offset.ts"
              }
            },
            {
              "kind": "field",
              "name": "offset",
              "type": {
                "text": "Vector2D"
              },
              "description": "Position of the element's origin relative to its anchor.",
              "reflects": true,
              "attribute": "offset",
              "inheritedFrom": {
                "name": "offset",
                "module": "src/mixins/offset.ts"
              }
            }
          ],
          "mixins": [
            {
              "name": "hasDimensions",
              "module": "/src/mixins/dimensions"
            },
            {
              "name": "offset",
              "module": "/src/mixins/offset"
            }
          ],
          "parameters": [
            {
              "name": "Base",
              "type": {
                "text": "B"
              }
            }
          ],
          "attributes": [
            {
              "name": "offset",
              "type": {
                "text": "Vector2D"
              },
              "description": "Position of the element's origin relative to its anchor.",
              "fieldName": "offset",
              "inheritedFrom": {
                "name": "offset",
                "module": "src/mixins/offset.ts"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "hasRectangleBounds",
          "declaration": {
            "name": "hasRectangleBounds",
            "module": "src/mixins/rectangleBounds.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/mixins/stroke.ts",
      "declarations": [
        {
          "kind": "mixin",
          "description": "",
          "name": "strokeable",
          "members": [
            {
              "kind": "field",
              "name": "#stroke",
              "privacy": "private",
              "type": {
                "text": "DrawStyle | null"
              },
              "default": "null"
            },
            {
              "kind": "field",
              "name": "#lineWidth",
              "privacy": "private",
              "type": {
                "text": "number | null"
              },
              "default": "null"
            },
            {
              "kind": "field",
              "name": "lineWidth",
              "type": {
                "text": "number | null"
              },
              "description": "Width in pixels for drawing lines.",
              "reflects": true,
              "attribute": "line-width"
            },
            {
              "kind": "field",
              "name": "stroke",
              "type": {
                "text": "DrawStyle | null"
              },
              "description": "The rendering style for lines. This may be a color or gradient.\r\nWhen set to null, the parent element's style is used. When\r\nset to \"none\", no lines will be drawn.",
              "reflects": true,
              "attribute": "stroke"
            },
            {
              "kind": "method",
              "name": "render",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "canvas2D",
                  "type": {
                    "text": "Canvas2DCanvasElement"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "afterRender",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "canvas2D",
                  "type": {
                    "text": "Canvas2DCanvasElement"
                  }
                }
              ]
            }
          ],
          "attributes": [
            {
              "name": "stroke",
              "type": {
                "text": "DrawStyle | null"
              },
              "description": "The rendering style for lines. This may be a color or gradient.\r\nWhen set to null, the parent element's style is used. When\r\nset to \"none\", no lines will be drawn.",
              "fieldName": "stroke"
            },
            {
              "name": "line-width",
              "type": {
                "text": "number | null"
              },
              "description": "Width in pixels for drawing lines.",
              "fieldName": "lineWidth"
            }
          ],
          "parameters": [
            {
              "name": "Base",
              "type": {
                "text": "B"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "strokeable",
          "declaration": {
            "name": "strokeable",
            "module": "src/mixins/stroke.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/mixins/transform.ts",
      "declarations": [
        {
          "kind": "mixin",
          "description": "",
          "name": "transformeable",
          "members": [
            {
              "kind": "field",
              "name": "#anchor",
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "#angle",
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "#angularVelocity",
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "#scale",
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "#velocity",
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "#angleChangeListener",
              "privacy": "private",
              "type": {
                "text": "ChangeListener<number>"
              }
            },
            {
              "kind": "field",
              "name": "angle",
              "type": {
                "text": "Angle"
              },
              "description": "Clockwise rotation of the element around its anchor.",
              "reflects": true,
              "attribute": "angle"
            },
            {
              "kind": "field",
              "name": "#angularVelocityChangedTime",
              "privacy": "private",
              "type": {
                "text": "number"
              },
              "default": "-1"
            },
            {
              "kind": "field",
              "name": "angularVelocity",
              "type": {
                "text": "Angle"
              },
              "description": "Clockwise rotation per second.",
              "reflects": true,
              "attribute": "angular-velocity"
            },
            {
              "kind": "field",
              "name": "anchor",
              "type": {
                "text": "Vector2D"
              },
              "description": "Base position of the element relative to its parent's anchor.",
              "reflects": true,
              "attribute": "anchor"
            },
            {
              "kind": "field",
              "name": "#anchorChangeListener",
              "privacy": "private",
              "type": {
                "text": "ChangeListener<Vector2DBase>"
              }
            },
            {
              "kind": "method",
              "name": "moveAnchor",
              "parameters": [
                {
                  "name": "x",
                  "type": {
                    "text": "number"
                  }
                },
                {
                  "name": "y",
                  "type": {
                    "text": "number"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "render",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "canvas2D",
                  "type": {
                    "text": "Canvas2DCanvasElement"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "afterRender",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "canvas2D",
                  "type": {
                    "text": "Canvas2DCanvasElement"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "rotateClockwise",
              "parameters": [
                {
                  "name": "angle",
                  "type": {
                    "text": "Angle"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "rotateCounterclockwise",
              "parameters": [
                {
                  "name": "angle",
                  "type": {
                    "text": "Angle"
                  }
                }
              ]
            },
            {
              "kind": "field",
              "name": "scale"
            },
            {
              "kind": "field",
              "name": "#velocityChangedTime",
              "privacy": "private",
              "type": {
                "text": "number"
              },
              "default": "-1"
            },
            {
              "kind": "field",
              "name": "velocity",
              "type": {
                "text": "Vector2D"
              },
              "description": "Anchor movement per second.",
              "reflects": true,
              "attribute": "velocity"
            }
          ],
          "attributes": [
            {
              "name": "angle",
              "type": {
                "text": "Angle"
              },
              "description": "Clockwise rotation of the element around its anchor.",
              "fieldName": "angle"
            },
            {
              "name": "angular-velocity",
              "type": {
                "text": "Angle"
              },
              "description": "Clockwise rotation per second.",
              "fieldName": "angularVelocity"
            },
            {
              "name": "anchor",
              "type": {
                "text": "Vector2D"
              },
              "description": "Base position of the element relative to its parent's anchor.",
              "fieldName": "anchor"
            },
            {
              "name": "scale"
            },
            {
              "name": "velocity",
              "type": {
                "text": "Vector2D"
              },
              "description": "Anchor movement per second.",
              "fieldName": "velocity"
            }
          ],
          "parameters": [
            {
              "name": "Base",
              "type": {
                "text": "B"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "transformeable",
          "declaration": {
            "name": "transformeable",
            "module": "src/mixins/transform.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/mixins/visualMedia.ts",
      "declarations": [
        {
          "kind": "mixin",
          "description": "",
          "name": "rendersVisualMedia",
          "members": [
            {
              "kind": "field",
              "name": "#mediaElement",
              "privacy": "private",
              "type": {
                "text": "HTMLElementTagNameMap[T]"
              }
            },
            {
              "kind": "field",
              "name": "#widthSet",
              "privacy": "private",
              "type": {
                "text": "boolean"
              },
              "default": "false"
            },
            {
              "kind": "field",
              "name": "#heightSet",
              "privacy": "private",
              "type": {
                "text": "boolean"
              },
              "default": "false"
            },
            {
              "kind": "field",
              "name": "mediaElement",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "source"
            },
            {
              "kind": "method",
              "name": "render",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "canvas2D",
                  "type": {
                    "text": "Canvas2DCanvasElement"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "transformeable",
                "module": "src/mixins/transform.ts"
              }
            },
            {
              "kind": "field",
              "name": "mediaWidth",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "width",
              "inheritedFrom": {
                "name": "hasDimensions",
                "module": "src/mixins/dimensions.ts"
              }
            },
            {
              "kind": "field",
              "name": "mediaHeight",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "height",
              "inheritedFrom": {
                "name": "hasDimensions",
                "module": "src/mixins/dimensions.ts"
              }
            },
            {
              "kind": "field",
              "name": "#anchor",
              "privacy": "private",
              "inheritedFrom": {
                "name": "transformeable",
                "module": "src/mixins/transform.ts"
              }
            },
            {
              "kind": "field",
              "name": "#angle",
              "privacy": "private",
              "inheritedFrom": {
                "name": "transformeable",
                "module": "src/mixins/transform.ts"
              }
            },
            {
              "kind": "field",
              "name": "#angularVelocity",
              "privacy": "private",
              "inheritedFrom": {
                "name": "transformeable",
                "module": "src/mixins/transform.ts"
              }
            },
            {
              "kind": "field",
              "name": "#scale",
              "privacy": "private",
              "inheritedFrom": {
                "name": "transformeable",
                "module": "src/mixins/transform.ts"
              }
            },
            {
              "kind": "field",
              "name": "#velocity",
              "privacy": "private",
              "inheritedFrom": {
                "name": "transformeable",
                "module": "src/mixins/transform.ts"
              }
            },
            {
              "kind": "field",
              "name": "#angleChangeListener",
              "privacy": "private",
              "type": {
                "text": "ChangeListener<number>"
              },
              "inheritedFrom": {
                "name": "transformeable",
                "module": "src/mixins/transform.ts"
              }
            },
            {
              "kind": "field",
              "name": "angle",
              "type": {
                "text": "Angle"
              },
              "description": "Clockwise rotation of the element around its anchor.",
              "reflects": true,
              "attribute": "angle",
              "inheritedFrom": {
                "name": "transformeable",
                "module": "src/mixins/transform.ts"
              }
            },
            {
              "kind": "field",
              "name": "#angularVelocityChangedTime",
              "privacy": "private",
              "type": {
                "text": "number"
              },
              "default": "-1",
              "inheritedFrom": {
                "name": "transformeable",
                "module": "src/mixins/transform.ts"
              }
            },
            {
              "kind": "field",
              "name": "angularVelocity",
              "type": {
                "text": "Angle"
              },
              "description": "Clockwise rotation per second.",
              "reflects": true,
              "attribute": "angular-velocity",
              "inheritedFrom": {
                "name": "transformeable",
                "module": "src/mixins/transform.ts"
              }
            },
            {
              "kind": "field",
              "name": "anchor",
              "type": {
                "text": "Vector2D"
              },
              "description": "Base position of the element relative to its parent's anchor.",
              "reflects": true,
              "attribute": "anchor",
              "inheritedFrom": {
                "name": "transformeable",
                "module": "src/mixins/transform.ts"
              }
            },
            {
              "kind": "field",
              "name": "#anchorChangeListener",
              "privacy": "private",
              "type": {
                "text": "ChangeListener<Vector2DBase>"
              },
              "inheritedFrom": {
                "name": "transformeable",
                "module": "src/mixins/transform.ts"
              }
            },
            {
              "kind": "method",
              "name": "moveAnchor",
              "parameters": [
                {
                  "name": "x",
                  "type": {
                    "text": "number"
                  }
                },
                {
                  "name": "y",
                  "type": {
                    "text": "number"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "transformeable",
                "module": "src/mixins/transform.ts"
              }
            },
            {
              "kind": "method",
              "name": "afterRender",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "canvas2D",
                  "type": {
                    "text": "Canvas2DCanvasElement"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "transformeable",
                "module": "src/mixins/transform.ts"
              }
            },
            {
              "kind": "method",
              "name": "rotateClockwise",
              "parameters": [
                {
                  "name": "angle",
                  "type": {
                    "text": "Angle"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "transformeable",
                "module": "src/mixins/transform.ts"
              }
            },
            {
              "kind": "method",
              "name": "rotateCounterclockwise",
              "parameters": [
                {
                  "name": "angle",
                  "type": {
                    "text": "Angle"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "transformeable",
                "module": "src/mixins/transform.ts"
              }
            },
            {
              "kind": "field",
              "name": "scale",
              "inheritedFrom": {
                "name": "transformeable",
                "module": "src/mixins/transform.ts"
              }
            },
            {
              "kind": "field",
              "name": "#velocityChangedTime",
              "privacy": "private",
              "type": {
                "text": "number"
              },
              "default": "-1",
              "inheritedFrom": {
                "name": "transformeable",
                "module": "src/mixins/transform.ts"
              }
            },
            {
              "kind": "field",
              "name": "velocity",
              "type": {
                "text": "Vector2D"
              },
              "description": "Anchor movement per second.",
              "reflects": true,
              "attribute": "velocity",
              "inheritedFrom": {
                "name": "transformeable",
                "module": "src/mixins/transform.ts"
              }
            },
            {
              "kind": "field",
              "name": "#origin",
              "privacy": "private",
              "type": {
                "text": "Origin"
              },
              "default": "\"topLeft\"",
              "inheritedFrom": {
                "name": "hasRectangleBounds",
                "module": "src/mixins/rectangleBounds.ts"
              }
            },
            {
              "kind": "field",
              "name": "topLeft",
              "readonly": true,
              "inheritedFrom": {
                "name": "hasRectangleBounds",
                "module": "src/mixins/rectangleBounds.ts"
              }
            },
            {
              "kind": "field",
              "name": "topRight",
              "readonly": true,
              "inheritedFrom": {
                "name": "hasRectangleBounds",
                "module": "src/mixins/rectangleBounds.ts"
              }
            },
            {
              "kind": "field",
              "name": "center",
              "readonly": true,
              "inheritedFrom": {
                "name": "hasRectangleBounds",
                "module": "src/mixins/rectangleBounds.ts"
              }
            },
            {
              "kind": "field",
              "name": "bottomLeft",
              "readonly": true,
              "inheritedFrom": {
                "name": "hasRectangleBounds",
                "module": "src/mixins/rectangleBounds.ts"
              }
            },
            {
              "kind": "field",
              "name": "bottomRight",
              "readonly": true,
              "inheritedFrom": {
                "name": "hasRectangleBounds",
                "module": "src/mixins/rectangleBounds.ts"
              }
            },
            {
              "kind": "field",
              "name": "origin",
              "inheritedFrom": {
                "name": "hasRectangleBounds",
                "module": "src/mixins/rectangleBounds.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderConicalGradient",
              "return": {
                "type": {
                  "text": "CanvasGradient"
                }
              },
              "parameters": [
                {
                  "name": "context",
                  "type": {
                    "text": "CanvasRenderingContext2D"
                  }
                },
                {
                  "name": "gradient",
                  "type": {
                    "text": "ConicalGradient"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "hasRectangleBounds",
                "module": "src/mixins/rectangleBounds.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderLinearGradient",
              "return": {
                "type": {
                  "text": "CanvasGradient"
                }
              },
              "parameters": [
                {
                  "name": "context",
                  "type": {
                    "text": "CanvasRenderingContext2D"
                  }
                },
                {
                  "name": "gradient",
                  "type": {
                    "text": "LinearGradient"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "hasRectangleBounds",
                "module": "src/mixins/rectangleBounds.ts"
              }
            },
            {
              "kind": "field",
              "name": "#width",
              "privacy": "private",
              "type": {
                "text": "number"
              },
              "default": "100",
              "inheritedFrom": {
                "name": "hasDimensions",
                "module": "src/mixins/dimensions.ts"
              }
            },
            {
              "kind": "field",
              "name": "#height",
              "privacy": "private",
              "type": {
                "text": "number"
              },
              "default": "100",
              "inheritedFrom": {
                "name": "hasDimensions",
                "module": "src/mixins/dimensions.ts"
              }
            },
            {
              "kind": "field",
              "name": "#offset",
              "privacy": "private",
              "default": "new Vector2D(0, 0)",
              "inheritedFrom": {
                "name": "offset",
                "module": "src/mixins/offset.ts"
              }
            },
            {
              "kind": "method",
              "name": "moveOffset",
              "parameters": [
                {
                  "name": "x",
                  "type": {
                    "text": "number"
                  }
                },
                {
                  "name": "y",
                  "type": {
                    "text": "number"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "offset",
                "module": "src/mixins/offset.ts"
              }
            },
            {
              "kind": "field",
              "name": "#offsetChangeListener",
              "privacy": "private",
              "type": {
                "text": "ChangeListener<Vector2DBase>"
              },
              "inheritedFrom": {
                "name": "offset",
                "module": "src/mixins/offset.ts"
              }
            },
            {
              "kind": "field",
              "name": "offset",
              "type": {
                "text": "Vector2D"
              },
              "description": "Position of the element's origin relative to its anchor.",
              "reflects": true,
              "attribute": "offset",
              "inheritedFrom": {
                "name": "offset",
                "module": "src/mixins/offset.ts"
              }
            }
          ],
          "mixins": [
            {
              "name": "transformeable",
              "module": "/src/mixins/transform"
            },
            {
              "name": "hasRectangleBounds",
              "module": "/src/mixins/rectangleBounds"
            }
          ],
          "parameters": [
            {
              "name": "Base",
              "type": {
                "text": "B"
              }
            },
            {
              "name": "mediaTag",
              "type": {
                "text": "T"
              }
            }
          ],
          "attributes": [
            {
              "name": "angle",
              "type": {
                "text": "Angle"
              },
              "description": "Clockwise rotation of the element around its anchor.",
              "fieldName": "angle",
              "inheritedFrom": {
                "name": "transformeable",
                "module": "src/mixins/transform.ts"
              }
            },
            {
              "name": "angular-velocity",
              "type": {
                "text": "Angle"
              },
              "description": "Clockwise rotation per second.",
              "fieldName": "angularVelocity",
              "inheritedFrom": {
                "name": "transformeable",
                "module": "src/mixins/transform.ts"
              }
            },
            {
              "name": "anchor",
              "type": {
                "text": "Vector2D"
              },
              "description": "Base position of the element relative to its parent's anchor.",
              "fieldName": "anchor",
              "inheritedFrom": {
                "name": "transformeable",
                "module": "src/mixins/transform.ts"
              }
            },
            {
              "name": "scale",
              "inheritedFrom": {
                "name": "transformeable",
                "module": "src/mixins/transform.ts"
              }
            },
            {
              "name": "velocity",
              "type": {
                "text": "Vector2D"
              },
              "description": "Anchor movement per second.",
              "fieldName": "velocity",
              "inheritedFrom": {
                "name": "transformeable",
                "module": "src/mixins/transform.ts"
              }
            },
            {
              "name": "offset",
              "type": {
                "text": "Vector2D"
              },
              "description": "Position of the element's origin relative to its anchor.",
              "fieldName": "offset",
              "inheritedFrom": {
                "name": "offset",
                "module": "src/mixins/offset.ts"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "rendersVisualMedia",
          "declaration": {
            "name": "rendersVisualMedia",
            "module": "src/mixins/visualMedia.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/utlities/attributeParser.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "attributeParser",
          "type": {
            "text": "AttributeTypeParser"
          },
          "default": "{ number(stringValue) { return parseFloat(stringValue); }, Color(stringValue) { const args = stringValue.split(\",\"); const numbers = args.map(attributeParser.number); switch (numbers.length) { case 1: return isNaN(numbers[0]) ? new Color(args[0]) : new Color(numbers[0]); case 2: return new Color(numbers[0], numbers[1]); case 3: return new Color(numbers[0], numbers[1], numbers[2]); case 5: console.warn( `Found ${numbers.length} arguments passed to Color attribute, but the maximum is 4` ); default: return new Color(numbers[0], numbers[1], numbers[2], numbers[3]); } }, FillStrokeStyle(stringValue) { if (stringValue === NONE || stringValue === \"gradient\") return stringValue; return attributeParser.Color(stringValue); }, Vector2D(stringValue) { const numbers = stringValue.split(\",\").map(attributeParser.number); if (numbers.some(Number.isNaN)) throw new Error(`NaN: ${stringValue}`); switch (numbers.length) { case 0: return new Vector2D(); case 1: return new Vector2D(numbers[0]); case 3: console.warn( `Found ${numbers.length} arguments passed to Vecto2D attribute, but the maximum is 2` ); default: return new Vector2D(numbers[0], numbers[1]); } }, Angle(stringValue) { const args = stringValue.match(angleMatch); if (args === null) throw new Error(`Angle arguments could not be parsed: ${stringValue}`); const value = attributeParser.number(args[1]); const unit = args[2] as AngleUnit; return new Angle(unit, value); }, }"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "attributeParser",
          "declaration": {
            "name": "attributeParser",
            "module": "src/utlities/attributeParser.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/utlities/readOnly.ts",
      "declarations": [
        {
          "kind": "function",
          "name": "isReadOnly",
          "parameters": [
            {
              "name": "obj",
              "type": {
                "text": "{}"
              }
            },
            {
              "name": "propertyKey",
              "type": {
                "text": "PropertyKey"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "isReadOnly",
          "declaration": {
            "name": "isReadOnly",
            "module": "src/utlities/readOnly.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/elements/canvas2d/bezier.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "Canvas2DShapeBezier",
          "members": [
            {
              "kind": "field",
              "name": "tag",
              "type": {
                "text": "string"
              },
              "static": true,
              "readonly": true,
              "inheritedFrom": {
                "name": "Canvas2DElement",
                "module": "src/elements/canvas2d/element.ts"
              }
            },
            {
              "kind": "method",
              "name": "render",
              "parameters": [
                {
                  "name": "canvas2D",
                  "type": {
                    "text": "Canvas2DCanvasElement"
                  }
                }
              ],
              "privacy": "private",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "Canvas2DBaseRenderable",
                "module": "src/elements/canvas2d/renderable.ts"
              }
            },
            {
              "kind": "field",
              "name": "#controlA",
              "privacy": "private",
              "inheritedFrom": {
                "name": "hasControlPoints",
                "module": "src/elements/canvas2d/bezier.ts"
              }
            },
            {
              "kind": "field",
              "name": "#controlB",
              "privacy": "private",
              "inheritedFrom": {
                "name": "hasControlPoints",
                "module": "src/elements/canvas2d/bezier.ts"
              }
            },
            {
              "kind": "field",
              "name": "controlA",
              "inheritedFrom": {
                "name": "hasControlPoints",
                "module": "src/elements/canvas2d/bezier.ts"
              }
            },
            {
              "kind": "field",
              "name": "controlB",
              "inheritedFrom": {
                "name": "hasControlPoints",
                "module": "src/elements/canvas2d/bezier.ts"
              }
            },
            {
              "kind": "field",
              "name": "#to",
              "privacy": "private",
              "inheritedFrom": {
                "name": "hasTo",
                "module": "src/mixins/fromTo.ts"
              }
            },
            {
              "kind": "field",
              "name": "to",
              "description": "End point of the element relative to its anchor.",
              "reflects": true,
              "attribute": "to",
              "inheritedFrom": {
                "name": "hasTo",
                "module": "src/mixins/fromTo.ts"
              }
            },
            {
              "kind": "field",
              "name": "#anchor",
              "privacy": "private",
              "inheritedFrom": {
                "name": "transformeable",
                "module": "src/mixins/transform.ts"
              }
            },
            {
              "kind": "field",
              "name": "#angle",
              "privacy": "private",
              "inheritedFrom": {
                "name": "transformeable",
                "module": "src/mixins/transform.ts"
              }
            },
            {
              "kind": "field",
              "name": "#angularVelocity",
              "privacy": "private",
              "inheritedFrom": {
                "name": "transformeable",
                "module": "src/mixins/transform.ts"
              }
            },
            {
              "kind": "field",
              "name": "#scale",
              "privacy": "private",
              "inheritedFrom": {
                "name": "transformeable",
                "module": "src/mixins/transform.ts"
              }
            },
            {
              "kind": "field",
              "name": "#velocity",
              "privacy": "private",
              "inheritedFrom": {
                "name": "transformeable",
                "module": "src/mixins/transform.ts"
              }
            },
            {
              "kind": "field",
              "name": "#angleChangeListener",
              "privacy": "private",
              "type": {
                "text": "ChangeListener<number>"
              },
              "inheritedFrom": {
                "name": "transformeable",
                "module": "src/mixins/transform.ts"
              }
            },
            {
              "kind": "field",
              "name": "angle",
              "type": {
                "text": "Angle"
              },
              "description": "Clockwise rotation of the element around its anchor.",
              "reflects": true,
              "attribute": "angle",
              "inheritedFrom": {
                "name": "transformeable",
                "module": "src/mixins/transform.ts"
              }
            },
            {
              "kind": "field",
              "name": "#angularVelocityChangedTime",
              "privacy": "private",
              "type": {
                "text": "number"
              },
              "default": "-1",
              "inheritedFrom": {
                "name": "transformeable",
                "module": "src/mixins/transform.ts"
              }
            },
            {
              "kind": "field",
              "name": "angularVelocity",
              "type": {
                "text": "Angle"
              },
              "description": "Clockwise rotation per second.",
              "reflects": true,
              "attribute": "angular-velocity",
              "inheritedFrom": {
                "name": "transformeable",
                "module": "src/mixins/transform.ts"
              }
            },
            {
              "kind": "field",
              "name": "anchor",
              "type": {
                "text": "Vector2D"
              },
              "description": "Base position of the element relative to its parent's anchor.",
              "reflects": true,
              "attribute": "anchor",
              "inheritedFrom": {
                "name": "transformeable",
                "module": "src/mixins/transform.ts"
              }
            },
            {
              "kind": "field",
              "name": "#anchorChangeListener",
              "privacy": "private",
              "type": {
                "text": "ChangeListener<Vector2DBase>"
              },
              "inheritedFrom": {
                "name": "transformeable",
                "module": "src/mixins/transform.ts"
              }
            },
            {
              "kind": "method",
              "name": "moveAnchor",
              "parameters": [
                {
                  "name": "x",
                  "type": {
                    "text": "number"
                  }
                },
                {
                  "name": "y",
                  "type": {
                    "text": "number"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "transformeable",
                "module": "src/mixins/transform.ts"
              }
            },
            {
              "kind": "method",
              "name": "afterRender",
              "parameters": [
                {
                  "name": "canvas2D",
                  "type": {
                    "text": "Canvas2DCanvasElement"
                  }
                }
              ],
              "privacy": "private",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "Canvas2DBaseRenderable",
                "module": "src/elements/canvas2d/renderable.ts"
              }
            },
            {
              "kind": "method",
              "name": "rotateClockwise",
              "parameters": [
                {
                  "name": "angle",
                  "type": {
                    "text": "Angle"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "transformeable",
                "module": "src/mixins/transform.ts"
              }
            },
            {
              "kind": "method",
              "name": "rotateCounterclockwise",
              "parameters": [
                {
                  "name": "angle",
                  "type": {
                    "text": "Angle"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "transformeable",
                "module": "src/mixins/transform.ts"
              }
            },
            {
              "kind": "field",
              "name": "scale",
              "inheritedFrom": {
                "name": "transformeable",
                "module": "src/mixins/transform.ts"
              }
            },
            {
              "kind": "field",
              "name": "#velocityChangedTime",
              "privacy": "private",
              "type": {
                "text": "number"
              },
              "default": "-1",
              "inheritedFrom": {
                "name": "transformeable",
                "module": "src/mixins/transform.ts"
              }
            },
            {
              "kind": "field",
              "name": "velocity",
              "type": {
                "text": "Vector2D"
              },
              "description": "Anchor movement per second.",
              "reflects": true,
              "attribute": "velocity",
              "inheritedFrom": {
                "name": "transformeable",
                "module": "src/mixins/transform.ts"
              }
            },
            {
              "kind": "method",
              "name": "bezier",
              "parameters": [
                {
                  "name": "options",
                  "optional": true,
                  "type": {
                    "text": "Options<Canvas2DShapeBezier>"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "partChildren",
                "module": "src/mixins/children.ts"
              }
            },
            {
              "kind": "method",
              "name": "ellipse",
              "parameters": [
                {
                  "name": "options",
                  "optional": true,
                  "type": {
                    "text": "Options<Canvas2DShapeEllipse>"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "partChildren",
                "module": "src/mixins/children.ts"
              }
            },
            {
              "kind": "method",
              "name": "line",
              "parameters": [
                {
                  "name": "options",
                  "optional": true,
                  "type": {
                    "text": "Options<Canvas2DShapeLine>"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "partChildren",
                "module": "src/mixins/children.ts"
              }
            },
            {
              "kind": "method",
              "name": "rectangle",
              "parameters": [
                {
                  "name": "options",
                  "optional": true,
                  "type": {
                    "text": "Options<Canvas2DShapeRectangle>"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "partChildren",
                "module": "src/mixins/children.ts"
              }
            },
            {
              "kind": "field",
              "name": "#changedSinceRender",
              "privacy": "private",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "inheritedFrom": {
                "name": "Canvas2DBaseRenderable",
                "module": "src/elements/canvas2d/renderable.ts"
              }
            },
            {
              "kind": "field",
              "name": "#clickListeners",
              "privacy": "private",
              "default": "new Set<EventListenerOrEventListenerObject>()",
              "inheritedFrom": {
                "name": "Canvas2DBaseRenderable",
                "module": "src/elements/canvas2d/renderable.ts"
              }
            },
            {
              "kind": "field",
              "name": "#localMouse",
              "privacy": "private",
              "default": "new MouseData()",
              "inheritedFrom": {
                "name": "Canvas2DBaseRenderable",
                "module": "src/elements/canvas2d/renderable.ts"
              }
            },
            {
              "kind": "field",
              "name": "#mouseListeners",
              "privacy": "private",
              "default": "new Set<EventListenerOrEventListenerObject>()",
              "inheritedFrom": {
                "name": "Canvas2DBaseRenderable",
                "module": "src/elements/canvas2d/renderable.ts"
              }
            },
            {
              "kind": "field",
              "name": "#shadow",
              "privacy": "private",
              "type": {
                "text": "Shadow | null"
              },
              "default": "null",
              "inheritedFrom": {
                "name": "Canvas2DBaseRenderable",
                "module": "src/elements/canvas2d/renderable.ts"
              }
            },
            {
              "kind": "method",
              "name": "addEventListener",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "type",
                  "type": {
                    "text": "keyof HTMLElementEventMap"
                  }
                },
                {
                  "name": "listener",
                  "type": {
                    "text": "EventListenerOrEventListenerObject"
                  }
                },
                {
                  "name": "options",
                  "optional": true,
                  "type": {
                    "text": "boolean | AddEventListenerOptions"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Canvas2DBaseRenderable",
                "module": "src/elements/canvas2d/renderable.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderConicalGradient",
              "parameters": [
                {
                  "name": "context",
                  "type": {
                    "text": "CanvasRenderingContext2D"
                  }
                },
                {
                  "name": "gradient",
                  "type": {
                    "text": "ConicalGradient"
                  }
                }
              ],
              "privacy": "private",
              "inheritedFrom": {
                "name": "Canvas2DBaseRenderable",
                "module": "src/elements/canvas2d/renderable.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderLinearGradient",
              "parameters": [
                {
                  "name": "context",
                  "type": {
                    "text": "CanvasRenderingContext2D"
                  }
                },
                {
                  "name": "gradient",
                  "type": {
                    "text": "LinearGradient"
                  }
                }
              ],
              "privacy": "private",
              "inheritedFrom": {
                "name": "Canvas2DBaseRenderable",
                "module": "src/elements/canvas2d/renderable.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderRadialGradient",
              "parameters": [
                {
                  "name": "context",
                  "type": {
                    "text": "CanvasRenderingContext2D"
                  }
                },
                {
                  "name": "gradient",
                  "type": {
                    "text": "RadialGradient"
                  }
                }
              ],
              "privacy": "private",
              "inheritedFrom": {
                "name": "Canvas2DBaseRenderable",
                "module": "src/elements/canvas2d/renderable.ts"
              }
            },
            {
              "kind": "method",
              "name": "removeEventListener",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "type",
                  "type": {
                    "text": "keyof HTMLElementEventMap"
                  }
                },
                {
                  "name": "listener",
                  "type": {
                    "text": "EventListenerOrEventListenerObject"
                  }
                },
                {
                  "name": "options",
                  "optional": true,
                  "type": {
                    "text": "boolean | AddEventListenerOptions"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Canvas2DBaseRenderable",
                "module": "src/elements/canvas2d/renderable.ts"
              }
            },
            {
              "kind": "field",
              "name": "changedSinceRender",
              "privacy": "private",
              "readonly": true,
              "inheritedFrom": {
                "name": "Canvas2DBaseRenderable",
                "module": "src/elements/canvas2d/renderable.ts"
              }
            },
            {
              "kind": "method",
              "name": "#handleClick",
              "privacy": "private",
              "parameters": [
                {
                  "name": "canvas2D",
                  "type": {
                    "text": "Canvas2DCanvasElement"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Canvas2DBaseRenderable",
                "module": "src/elements/canvas2d/renderable.ts"
              }
            },
            {
              "kind": "method",
              "name": "#handleMouse",
              "privacy": "private",
              "parameters": [
                {
                  "name": "canvas2D",
                  "type": {
                    "text": "Canvas2DCanvasElement"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Canvas2DBaseRenderable",
                "module": "src/elements/canvas2d/renderable.ts"
              }
            },
            {
              "kind": "method",
              "name": "registerChange",
              "parameters": [
                {
                  "name": "propertyName",
                  "type": {
                    "text": "P"
                  }
                },
                {
                  "name": "newValue",
                  "type": {
                    "text": "V"
                  }
                }
              ],
              "privacy": "private",
              "inheritedFrom": {
                "name": "Canvas2DBaseRenderable",
                "module": "src/elements/canvas2d/renderable.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderChildren",
              "parameters": [
                {
                  "name": "canvas2D",
                  "type": {
                    "text": "Canvas2DCanvasElement"
                  }
                }
              ],
              "privacy": "private",
              "inheritedFrom": {
                "name": "Canvas2DBaseRenderable",
                "module": "src/elements/canvas2d/renderable.ts"
              }
            },
            {
              "kind": "field",
              "name": "#shadowChangeListener",
              "privacy": "private",
              "type": {
                "text": "ChangeListener<Shadow>"
              },
              "inheritedFrom": {
                "name": "Canvas2DBaseRenderable",
                "module": "src/elements/canvas2d/renderable.ts"
              }
            },
            {
              "kind": "field",
              "name": "shadow",
              "inheritedFrom": {
                "name": "Canvas2DBaseRenderable",
                "module": "src/elements/canvas2d/renderable.ts"
              }
            },
            {
              "kind": "field",
              "name": "#eventProxy",
              "privacy": "private",
              "inheritedFrom": {
                "name": "Canvas2DElement",
                "module": "src/elements/canvas2d/element.ts"
              }
            },
            {
              "kind": "field",
              "name": "#everyFrame",
              "privacy": "private",
              "type": {
                "text": "Updater | null"
              },
              "default": "null",
              "inheritedFrom": {
                "name": "Canvas2DElement",
                "module": "src/elements/canvas2d/element.ts"
              }
            },
            {
              "kind": "field",
              "name": "canvas",
              "type": {
                "text": "Canvas2DCanvasElement"
              },
              "description": "The <c2d-canvas> element that is rendering this element. The <c2d-canvas>\r\nwill be an ancestor of this element.",
              "readonly": true,
              "inheritedFrom": {
                "name": "Canvas2DElement",
                "module": "src/elements/canvas2d/element.ts"
              }
            },
            {
              "kind": "method",
              "name": "createChild",
              "parameters": [
                {
                  "name": "ElementClass",
                  "type": {
                    "text": "E"
                  }
                },
                {
                  "name": "options",
                  "optional": true,
                  "type": {
                    "text": "Options<InstanceType<E>>"
                  }
                }
              ],
              "privacy": "private",
              "inheritedFrom": {
                "name": "Canvas2DElement",
                "module": "src/elements/canvas2d/element.ts"
              }
            },
            {
              "kind": "field",
              "name": "everyFrame",
              "type": {
                "text": "Updater | null"
              },
              "inheritedFrom": {
                "name": "Canvas2DElement",
                "module": "src/elements/canvas2d/element.ts"
              }
            },
            {
              "kind": "field",
              "name": "listen",
              "readonly": true,
              "inheritedFrom": {
                "name": "Canvas2DElement",
                "module": "src/elements/canvas2d/element.ts"
              }
            },
            {
              "kind": "method",
              "name": "scaleByPixelRatio",
              "parameters": [
                {
                  "name": "vector",
                  "type": {
                    "text": "Vector2D"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Canvas2DElement",
                "module": "src/elements/canvas2d/element.ts"
              }
            }
          ],
          "mixins": [
            {
              "name": "hasControlPoints",
              "module": "src/elements/canvas2d/bezier.ts"
            }
          ],
          "superclass": {
            "name": "Canvas2DShapePartRenderable",
            "module": "/src/elements/canvas2d/renderable"
          },
          "tagName": "c2d-shape-bezier",
          "customElement": true,
          "attributes": [
            {
              "name": "to",
              "description": "End point of the element relative to its anchor.",
              "fieldName": "to",
              "inheritedFrom": {
                "name": "hasTo",
                "module": "src/mixins/fromTo.ts"
              }
            },
            {
              "name": "angle",
              "type": {
                "text": "Angle"
              },
              "description": "Clockwise rotation of the element around its anchor.",
              "fieldName": "angle",
              "inheritedFrom": {
                "name": "transformeable",
                "module": "src/mixins/transform.ts"
              }
            },
            {
              "name": "angular-velocity",
              "type": {
                "text": "Angle"
              },
              "description": "Clockwise rotation per second.",
              "fieldName": "angularVelocity",
              "inheritedFrom": {
                "name": "transformeable",
                "module": "src/mixins/transform.ts"
              }
            },
            {
              "name": "anchor",
              "type": {
                "text": "Vector2D"
              },
              "description": "Base position of the element relative to its parent's anchor.",
              "fieldName": "anchor",
              "inheritedFrom": {
                "name": "transformeable",
                "module": "src/mixins/transform.ts"
              }
            },
            {
              "name": "scale",
              "inheritedFrom": {
                "name": "transformeable",
                "module": "src/mixins/transform.ts"
              }
            },
            {
              "name": "velocity",
              "type": {
                "text": "Vector2D"
              },
              "description": "Anchor movement per second.",
              "fieldName": "velocity",
              "inheritedFrom": {
                "name": "transformeable",
                "module": "src/mixins/transform.ts"
              }
            }
          ],
          "events": [
            {
              "name": "click",
              "type": {
                "text": "PointerEvent"
              },
              "inheritedFrom": {
                "name": "Canvas2DBaseRenderable",
                "module": "src/elements/canvas2d/renderable.ts"
              }
            },
            {
              "name": "mouseout",
              "type": {
                "text": "MouseEvent"
              },
              "inheritedFrom": {
                "name": "Canvas2DBaseRenderable",
                "module": "src/elements/canvas2d/renderable.ts"
              }
            },
            {
              "name": "mouseover",
              "type": {
                "text": "MouseEvent"
              },
              "inheritedFrom": {
                "name": "Canvas2DBaseRenderable",
                "module": "src/elements/canvas2d/renderable.ts"
              }
            },
            {
              "name": "mousemove",
              "type": {
                "text": "MouseEvent"
              },
              "inheritedFrom": {
                "name": "Canvas2DBaseRenderable",
                "module": "src/elements/canvas2d/renderable.ts"
              }
            },
            {
              "name": "mouseenter",
              "type": {
                "text": "MouseEvent"
              },
              "inheritedFrom": {
                "name": "Canvas2DBaseRenderable",
                "module": "src/elements/canvas2d/renderable.ts"
              }
            },
            {
              "name": "mousedown",
              "type": {
                "text": "MouseEvent"
              },
              "inheritedFrom": {
                "name": "Canvas2DBaseRenderable",
                "module": "src/elements/canvas2d/renderable.ts"
              }
            },
            {
              "name": "mouseup",
              "type": {
                "text": "MouseEvent"
              },
              "inheritedFrom": {
                "name": "Canvas2DBaseRenderable",
                "module": "src/elements/canvas2d/renderable.ts"
              }
            }
          ]
        },
        {
          "kind": "class",
          "description": "",
          "name": "Canvas2DBezier",
          "members": [
            {
              "kind": "field",
              "name": "tag",
              "type": {
                "text": "string"
              },
              "static": true,
              "readonly": true,
              "inheritedFrom": {
                "name": "Canvas2DElement",
                "module": "src/elements/canvas2d/element.ts"
              }
            },
            {
              "kind": "method",
              "name": "render",
              "parameters": [
                {
                  "name": "canvas2D",
                  "type": {
                    "text": "Canvas2DCanvasElement"
                  }
                }
              ],
              "privacy": "private",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "Canvas2DBaseRenderable",
                "module": "src/elements/canvas2d/renderable.ts"
              }
            },
            {
              "kind": "field",
              "name": "#stroke",
              "privacy": "private",
              "type": {
                "text": "DrawStyle | null"
              },
              "default": "null",
              "inheritedFrom": {
                "name": "strokeable",
                "module": "src/mixins/stroke.ts"
              }
            },
            {
              "kind": "field",
              "name": "#lineWidth",
              "privacy": "private",
              "type": {
                "text": "number | null"
              },
              "default": "null",
              "inheritedFrom": {
                "name": "strokeable",
                "module": "src/mixins/stroke.ts"
              }
            },
            {
              "kind": "field",
              "name": "lineWidth",
              "type": {
                "text": "number | null"
              },
              "description": "Width in pixels for drawing lines.",
              "reflects": true,
              "attribute": "line-width",
              "inheritedFrom": {
                "name": "strokeable",
                "module": "src/mixins/stroke.ts"
              }
            },
            {
              "kind": "field",
              "name": "stroke",
              "type": {
                "text": "DrawStyle | null"
              },
              "description": "The rendering style for lines. This may be a color or gradient.\r\nWhen set to null, the parent element's style is used. When\r\nset to \"none\", no lines will be drawn.",
              "reflects": true,
              "attribute": "stroke",
              "inheritedFrom": {
                "name": "strokeable",
                "module": "src/mixins/stroke.ts"
              }
            },
            {
              "kind": "method",
              "name": "afterRender",
              "parameters": [
                {
                  "name": "canvas2D",
                  "type": {
                    "text": "Canvas2DCanvasElement"
                  }
                }
              ],
              "privacy": "private",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "Canvas2DBaseRenderable",
                "module": "src/elements/canvas2d/renderable.ts"
              }
            },
            {
              "kind": "field",
              "name": "#fill",
              "privacy": "private",
              "type": {
                "text": "DrawStyle | null"
              },
              "default": "null",
              "inheritedFrom": {
                "name": "fillable",
                "module": "src/mixins/fill.ts"
              }
            },
            {
              "kind": "field",
              "name": "fill",
              "type": {
                "text": "DrawStyle | null"
              },
              "description": "The rendering style inside the element. This may be a color or gradient.\r\nWhen set to null, the parent element's style is used. When\r\nset to \"none\", the inside will be transparent.",
              "reflects": true,
              "attribute": "fill",
              "inheritedFrom": {
                "name": "fillable",
                "module": "src/mixins/fill.ts"
              }
            },
            {
              "kind": "field",
              "name": "#from",
              "privacy": "private",
              "inheritedFrom": {
                "name": "hasFrom",
                "module": "src/mixins/fromTo.ts"
              }
            },
            {
              "kind": "field",
              "name": "from",
              "type": {
                "text": "Vector2D"
              },
              "description": "Starting point of the element relative to its anchor.",
              "reflects": true,
              "attribute": "from",
              "inheritedFrom": {
                "name": "hasFrom",
                "module": "src/mixins/fromTo.ts"
              }
            },
            {
              "kind": "field",
              "name": "#controlA",
              "privacy": "private",
              "inheritedFrom": {
                "name": "hasControlPoints",
                "module": "src/elements/canvas2d/bezier.ts"
              }
            },
            {
              "kind": "field",
              "name": "#controlB",
              "privacy": "private",
              "inheritedFrom": {
                "name": "hasControlPoints",
                "module": "src/elements/canvas2d/bezier.ts"
              }
            },
            {
              "kind": "field",
              "name": "controlA",
              "inheritedFrom": {
                "name": "hasControlPoints",
                "module": "src/elements/canvas2d/bezier.ts"
              }
            },
            {
              "kind": "field",
              "name": "controlB",
              "inheritedFrom": {
                "name": "hasControlPoints",
                "module": "src/elements/canvas2d/bezier.ts"
              }
            },
            {
              "kind": "field",
              "name": "#to",
              "privacy": "private",
              "inheritedFrom": {
                "name": "hasTo",
                "module": "src/mixins/fromTo.ts"
              }
            },
            {
              "kind": "field",
              "name": "to",
              "description": "End point of the element relative to its anchor.",
              "reflects": true,
              "attribute": "to",
              "inheritedFrom": {
                "name": "hasTo",
                "module": "src/mixins/fromTo.ts"
              }
            },
            {
              "kind": "field",
              "name": "#anchor",
              "privacy": "private",
              "inheritedFrom": {
                "name": "transformeable",
                "module": "src/mixins/transform.ts"
              }
            },
            {
              "kind": "field",
              "name": "#angle",
              "privacy": "private",
              "inheritedFrom": {
                "name": "transformeable",
                "module": "src/mixins/transform.ts"
              }
            },
            {
              "kind": "field",
              "name": "#angularVelocity",
              "privacy": "private",
              "inheritedFrom": {
                "name": "transformeable",
                "module": "src/mixins/transform.ts"
              }
            },
            {
              "kind": "field",
              "name": "#scale",
              "privacy": "private",
              "inheritedFrom": {
                "name": "transformeable",
                "module": "src/mixins/transform.ts"
              }
            },
            {
              "kind": "field",
              "name": "#velocity",
              "privacy": "private",
              "inheritedFrom": {
                "name": "transformeable",
                "module": "src/mixins/transform.ts"
              }
            },
            {
              "kind": "field",
              "name": "#angleChangeListener",
              "privacy": "private",
              "type": {
                "text": "ChangeListener<number>"
              },
              "inheritedFrom": {
                "name": "transformeable",
                "module": "src/mixins/transform.ts"
              }
            },
            {
              "kind": "field",
              "name": "angle",
              "type": {
                "text": "Angle"
              },
              "description": "Clockwise rotation of the element around its anchor.",
              "reflects": true,
              "attribute": "angle",
              "inheritedFrom": {
                "name": "transformeable",
                "module": "src/mixins/transform.ts"
              }
            },
            {
              "kind": "field",
              "name": "#angularVelocityChangedTime",
              "privacy": "private",
              "type": {
                "text": "number"
              },
              "default": "-1",
              "inheritedFrom": {
                "name": "transformeable",
                "module": "src/mixins/transform.ts"
              }
            },
            {
              "kind": "field",
              "name": "angularVelocity",
              "type": {
                "text": "Angle"
              },
              "description": "Clockwise rotation per second.",
              "reflects": true,
              "attribute": "angular-velocity",
              "inheritedFrom": {
                "name": "transformeable",
                "module": "src/mixins/transform.ts"
              }
            },
            {
              "kind": "field",
              "name": "anchor",
              "type": {
                "text": "Vector2D"
              },
              "description": "Base position of the element relative to its parent's anchor.",
              "reflects": true,
              "attribute": "anchor",
              "inheritedFrom": {
                "name": "transformeable",
                "module": "src/mixins/transform.ts"
              }
            },
            {
              "kind": "field",
              "name": "#anchorChangeListener",
              "privacy": "private",
              "type": {
                "text": "ChangeListener<Vector2DBase>"
              },
              "inheritedFrom": {
                "name": "transformeable",
                "module": "src/mixins/transform.ts"
              }
            },
            {
              "kind": "method",
              "name": "moveAnchor",
              "parameters": [
                {
                  "name": "x",
                  "type": {
                    "text": "number"
                  }
                },
                {
                  "name": "y",
                  "type": {
                    "text": "number"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "transformeable",
                "module": "src/mixins/transform.ts"
              }
            },
            {
              "kind": "method",
              "name": "rotateClockwise",
              "parameters": [
                {
                  "name": "angle",
                  "type": {
                    "text": "Angle"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "transformeable",
                "module": "src/mixins/transform.ts"
              }
            },
            {
              "kind": "method",
              "name": "rotateCounterclockwise",
              "parameters": [
                {
                  "name": "angle",
                  "type": {
                    "text": "Angle"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "transformeable",
                "module": "src/mixins/transform.ts"
              }
            },
            {
              "kind": "field",
              "name": "scale",
              "inheritedFrom": {
                "name": "transformeable",
                "module": "src/mixins/transform.ts"
              }
            },
            {
              "kind": "field",
              "name": "#velocityChangedTime",
              "privacy": "private",
              "type": {
                "text": "number"
              },
              "default": "-1",
              "inheritedFrom": {
                "name": "transformeable",
                "module": "src/mixins/transform.ts"
              }
            },
            {
              "kind": "field",
              "name": "velocity",
              "type": {
                "text": "Vector2D"
              },
              "description": "Anchor movement per second.",
              "reflects": true,
              "attribute": "velocity",
              "inheritedFrom": {
                "name": "transformeable",
                "module": "src/mixins/transform.ts"
              }
            },
            {
              "kind": "method",
              "name": "bezier",
              "return": {
                "type": {
                  "text": "Canvas2DBezier"
                }
              },
              "parameters": [
                {
                  "name": "options",
                  "optional": true,
                  "type": {
                    "text": "Options<Canvas2DBezier>"
                  }
                }
              ],
              "description": "Creates a `<c2d-bezier>` child element and returns it.",
              "inheritedFrom": {
                "name": "standaloneChildren",
                "module": "src/mixins/children.ts"
              }
            },
            {
              "kind": "method",
              "name": "ellipse",
              "return": {
                "type": {
                  "text": "Canvas2DEllipse"
                }
              },
              "parameters": [
                {
                  "name": "options",
                  "optional": true,
                  "type": {
                    "text": "Options<Canvas2DEllipse>"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "standaloneChildren",
                "module": "src/mixins/children.ts"
              }
            },
            {
              "kind": "method",
              "name": "image",
              "return": {
                "type": {
                  "text": "Canvas2DImage"
                }
              },
              "parameters": [
                {
                  "name": "options",
                  "optional": true,
                  "type": {
                    "text": "Options<Canvas2DImage>"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "standaloneChildren",
                "module": "src/mixins/children.ts"
              }
            },
            {
              "kind": "method",
              "name": "multiple",
              "return": {
                "type": {
                  "text": "Node[]"
                }
              },
              "parameters": [
                {
                  "name": "callback",
                  "type": {
                    "text": "MultipleCallback"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "standaloneChildren",
                "module": "src/mixins/children.ts"
              }
            },
            {
              "kind": "method",
              "name": "line",
              "return": {
                "type": {
                  "text": "Canvas2DLine"
                }
              },
              "parameters": [
                {
                  "name": "options",
                  "optional": true,
                  "type": {
                    "text": "Options<Canvas2DLine>"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "standaloneChildren",
                "module": "src/mixins/children.ts"
              }
            },
            {
              "kind": "method",
              "name": "rectangle",
              "return": {
                "type": {
                  "text": "Canvas2DRectangle"
                }
              },
              "parameters": [
                {
                  "name": "options",
                  "optional": true,
                  "type": {
                    "text": "Options<Canvas2DRectangle>"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "standaloneChildren",
                "module": "src/mixins/children.ts"
              }
            },
            {
              "kind": "method",
              "name": "shape",
              "return": {
                "type": {
                  "text": "Canvas2DShape"
                }
              },
              "parameters": [
                {
                  "name": "options",
                  "optional": true,
                  "type": {
                    "text": "Options<Canvas2DShape>"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "standaloneChildren",
                "module": "src/mixins/children.ts"
              }
            },
            {
              "kind": "method",
              "name": "text",
              "return": {
                "type": {
                  "text": "Canvas2DText"
                }
              },
              "parameters": [
                {
                  "name": "options",
                  "optional": true,
                  "type": {
                    "text": "Options<Canvas2DText>"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "standaloneChildren",
                "module": "src/mixins/children.ts"
              }
            },
            {
              "kind": "method",
              "name": "video",
              "return": {
                "type": {
                  "text": "Canvas2DVideo"
                }
              },
              "parameters": [
                {
                  "name": "options",
                  "optional": true,
                  "type": {
                    "text": "Options<Canvas2DVideo>"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "standaloneChildren",
                "module": "src/mixins/children.ts"
              }
            },
            {
              "kind": "field",
              "name": "#changedSinceRender",
              "privacy": "private",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "inheritedFrom": {
                "name": "Canvas2DBaseRenderable",
                "module": "src/elements/canvas2d/renderable.ts"
              }
            },
            {
              "kind": "field",
              "name": "#clickListeners",
              "privacy": "private",
              "default": "new Set<EventListenerOrEventListenerObject>()",
              "inheritedFrom": {
                "name": "Canvas2DBaseRenderable",
                "module": "src/elements/canvas2d/renderable.ts"
              }
            },
            {
              "kind": "field",
              "name": "#localMouse",
              "privacy": "private",
              "default": "new MouseData()",
              "inheritedFrom": {
                "name": "Canvas2DBaseRenderable",
                "module": "src/elements/canvas2d/renderable.ts"
              }
            },
            {
              "kind": "field",
              "name": "#mouseListeners",
              "privacy": "private",
              "default": "new Set<EventListenerOrEventListenerObject>()",
              "inheritedFrom": {
                "name": "Canvas2DBaseRenderable",
                "module": "src/elements/canvas2d/renderable.ts"
              }
            },
            {
              "kind": "field",
              "name": "#shadow",
              "privacy": "private",
              "type": {
                "text": "Shadow | null"
              },
              "default": "null",
              "inheritedFrom": {
                "name": "Canvas2DBaseRenderable",
                "module": "src/elements/canvas2d/renderable.ts"
              }
            },
            {
              "kind": "method",
              "name": "addEventListener",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "type",
                  "type": {
                    "text": "keyof HTMLElementEventMap"
                  }
                },
                {
                  "name": "listener",
                  "type": {
                    "text": "EventListenerOrEventListenerObject"
                  }
                },
                {
                  "name": "options",
                  "optional": true,
                  "type": {
                    "text": "boolean | AddEventListenerOptions"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Canvas2DBaseRenderable",
                "module": "src/elements/canvas2d/renderable.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderConicalGradient",
              "parameters": [
                {
                  "name": "context",
                  "type": {
                    "text": "CanvasRenderingContext2D"
                  }
                },
                {
                  "name": "gradient",
                  "type": {
                    "text": "ConicalGradient"
                  }
                }
              ],
              "privacy": "private",
              "inheritedFrom": {
                "name": "Canvas2DBaseRenderable",
                "module": "src/elements/canvas2d/renderable.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderLinearGradient",
              "parameters": [
                {
                  "name": "context",
                  "type": {
                    "text": "CanvasRenderingContext2D"
                  }
                },
                {
                  "name": "gradient",
                  "type": {
                    "text": "LinearGradient"
                  }
                }
              ],
              "privacy": "private",
              "inheritedFrom": {
                "name": "Canvas2DBaseRenderable",
                "module": "src/elements/canvas2d/renderable.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderRadialGradient",
              "parameters": [
                {
                  "name": "context",
                  "type": {
                    "text": "CanvasRenderingContext2D"
                  }
                },
                {
                  "name": "gradient",
                  "type": {
                    "text": "RadialGradient"
                  }
                }
              ],
              "privacy": "private",
              "inheritedFrom": {
                "name": "Canvas2DBaseRenderable",
                "module": "src/elements/canvas2d/renderable.ts"
              }
            },
            {
              "kind": "method",
              "name": "removeEventListener",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "type",
                  "type": {
                    "text": "keyof HTMLElementEventMap"
                  }
                },
                {
                  "name": "listener",
                  "type": {
                    "text": "EventListenerOrEventListenerObject"
                  }
                },
                {
                  "name": "options",
                  "optional": true,
                  "type": {
                    "text": "boolean | AddEventListenerOptions"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Canvas2DBaseRenderable",
                "module": "src/elements/canvas2d/renderable.ts"
              }
            },
            {
              "kind": "field",
              "name": "changedSinceRender",
              "privacy": "private",
              "readonly": true,
              "inheritedFrom": {
                "name": "Canvas2DBaseRenderable",
                "module": "src/elements/canvas2d/renderable.ts"
              }
            },
            {
              "kind": "method",
              "name": "#handleClick",
              "privacy": "private",
              "parameters": [
                {
                  "name": "canvas2D",
                  "type": {
                    "text": "Canvas2DCanvasElement"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Canvas2DBaseRenderable",
                "module": "src/elements/canvas2d/renderable.ts"
              }
            },
            {
              "kind": "method",
              "name": "#handleMouse",
              "privacy": "private",
              "parameters": [
                {
                  "name": "canvas2D",
                  "type": {
                    "text": "Canvas2DCanvasElement"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Canvas2DBaseRenderable",
                "module": "src/elements/canvas2d/renderable.ts"
              }
            },
            {
              "kind": "method",
              "name": "registerChange",
              "parameters": [
                {
                  "name": "propertyName",
                  "type": {
                    "text": "P"
                  }
                },
                {
                  "name": "newValue",
                  "type": {
                    "text": "V"
                  }
                }
              ],
              "privacy": "private",
              "inheritedFrom": {
                "name": "Canvas2DBaseRenderable",
                "module": "src/elements/canvas2d/renderable.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderChildren",
              "parameters": [
                {
                  "name": "canvas2D",
                  "type": {
                    "text": "Canvas2DCanvasElement"
                  }
                }
              ],
              "privacy": "private",
              "inheritedFrom": {
                "name": "Canvas2DBaseRenderable",
                "module": "src/elements/canvas2d/renderable.ts"
              }
            },
            {
              "kind": "field",
              "name": "#shadowChangeListener",
              "privacy": "private",
              "type": {
                "text": "ChangeListener<Shadow>"
              },
              "inheritedFrom": {
                "name": "Canvas2DBaseRenderable",
                "module": "src/elements/canvas2d/renderable.ts"
              }
            },
            {
              "kind": "field",
              "name": "shadow",
              "inheritedFrom": {
                "name": "Canvas2DBaseRenderable",
                "module": "src/elements/canvas2d/renderable.ts"
              }
            },
            {
              "kind": "field",
              "name": "#eventProxy",
              "privacy": "private",
              "inheritedFrom": {
                "name": "Canvas2DElement",
                "module": "src/elements/canvas2d/element.ts"
              }
            },
            {
              "kind": "field",
              "name": "#everyFrame",
              "privacy": "private",
              "type": {
                "text": "Updater | null"
              },
              "default": "null",
              "inheritedFrom": {
                "name": "Canvas2DElement",
                "module": "src/elements/canvas2d/element.ts"
              }
            },
            {
              "kind": "field",
              "name": "canvas",
              "type": {
                "text": "Canvas2DCanvasElement"
              },
              "description": "The <c2d-canvas> element that is rendering this element. The <c2d-canvas>\r\nwill be an ancestor of this element.",
              "readonly": true,
              "inheritedFrom": {
                "name": "Canvas2DElement",
                "module": "src/elements/canvas2d/element.ts"
              }
            },
            {
              "kind": "method",
              "name": "createChild",
              "parameters": [
                {
                  "name": "ElementClass",
                  "type": {
                    "text": "E"
                  }
                },
                {
                  "name": "options",
                  "optional": true,
                  "type": {
                    "text": "Options<InstanceType<E>>"
                  }
                }
              ],
              "privacy": "private",
              "inheritedFrom": {
                "name": "Canvas2DElement",
                "module": "src/elements/canvas2d/element.ts"
              }
            },
            {
              "kind": "field",
              "name": "everyFrame",
              "type": {
                "text": "Updater | null"
              },
              "inheritedFrom": {
                "name": "Canvas2DElement",
                "module": "src/elements/canvas2d/element.ts"
              }
            },
            {
              "kind": "field",
              "name": "listen",
              "readonly": true,
              "inheritedFrom": {
                "name": "Canvas2DElement",
                "module": "src/elements/canvas2d/element.ts"
              }
            },
            {
              "kind": "method",
              "name": "scaleByPixelRatio",
              "parameters": [
                {
                  "name": "vector",
                  "type": {
                    "text": "Vector2D"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Canvas2DElement",
                "module": "src/elements/canvas2d/element.ts"
              }
            }
          ],
          "mixins": [
            {
              "name": "strokeable",
              "module": "/src/mixins/stroke"
            },
            {
              "name": "fillable",
              "module": "/src/mixins/fill"
            },
            {
              "name": "hasFrom",
              "module": "/src/mixins/fromTo"
            },
            {
              "name": "hasControlPoints",
              "module": "src/elements/canvas2d/bezier.ts"
            },
            {
              "name": "transformeable",
              "module": "/src/mixins/transform"
            }
          ],
          "superclass": {
            "name": "Canvas2DStandaloneRenderable",
            "module": "/src/elements/canvas2d/renderable"
          },
          "tagName": "c2d-bezier",
          "customElement": true,
          "attributes": [
            {
              "name": "stroke",
              "type": {
                "text": "DrawStyle | null"
              },
              "description": "The rendering style for lines. This may be a color or gradient.\r\nWhen set to null, the parent element's style is used. When\r\nset to \"none\", no lines will be drawn.",
              "fieldName": "stroke",
              "inheritedFrom": {
                "name": "strokeable",
                "module": "src/mixins/stroke.ts"
              }
            },
            {
              "name": "line-width",
              "type": {
                "text": "number | null"
              },
              "description": "Width in pixels for drawing lines.",
              "fieldName": "lineWidth",
              "inheritedFrom": {
                "name": "strokeable",
                "module": "src/mixins/stroke.ts"
              }
            },
            {
              "name": "fill",
              "type": {
                "text": "DrawStyle | null"
              },
              "description": "The rendering style inside the element. This may be a color or gradient.\r\nWhen set to null, the parent element's style is used. When\r\nset to \"none\", the inside will be transparent.",
              "fieldName": "fill",
              "inheritedFrom": {
                "name": "fillable",
                "module": "src/mixins/fill.ts"
              }
            },
            {
              "name": "from",
              "type": {
                "text": "Vector2D"
              },
              "description": "Starting point of the element relative to its anchor.",
              "fieldName": "from",
              "inheritedFrom": {
                "name": "hasFrom",
                "module": "src/mixins/fromTo.ts"
              }
            },
            {
              "name": "to",
              "description": "End point of the element relative to its anchor.",
              "fieldName": "to",
              "inheritedFrom": {
                "name": "hasTo",
                "module": "src/mixins/fromTo.ts"
              }
            },
            {
              "name": "angle",
              "type": {
                "text": "Angle"
              },
              "description": "Clockwise rotation of the element around its anchor.",
              "fieldName": "angle",
              "inheritedFrom": {
                "name": "transformeable",
                "module": "src/mixins/transform.ts"
              }
            },
            {
              "name": "angular-velocity",
              "type": {
                "text": "Angle"
              },
              "description": "Clockwise rotation per second.",
              "fieldName": "angularVelocity",
              "inheritedFrom": {
                "name": "transformeable",
                "module": "src/mixins/transform.ts"
              }
            },
            {
              "name": "anchor",
              "type": {
                "text": "Vector2D"
              },
              "description": "Base position of the element relative to its parent's anchor.",
              "fieldName": "anchor",
              "inheritedFrom": {
                "name": "transformeable",
                "module": "src/mixins/transform.ts"
              }
            },
            {
              "name": "scale",
              "inheritedFrom": {
                "name": "transformeable",
                "module": "src/mixins/transform.ts"
              }
            },
            {
              "name": "velocity",
              "type": {
                "text": "Vector2D"
              },
              "description": "Anchor movement per second.",
              "fieldName": "velocity",
              "inheritedFrom": {
                "name": "transformeable",
                "module": "src/mixins/transform.ts"
              }
            }
          ],
          "events": [
            {
              "name": "click",
              "type": {
                "text": "PointerEvent"
              },
              "inheritedFrom": {
                "name": "Canvas2DBaseRenderable",
                "module": "src/elements/canvas2d/renderable.ts"
              }
            },
            {
              "name": "mouseout",
              "type": {
                "text": "MouseEvent"
              },
              "inheritedFrom": {
                "name": "Canvas2DBaseRenderable",
                "module": "src/elements/canvas2d/renderable.ts"
              }
            },
            {
              "name": "mouseover",
              "type": {
                "text": "MouseEvent"
              },
              "inheritedFrom": {
                "name": "Canvas2DBaseRenderable",
                "module": "src/elements/canvas2d/renderable.ts"
              }
            },
            {
              "name": "mousemove",
              "type": {
                "text": "MouseEvent"
              },
              "inheritedFrom": {
                "name": "Canvas2DBaseRenderable",
                "module": "src/elements/canvas2d/renderable.ts"
              }
            },
            {
              "name": "mouseenter",
              "type": {
                "text": "MouseEvent"
              },
              "inheritedFrom": {
                "name": "Canvas2DBaseRenderable",
                "module": "src/elements/canvas2d/renderable.ts"
              }
            },
            {
              "name": "mousedown",
              "type": {
                "text": "MouseEvent"
              },
              "inheritedFrom": {
                "name": "Canvas2DBaseRenderable",
                "module": "src/elements/canvas2d/renderable.ts"
              }
            },
            {
              "name": "mouseup",
              "type": {
                "text": "MouseEvent"
              },
              "inheritedFrom": {
                "name": "Canvas2DBaseRenderable",
                "module": "src/elements/canvas2d/renderable.ts"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "Canvas2DShapeBezier",
          "declaration": {
            "name": "Canvas2DShapeBezier",
            "module": "src/elements/canvas2d/bezier.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "c2d-shape-bezier",
          "declaration": {
            "name": "Canvas2DShapeBezier",
            "module": "src/elements/canvas2d/bezier.ts"
          }
        },
        {
          "kind": "js",
          "name": "Canvas2DBezier",
          "declaration": {
            "name": "Canvas2DBezier",
            "module": "src/elements/canvas2d/bezier.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "c2d-bezier",
          "declaration": {
            "name": "Canvas2DBezier",
            "module": "src/elements/canvas2d/bezier.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/elements/canvas2d/canvas.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "Canvas2DCanvasElement",
          "members": [
            {
              "kind": "field",
              "name": "tag",
              "type": {
                "text": "string"
              },
              "static": true,
              "readonly": true,
              "inheritedFrom": {
                "name": "Canvas2DElement",
                "module": "src/elements/canvas2d/element.ts"
              }
            },
            {
              "kind": "field",
              "name": "#animating",
              "privacy": "private",
              "type": {
                "text": "boolean"
              },
              "default": "false"
            },
            {
              "kind": "field",
              "name": "#background",
              "privacy": "private",
              "type": {
                "text": "DrawStyle"
              },
              "default": "\"none\""
            },
            {
              "kind": "field",
              "name": "#clickTracker",
              "privacy": "private",
              "type": {
                "text": "ClickTracker"
              },
              "default": "new ClickTracker(this.domCanvas)"
            },
            {
              "kind": "field",
              "name": "#context",
              "privacy": "private",
              "type": {
                "text": "CanvasRenderingContext2D"
              },
              "default": "context"
            },
            {
              "kind": "field",
              "name": "#deltaTime",
              "privacy": "private",
              "type": {
                "text": "number"
              },
              "default": "0"
            },
            {
              "kind": "field",
              "name": "#devicePixelRatio",
              "privacy": "private",
              "type": {
                "text": "number"
              }
            },
            {
              "kind": "field",
              "name": "#frame",
              "privacy": "private",
              "type": {
                "text": "number"
              },
              "default": "0"
            },
            {
              "kind": "field",
              "name": "#keyboardTracker",
              "privacy": "private",
              "default": "new KeyboardTracker()"
            },
            {
              "kind": "field",
              "name": "#lastFrameTime",
              "privacy": "private",
              "type": {
                "text": "number"
              },
              "default": "-1"
            },
            {
              "kind": "field",
              "name": "#mouseTracker",
              "privacy": "private",
              "type": {
                "text": "MouseTracker"
              },
              "default": "new MouseTracker(this.domCanvas)"
            },
            {
              "kind": "field",
              "name": "#renderEvents",
              "privacy": "private",
              "default": "new Set<keyof HTMLElementEventMap>()"
            },
            {
              "kind": "field",
              "name": "#renderQueued",
              "privacy": "private",
              "type": {
                "text": "boolean"
              },
              "default": "false"
            },
            {
              "kind": "field",
              "name": "#waitFor",
              "privacy": "private",
              "default": "new Set<Element>()"
            },
            {
              "kind": "method",
              "name": "addEventListener",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "type",
                  "type": {
                    "text": "string"
                  }
                },
                {
                  "name": "listener",
                  "type": {
                    "text": "EventListenerOrEventListenerObject"
                  }
                },
                {
                  "name": "options",
                  "optional": true,
                  "type": {
                    "text": "boolean | AddEventListenerOptions | undefined"
                  }
                }
              ]
            },
            {
              "kind": "field",
              "name": "animating",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "background",
              "type": {
                "text": "DrawStyle"
              },
              "description": "At the beginning of each frame, the canvas renders its background using\r\nthis style. It may be a Color or Gradient. When set to \"none\", the canvas\r\nwill not render a background. This will result in the next frame being\r\nrendered on top of the last frame's contents.",
              "reflects": true,
              "attribute": "background"
            },
            {
              "kind": "field",
              "name": "center",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "keyDown",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "domCanvas",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "clicked",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "clickPosition",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "context",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "deltaTime",
              "description": "Time passed the previous and current frame.",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "everyFrame",
              "type": {
                "text": "Updater | null"
              },
              "inheritedFrom": {
                "name": "Canvas2DElement",
                "module": "src/elements/canvas2d/element.ts"
              }
            },
            {
              "kind": "field",
              "name": "frame",
              "readonly": true
            },
            {
              "kind": "method",
              "name": "keyHeld",
              "parameters": [
                {
                  "name": "args",
                  "type": {
                    "text": "Parameters<KeyboardTracker[\"keyHeld\"]>"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "keyPreviouslyHeld",
              "parameters": [
                {
                  "name": "args",
                  "type": {
                    "text": "Parameters<KeyboardTracker[\"keyPreviouslyHeld\"]>"
                  }
                }
              ]
            },
            {
              "kind": "field",
              "name": "lastKey",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "mouse",
              "readonly": true
            },
            {
              "kind": "method",
              "name": "queueRender"
            },
            {
              "kind": "field",
              "name": "width",
              "type": {
                "text": "number"
              },
              "description": "The width of the canvas element in pixels divided by the device's pixel ratio.",
              "reflects": true,
              "attribute": "width"
            },
            {
              "kind": "field",
              "name": "height",
              "type": {
                "text": "number"
              },
              "description": "The height of the canvas element in pixels divided by the device's pixel ratio.",
              "reflects": true,
              "attribute": "height"
            },
            {
              "kind": "method",
              "name": "#render",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "renderOn",
              "parameters": [
                {
                  "name": "eventName",
                  "type": {
                    "text": "keyof HTMLElementEventMap"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "#updateScale",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "waitFor",
              "parameters": [
                {
                  "name": "element",
                  "type": {
                    "text": "Element"
                  }
                },
                {
                  "name": "eventName",
                  "default": "\"load\"",
                  "type": {
                    "text": "keyof HTMLElementEventMap"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "bezier",
              "return": {
                "type": {
                  "text": "Canvas2DBezier"
                }
              },
              "parameters": [
                {
                  "name": "options",
                  "optional": true,
                  "type": {
                    "text": "Options<Canvas2DBezier>"
                  }
                }
              ],
              "description": "Creates a `<c2d-bezier>` child element and returns it.",
              "inheritedFrom": {
                "name": "standaloneChildren",
                "module": "src/mixins/children.ts"
              }
            },
            {
              "kind": "method",
              "name": "ellipse",
              "return": {
                "type": {
                  "text": "Canvas2DEllipse"
                }
              },
              "parameters": [
                {
                  "name": "options",
                  "optional": true,
                  "type": {
                    "text": "Options<Canvas2DEllipse>"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "standaloneChildren",
                "module": "src/mixins/children.ts"
              }
            },
            {
              "kind": "method",
              "name": "image",
              "return": {
                "type": {
                  "text": "Canvas2DImage"
                }
              },
              "parameters": [
                {
                  "name": "options",
                  "optional": true,
                  "type": {
                    "text": "Options<Canvas2DImage>"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "standaloneChildren",
                "module": "src/mixins/children.ts"
              }
            },
            {
              "kind": "method",
              "name": "multiple",
              "return": {
                "type": {
                  "text": "Node[]"
                }
              },
              "parameters": [
                {
                  "name": "callback",
                  "type": {
                    "text": "MultipleCallback"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "standaloneChildren",
                "module": "src/mixins/children.ts"
              }
            },
            {
              "kind": "method",
              "name": "line",
              "return": {
                "type": {
                  "text": "Canvas2DLine"
                }
              },
              "parameters": [
                {
                  "name": "options",
                  "optional": true,
                  "type": {
                    "text": "Options<Canvas2DLine>"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "standaloneChildren",
                "module": "src/mixins/children.ts"
              }
            },
            {
              "kind": "method",
              "name": "rectangle",
              "return": {
                "type": {
                  "text": "Canvas2DRectangle"
                }
              },
              "parameters": [
                {
                  "name": "options",
                  "optional": true,
                  "type": {
                    "text": "Options<Canvas2DRectangle>"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "standaloneChildren",
                "module": "src/mixins/children.ts"
              }
            },
            {
              "kind": "method",
              "name": "shape",
              "return": {
                "type": {
                  "text": "Canvas2DShape"
                }
              },
              "parameters": [
                {
                  "name": "options",
                  "optional": true,
                  "type": {
                    "text": "Options<Canvas2DShape>"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "standaloneChildren",
                "module": "src/mixins/children.ts"
              }
            },
            {
              "kind": "method",
              "name": "text",
              "return": {
                "type": {
                  "text": "Canvas2DText"
                }
              },
              "parameters": [
                {
                  "name": "options",
                  "optional": true,
                  "type": {
                    "text": "Options<Canvas2DText>"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "standaloneChildren",
                "module": "src/mixins/children.ts"
              }
            },
            {
              "kind": "method",
              "name": "video",
              "return": {
                "type": {
                  "text": "Canvas2DVideo"
                }
              },
              "parameters": [
                {
                  "name": "options",
                  "optional": true,
                  "type": {
                    "text": "Options<Canvas2DVideo>"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "standaloneChildren",
                "module": "src/mixins/children.ts"
              }
            },
            {
              "kind": "field",
              "name": "#eventProxy",
              "privacy": "private",
              "inheritedFrom": {
                "name": "Canvas2DElement",
                "module": "src/elements/canvas2d/element.ts"
              }
            },
            {
              "kind": "field",
              "name": "#everyFrame",
              "privacy": "private",
              "type": {
                "text": "Updater | null"
              },
              "default": "null",
              "inheritedFrom": {
                "name": "Canvas2DElement",
                "module": "src/elements/canvas2d/element.ts"
              }
            },
            {
              "kind": "field",
              "name": "canvas",
              "type": {
                "text": "Canvas2DCanvasElement"
              },
              "description": "The <c2d-canvas> element that is rendering this element. The <c2d-canvas>\r\nwill be an ancestor of this element.",
              "readonly": true,
              "inheritedFrom": {
                "name": "Canvas2DElement",
                "module": "src/elements/canvas2d/element.ts"
              }
            },
            {
              "kind": "method",
              "name": "createChild",
              "parameters": [
                {
                  "name": "ElementClass",
                  "type": {
                    "text": "E"
                  }
                },
                {
                  "name": "options",
                  "optional": true,
                  "type": {
                    "text": "Options<InstanceType<E>>"
                  }
                }
              ],
              "privacy": "private",
              "inheritedFrom": {
                "name": "Canvas2DElement",
                "module": "src/elements/canvas2d/element.ts"
              }
            },
            {
              "kind": "field",
              "name": "listen",
              "readonly": true,
              "inheritedFrom": {
                "name": "Canvas2DElement",
                "module": "src/elements/canvas2d/element.ts"
              }
            },
            {
              "kind": "method",
              "name": "scaleByPixelRatio",
              "parameters": [
                {
                  "name": "vector",
                  "type": {
                    "text": "Vector2D"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Canvas2DElement",
                "module": "src/elements/canvas2d/element.ts"
              }
            }
          ],
          "attributes": [
            {
              "name": "width",
              "type": {
                "text": "number"
              },
              "description": "The width of the canvas element in pixels divided by the device's pixel ratio.",
              "fieldName": "width"
            },
            {
              "name": "height",
              "type": {
                "text": "number"
              },
              "description": "The height of the canvas element in pixels divided by the device's pixel ratio.",
              "fieldName": "height"
            },
            {
              "name": "background",
              "type": {
                "text": "DrawStyle"
              },
              "description": "At the beginning of each frame, the canvas renders its background using\r\nthis style. It may be a Color or Gradient. When set to \"none\", the canvas\r\nwill not render a background. This will result in the next frame being\r\nrendered on top of the last frame's contents.",
              "fieldName": "background"
            }
          ],
          "mixins": [
            {
              "name": "standaloneChildren",
              "module": "/src/mixins/children"
            }
          ],
          "superclass": {
            "name": "Canvas2DElement",
            "module": "/src/elements/canvas2d/element"
          },
          "tagName": "c2d-canvas",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "Canvas2DCanvasElement",
          "declaration": {
            "name": "Canvas2DCanvasElement",
            "module": "src/elements/canvas2d/canvas.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/elements/canvas2d/element.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "Canvas2DElement",
          "members": [
            {
              "kind": "field",
              "name": "tag",
              "type": {
                "text": "string"
              },
              "static": true
            },
            {
              "kind": "field",
              "name": "#eventProxy",
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "#everyFrame",
              "privacy": "private",
              "type": {
                "text": "Updater | null"
              },
              "default": "null"
            },
            {
              "kind": "field",
              "name": "canvas",
              "type": {
                "text": "Canvas2DCanvasElement"
              },
              "description": "The <c2d-canvas> element that is rendering this element. The <c2d-canvas>\r\nwill be an ancestor of this element.",
              "readonly": true
            },
            {
              "kind": "method",
              "name": "createChild",
              "parameters": [
                {
                  "name": "ElementClass",
                  "type": {
                    "text": "E"
                  }
                },
                {
                  "name": "options",
                  "optional": true,
                  "type": {
                    "text": "Options<InstanceType<E>>"
                  }
                }
              ],
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "everyFrame",
              "type": {
                "text": "Updater | null"
              }
            },
            {
              "kind": "field",
              "name": "listen",
              "readonly": true
            },
            {
              "kind": "method",
              "name": "scaleByPixelRatio",
              "parameters": [
                {
                  "name": "vector",
                  "type": {
                    "text": "Vector2D"
                  }
                }
              ]
            }
          ],
          "superclass": {
            "name": "HTMLElement"
          },
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "Canvas2DElement",
          "declaration": {
            "name": "Canvas2DElement",
            "module": "src/elements/canvas2d/element.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/elements/canvas2d/ellipse.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "Canvas2DEllipse",
          "members": [
            {
              "kind": "field",
              "name": "tag",
              "type": {
                "text": "string"
              },
              "static": true,
              "readonly": true,
              "inheritedFrom": {
                "name": "Canvas2DElement",
                "module": "src/elements/canvas2d/element.ts"
              }
            },
            {
              "kind": "field",
              "name": "#startAngle",
              "privacy": "private",
              "inheritedFrom": {
                "name": "renderEllipse",
                "module": "src/elements/canvas2d/ellipse.ts"
              }
            },
            {
              "kind": "field",
              "name": "#endAngle",
              "privacy": "private",
              "inheritedFrom": {
                "name": "renderEllipse",
                "module": "src/elements/canvas2d/ellipse.ts"
              }
            },
            {
              "kind": "method",
              "name": "render",
              "parameters": [
                {
                  "name": "canvas2D",
                  "type": {
                    "text": "Canvas2DCanvasElement"
                  }
                }
              ],
              "privacy": "private",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "Canvas2DBaseRenderable",
                "module": "src/elements/canvas2d/renderable.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderRadialGradient",
              "parameters": [
                {
                  "name": "context",
                  "type": {
                    "text": "CanvasRenderingContext2D"
                  }
                },
                {
                  "name": "gradient",
                  "type": {
                    "text": "RadialGradient"
                  }
                }
              ],
              "privacy": "private",
              "return": {
                "type": {
                  "text": "CanvasGradient"
                }
              },
              "inheritedFrom": {
                "name": "Canvas2DBaseRenderable",
                "module": "src/elements/canvas2d/renderable.ts"
              }
            },
            {
              "kind": "field",
              "name": "startAngle",
              "inheritedFrom": {
                "name": "renderEllipse",
                "module": "src/elements/canvas2d/ellipse.ts"
              }
            },
            {
              "kind": "field",
              "name": "endAngle",
              "inheritedFrom": {
                "name": "renderEllipse",
                "module": "src/elements/canvas2d/ellipse.ts"
              }
            },
            {
              "kind": "field",
              "name": "origin",
              "type": {
                "text": "string"
              },
              "default": "\"center\"",
              "inheritedFrom": {
                "name": "hasRectangleBounds",
                "module": "src/mixins/rectangleBounds.ts"
              }
            },
            {
              "kind": "field",
              "name": "#anchor",
              "privacy": "private",
              "inheritedFrom": {
                "name": "transformeable",
                "module": "src/mixins/transform.ts"
              }
            },
            {
              "kind": "field",
              "name": "#angle",
              "privacy": "private",
              "inheritedFrom": {
                "name": "transformeable",
                "module": "src/mixins/transform.ts"
              }
            },
            {
              "kind": "field",
              "name": "#angularVelocity",
              "privacy": "private",
              "inheritedFrom": {
                "name": "transformeable",
                "module": "src/mixins/transform.ts"
              }
            },
            {
              "kind": "field",
              "name": "#scale",
              "privacy": "private",
              "inheritedFrom": {
                "name": "transformeable",
                "module": "src/mixins/transform.ts"
              }
            },
            {
              "kind": "field",
              "name": "#velocity",
              "privacy": "private",
              "inheritedFrom": {
                "name": "transformeable",
                "module": "src/mixins/transform.ts"
              }
            },
            {
              "kind": "field",
              "name": "#angleChangeListener",
              "privacy": "private",
              "type": {
                "text": "ChangeListener<number>"
              },
              "inheritedFrom": {
                "name": "transformeable",
                "module": "src/mixins/transform.ts"
              }
            },
            {
              "kind": "field",
              "name": "angle",
              "type": {
                "text": "Angle"
              },
              "description": "Clockwise rotation of the element around its anchor.",
              "reflects": true,
              "attribute": "angle",
              "inheritedFrom": {
                "name": "transformeable",
                "module": "src/mixins/transform.ts"
              }
            },
            {
              "kind": "field",
              "name": "#angularVelocityChangedTime",
              "privacy": "private",
              "type": {
                "text": "number"
              },
              "default": "-1",
              "inheritedFrom": {
                "name": "transformeable",
                "module": "src/mixins/transform.ts"
              }
            },
            {
              "kind": "field",
              "name": "angularVelocity",
              "type": {
                "text": "Angle"
              },
              "description": "Clockwise rotation per second.",
              "reflects": true,
              "attribute": "angular-velocity",
              "inheritedFrom": {
                "name": "transformeable",
                "module": "src/mixins/transform.ts"
              }
            },
            {
              "kind": "field",
              "name": "anchor",
              "type": {
                "text": "Vector2D"
              },
              "description": "Base position of the element relative to its parent's anchor.",
              "reflects": true,
              "attribute": "anchor",
              "inheritedFrom": {
                "name": "transformeable",
                "module": "src/mixins/transform.ts"
              }
            },
            {
              "kind": "field",
              "name": "#anchorChangeListener",
              "privacy": "private",
              "type": {
                "text": "ChangeListener<Vector2DBase>"
              },
              "inheritedFrom": {
                "name": "transformeable",
                "module": "src/mixins/transform.ts"
              }
            },
            {
              "kind": "method",
              "name": "moveAnchor",
              "parameters": [
                {
                  "name": "x",
                  "type": {
                    "text": "number"
                  }
                },
                {
                  "name": "y",
                  "type": {
                    "text": "number"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "transformeable",
                "module": "src/mixins/transform.ts"
              }
            },
            {
              "kind": "method",
              "name": "afterRender",
              "parameters": [
                {
                  "name": "canvas2D",
                  "type": {
                    "text": "Canvas2DCanvasElement"
                  }
                }
              ],
              "privacy": "private",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "Canvas2DBaseRenderable",
                "module": "src/elements/canvas2d/renderable.ts"
              }
            },
            {
              "kind": "method",
              "name": "rotateClockwise",
              "parameters": [
                {
                  "name": "angle",
                  "type": {
                    "text": "Angle"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "transformeable",
                "module": "src/mixins/transform.ts"
              }
            },
            {
              "kind": "method",
              "name": "rotateCounterclockwise",
              "parameters": [
                {
                  "name": "angle",
                  "type": {
                    "text": "Angle"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "transformeable",
                "module": "src/mixins/transform.ts"
              }
            },
            {
              "kind": "field",
              "name": "scale",
              "inheritedFrom": {
                "name": "transformeable",
                "module": "src/mixins/transform.ts"
              }
            },
            {
              "kind": "field",
              "name": "#velocityChangedTime",
              "privacy": "private",
              "type": {
                "text": "number"
              },
              "default": "-1",
              "inheritedFrom": {
                "name": "transformeable",
                "module": "src/mixins/transform.ts"
              }
            },
            {
              "kind": "field",
              "name": "velocity",
              "type": {
                "text": "Vector2D"
              },
              "description": "Anchor movement per second.",
              "reflects": true,
              "attribute": "velocity",
              "inheritedFrom": {
                "name": "transformeable",
                "module": "src/mixins/transform.ts"
              }
            },
            {
              "kind": "field",
              "name": "#origin",
              "privacy": "private",
              "type": {
                "text": "Origin"
              },
              "default": "\"topLeft\"",
              "inheritedFrom": {
                "name": "hasRectangleBounds",
                "module": "src/mixins/rectangleBounds.ts"
              }
            },
            {
              "kind": "field",
              "name": "topLeft",
              "readonly": true,
              "inheritedFrom": {
                "name": "hasRectangleBounds",
                "module": "src/mixins/rectangleBounds.ts"
              }
            },
            {
              "kind": "field",
              "name": "topRight",
              "readonly": true,
              "inheritedFrom": {
                "name": "hasRectangleBounds",
                "module": "src/mixins/rectangleBounds.ts"
              }
            },
            {
              "kind": "field",
              "name": "center",
              "readonly": true,
              "inheritedFrom": {
                "name": "hasRectangleBounds",
                "module": "src/mixins/rectangleBounds.ts"
              }
            },
            {
              "kind": "field",
              "name": "bottomLeft",
              "readonly": true,
              "inheritedFrom": {
                "name": "hasRectangleBounds",
                "module": "src/mixins/rectangleBounds.ts"
              }
            },
            {
              "kind": "field",
              "name": "bottomRight",
              "readonly": true,
              "inheritedFrom": {
                "name": "hasRectangleBounds",
                "module": "src/mixins/rectangleBounds.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderConicalGradient",
              "parameters": [
                {
                  "name": "context",
                  "type": {
                    "text": "CanvasRenderingContext2D"
                  }
                },
                {
                  "name": "gradient",
                  "type": {
                    "text": "ConicalGradient"
                  }
                }
              ],
              "privacy": "private",
              "return": {
                "type": {
                  "text": "CanvasGradient"
                }
              },
              "inheritedFrom": {
                "name": "Canvas2DBaseRenderable",
                "module": "src/elements/canvas2d/renderable.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderLinearGradient",
              "parameters": [
                {
                  "name": "context",
                  "type": {
                    "text": "CanvasRenderingContext2D"
                  }
                },
                {
                  "name": "gradient",
                  "type": {
                    "text": "LinearGradient"
                  }
                }
              ],
              "privacy": "private",
              "return": {
                "type": {
                  "text": "CanvasGradient"
                }
              },
              "inheritedFrom": {
                "name": "Canvas2DBaseRenderable",
                "module": "src/elements/canvas2d/renderable.ts"
              }
            },
            {
              "kind": "field",
              "name": "#width",
              "privacy": "private",
              "type": {
                "text": "number"
              },
              "default": "100",
              "inheritedFrom": {
                "name": "hasDimensions",
                "module": "src/mixins/dimensions.ts"
              }
            },
            {
              "kind": "field",
              "name": "#height",
              "privacy": "private",
              "type": {
                "text": "number"
              },
              "default": "100",
              "inheritedFrom": {
                "name": "hasDimensions",
                "module": "src/mixins/dimensions.ts"
              }
            },
            {
              "kind": "field",
              "name": "width",
              "inheritedFrom": {
                "name": "hasDimensions",
                "module": "src/mixins/dimensions.ts"
              }
            },
            {
              "kind": "field",
              "name": "height",
              "inheritedFrom": {
                "name": "hasDimensions",
                "module": "src/mixins/dimensions.ts"
              }
            },
            {
              "kind": "field",
              "name": "#offset",
              "privacy": "private",
              "default": "new Vector2D(0, 0)",
              "inheritedFrom": {
                "name": "offset",
                "module": "src/mixins/offset.ts"
              }
            },
            {
              "kind": "method",
              "name": "moveOffset",
              "parameters": [
                {
                  "name": "x",
                  "type": {
                    "text": "number"
                  }
                },
                {
                  "name": "y",
                  "type": {
                    "text": "number"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "offset",
                "module": "src/mixins/offset.ts"
              }
            },
            {
              "kind": "field",
              "name": "#offsetChangeListener",
              "privacy": "private",
              "type": {
                "text": "ChangeListener<Vector2DBase>"
              },
              "inheritedFrom": {
                "name": "offset",
                "module": "src/mixins/offset.ts"
              }
            },
            {
              "kind": "field",
              "name": "offset",
              "type": {
                "text": "Vector2D"
              },
              "description": "Position of the element's origin relative to its anchor.",
              "reflects": true,
              "attribute": "offset",
              "inheritedFrom": {
                "name": "offset",
                "module": "src/mixins/offset.ts"
              }
            },
            {
              "kind": "field",
              "name": "#stroke",
              "privacy": "private",
              "type": {
                "text": "DrawStyle | null"
              },
              "default": "null",
              "inheritedFrom": {
                "name": "strokeable",
                "module": "src/mixins/stroke.ts"
              }
            },
            {
              "kind": "field",
              "name": "#lineWidth",
              "privacy": "private",
              "type": {
                "text": "number | null"
              },
              "default": "null",
              "inheritedFrom": {
                "name": "strokeable",
                "module": "src/mixins/stroke.ts"
              }
            },
            {
              "kind": "field",
              "name": "lineWidth",
              "type": {
                "text": "number | null"
              },
              "description": "Width in pixels for drawing lines.",
              "reflects": true,
              "attribute": "line-width",
              "inheritedFrom": {
                "name": "strokeable",
                "module": "src/mixins/stroke.ts"
              }
            },
            {
              "kind": "field",
              "name": "stroke",
              "type": {
                "text": "DrawStyle | null"
              },
              "description": "The rendering style for lines. This may be a color or gradient.\r\nWhen set to null, the parent element's style is used. When\r\nset to \"none\", no lines will be drawn.",
              "reflects": true,
              "attribute": "stroke",
              "inheritedFrom": {
                "name": "strokeable",
                "module": "src/mixins/stroke.ts"
              }
            },
            {
              "kind": "field",
              "name": "#fill",
              "privacy": "private",
              "type": {
                "text": "DrawStyle | null"
              },
              "default": "null",
              "inheritedFrom": {
                "name": "fillable",
                "module": "src/mixins/fill.ts"
              }
            },
            {
              "kind": "field",
              "name": "fill",
              "type": {
                "text": "DrawStyle | null"
              },
              "description": "The rendering style inside the element. This may be a color or gradient.\r\nWhen set to null, the parent element's style is used. When\r\nset to \"none\", the inside will be transparent.",
              "reflects": true,
              "attribute": "fill",
              "inheritedFrom": {
                "name": "fillable",
                "module": "src/mixins/fill.ts"
              }
            },
            {
              "kind": "method",
              "name": "bezier",
              "return": {
                "type": {
                  "text": "Canvas2DBezier"
                }
              },
              "parameters": [
                {
                  "name": "options",
                  "optional": true,
                  "type": {
                    "text": "Options<Canvas2DBezier>"
                  }
                }
              ],
              "description": "Creates a `<c2d-bezier>` child element and returns it.",
              "inheritedFrom": {
                "name": "standaloneChildren",
                "module": "src/mixins/children.ts"
              }
            },
            {
              "kind": "method",
              "name": "ellipse",
              "return": {
                "type": {
                  "text": "Canvas2DEllipse"
                }
              },
              "parameters": [
                {
                  "name": "options",
                  "optional": true,
                  "type": {
                    "text": "Options<Canvas2DEllipse>"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "standaloneChildren",
                "module": "src/mixins/children.ts"
              }
            },
            {
              "kind": "method",
              "name": "image",
              "return": {
                "type": {
                  "text": "Canvas2DImage"
                }
              },
              "parameters": [
                {
                  "name": "options",
                  "optional": true,
                  "type": {
                    "text": "Options<Canvas2DImage>"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "standaloneChildren",
                "module": "src/mixins/children.ts"
              }
            },
            {
              "kind": "method",
              "name": "multiple",
              "return": {
                "type": {
                  "text": "Node[]"
                }
              },
              "parameters": [
                {
                  "name": "callback",
                  "type": {
                    "text": "MultipleCallback"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "standaloneChildren",
                "module": "src/mixins/children.ts"
              }
            },
            {
              "kind": "method",
              "name": "line",
              "return": {
                "type": {
                  "text": "Canvas2DLine"
                }
              },
              "parameters": [
                {
                  "name": "options",
                  "optional": true,
                  "type": {
                    "text": "Options<Canvas2DLine>"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "standaloneChildren",
                "module": "src/mixins/children.ts"
              }
            },
            {
              "kind": "method",
              "name": "rectangle",
              "return": {
                "type": {
                  "text": "Canvas2DRectangle"
                }
              },
              "parameters": [
                {
                  "name": "options",
                  "optional": true,
                  "type": {
                    "text": "Options<Canvas2DRectangle>"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "standaloneChildren",
                "module": "src/mixins/children.ts"
              }
            },
            {
              "kind": "method",
              "name": "shape",
              "return": {
                "type": {
                  "text": "Canvas2DShape"
                }
              },
              "parameters": [
                {
                  "name": "options",
                  "optional": true,
                  "type": {
                    "text": "Options<Canvas2DShape>"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "standaloneChildren",
                "module": "src/mixins/children.ts"
              }
            },
            {
              "kind": "method",
              "name": "text",
              "return": {
                "type": {
                  "text": "Canvas2DText"
                }
              },
              "parameters": [
                {
                  "name": "options",
                  "optional": true,
                  "type": {
                    "text": "Options<Canvas2DText>"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "standaloneChildren",
                "module": "src/mixins/children.ts"
              }
            },
            {
              "kind": "method",
              "name": "video",
              "return": {
                "type": {
                  "text": "Canvas2DVideo"
                }
              },
              "parameters": [
                {
                  "name": "options",
                  "optional": true,
                  "type": {
                    "text": "Options<Canvas2DVideo>"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "standaloneChildren",
                "module": "src/mixins/children.ts"
              }
            },
            {
              "kind": "field",
              "name": "#changedSinceRender",
              "privacy": "private",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "inheritedFrom": {
                "name": "Canvas2DBaseRenderable",
                "module": "src/elements/canvas2d/renderable.ts"
              }
            },
            {
              "kind": "field",
              "name": "#clickListeners",
              "privacy": "private",
              "default": "new Set<EventListenerOrEventListenerObject>()",
              "inheritedFrom": {
                "name": "Canvas2DBaseRenderable",
                "module": "src/elements/canvas2d/renderable.ts"
              }
            },
            {
              "kind": "field",
              "name": "#localMouse",
              "privacy": "private",
              "default": "new MouseData()",
              "inheritedFrom": {
                "name": "Canvas2DBaseRenderable",
                "module": "src/elements/canvas2d/renderable.ts"
              }
            },
            {
              "kind": "field",
              "name": "#mouseListeners",
              "privacy": "private",
              "default": "new Set<EventListenerOrEventListenerObject>()",
              "inheritedFrom": {
                "name": "Canvas2DBaseRenderable",
                "module": "src/elements/canvas2d/renderable.ts"
              }
            },
            {
              "kind": "field",
              "name": "#shadow",
              "privacy": "private",
              "type": {
                "text": "Shadow | null"
              },
              "default": "null",
              "inheritedFrom": {
                "name": "Canvas2DBaseRenderable",
                "module": "src/elements/canvas2d/renderable.ts"
              }
            },
            {
              "kind": "method",
              "name": "addEventListener",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "type",
                  "type": {
                    "text": "keyof HTMLElementEventMap"
                  }
                },
                {
                  "name": "listener",
                  "type": {
                    "text": "EventListenerOrEventListenerObject"
                  }
                },
                {
                  "name": "options",
                  "optional": true,
                  "type": {
                    "text": "boolean | AddEventListenerOptions"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Canvas2DBaseRenderable",
                "module": "src/elements/canvas2d/renderable.ts"
              }
            },
            {
              "kind": "method",
              "name": "removeEventListener",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "type",
                  "type": {
                    "text": "keyof HTMLElementEventMap"
                  }
                },
                {
                  "name": "listener",
                  "type": {
                    "text": "EventListenerOrEventListenerObject"
                  }
                },
                {
                  "name": "options",
                  "optional": true,
                  "type": {
                    "text": "boolean | AddEventListenerOptions"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Canvas2DBaseRenderable",
                "module": "src/elements/canvas2d/renderable.ts"
              }
            },
            {
              "kind": "field",
              "name": "changedSinceRender",
              "privacy": "private",
              "readonly": true,
              "inheritedFrom": {
                "name": "Canvas2DBaseRenderable",
                "module": "src/elements/canvas2d/renderable.ts"
              }
            },
            {
              "kind": "method",
              "name": "#handleClick",
              "privacy": "private",
              "parameters": [
                {
                  "name": "canvas2D",
                  "type": {
                    "text": "Canvas2DCanvasElement"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Canvas2DBaseRenderable",
                "module": "src/elements/canvas2d/renderable.ts"
              }
            },
            {
              "kind": "method",
              "name": "#handleMouse",
              "privacy": "private",
              "parameters": [
                {
                  "name": "canvas2D",
                  "type": {
                    "text": "Canvas2DCanvasElement"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Canvas2DBaseRenderable",
                "module": "src/elements/canvas2d/renderable.ts"
              }
            },
            {
              "kind": "method",
              "name": "registerChange",
              "parameters": [
                {
                  "name": "propertyName",
                  "type": {
                    "text": "P"
                  }
                },
                {
                  "name": "newValue",
                  "type": {
                    "text": "V"
                  }
                }
              ],
              "privacy": "private",
              "inheritedFrom": {
                "name": "Canvas2DBaseRenderable",
                "module": "src/elements/canvas2d/renderable.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderChildren",
              "parameters": [
                {
                  "name": "canvas2D",
                  "type": {
                    "text": "Canvas2DCanvasElement"
                  }
                }
              ],
              "privacy": "private",
              "inheritedFrom": {
                "name": "Canvas2DBaseRenderable",
                "module": "src/elements/canvas2d/renderable.ts"
              }
            },
            {
              "kind": "field",
              "name": "#shadowChangeListener",
              "privacy": "private",
              "type": {
                "text": "ChangeListener<Shadow>"
              },
              "inheritedFrom": {
                "name": "Canvas2DBaseRenderable",
                "module": "src/elements/canvas2d/renderable.ts"
              }
            },
            {
              "kind": "field",
              "name": "shadow",
              "inheritedFrom": {
                "name": "Canvas2DBaseRenderable",
                "module": "src/elements/canvas2d/renderable.ts"
              }
            },
            {
              "kind": "field",
              "name": "#eventProxy",
              "privacy": "private",
              "inheritedFrom": {
                "name": "Canvas2DElement",
                "module": "src/elements/canvas2d/element.ts"
              }
            },
            {
              "kind": "field",
              "name": "#everyFrame",
              "privacy": "private",
              "type": {
                "text": "Updater | null"
              },
              "default": "null",
              "inheritedFrom": {
                "name": "Canvas2DElement",
                "module": "src/elements/canvas2d/element.ts"
              }
            },
            {
              "kind": "field",
              "name": "canvas",
              "type": {
                "text": "Canvas2DCanvasElement"
              },
              "description": "The <c2d-canvas> element that is rendering this element. The <c2d-canvas>\r\nwill be an ancestor of this element.",
              "readonly": true,
              "inheritedFrom": {
                "name": "Canvas2DElement",
                "module": "src/elements/canvas2d/element.ts"
              }
            },
            {
              "kind": "method",
              "name": "createChild",
              "parameters": [
                {
                  "name": "ElementClass",
                  "type": {
                    "text": "E"
                  }
                },
                {
                  "name": "options",
                  "optional": true,
                  "type": {
                    "text": "Options<InstanceType<E>>"
                  }
                }
              ],
              "privacy": "private",
              "inheritedFrom": {
                "name": "Canvas2DElement",
                "module": "src/elements/canvas2d/element.ts"
              }
            },
            {
              "kind": "field",
              "name": "everyFrame",
              "type": {
                "text": "Updater | null"
              },
              "inheritedFrom": {
                "name": "Canvas2DElement",
                "module": "src/elements/canvas2d/element.ts"
              }
            },
            {
              "kind": "field",
              "name": "listen",
              "readonly": true,
              "inheritedFrom": {
                "name": "Canvas2DElement",
                "module": "src/elements/canvas2d/element.ts"
              }
            },
            {
              "kind": "method",
              "name": "scaleByPixelRatio",
              "parameters": [
                {
                  "name": "vector",
                  "type": {
                    "text": "Vector2D"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Canvas2DElement",
                "module": "src/elements/canvas2d/element.ts"
              }
            }
          ],
          "mixins": [
            {
              "name": "renderEllipse",
              "module": "src/elements/canvas2d/ellipse.ts"
            },
            {
              "name": "strokeable",
              "module": "/src/mixins/stroke"
            },
            {
              "name": "fillable",
              "module": "/src/mixins/fill"
            }
          ],
          "superclass": {
            "name": "Canvas2DStandaloneRenderable",
            "module": "/src/elements/canvas2d/renderable"
          },
          "tagName": "c2d-ellipse",
          "customElement": true,
          "attributes": [
            {
              "name": "angle",
              "type": {
                "text": "Angle"
              },
              "description": "Clockwise rotation of the element around its anchor.",
              "fieldName": "angle",
              "inheritedFrom": {
                "name": "transformeable",
                "module": "src/mixins/transform.ts"
              }
            },
            {
              "name": "angular-velocity",
              "type": {
                "text": "Angle"
              },
              "description": "Clockwise rotation per second.",
              "fieldName": "angularVelocity",
              "inheritedFrom": {
                "name": "transformeable",
                "module": "src/mixins/transform.ts"
              }
            },
            {
              "name": "anchor",
              "type": {
                "text": "Vector2D"
              },
              "description": "Base position of the element relative to its parent's anchor.",
              "fieldName": "anchor",
              "inheritedFrom": {
                "name": "transformeable",
                "module": "src/mixins/transform.ts"
              }
            },
            {
              "name": "scale",
              "inheritedFrom": {
                "name": "transformeable",
                "module": "src/mixins/transform.ts"
              }
            },
            {
              "name": "velocity",
              "type": {
                "text": "Vector2D"
              },
              "description": "Anchor movement per second.",
              "fieldName": "velocity",
              "inheritedFrom": {
                "name": "transformeable",
                "module": "src/mixins/transform.ts"
              }
            },
            {
              "name": "offset",
              "type": {
                "text": "Vector2D"
              },
              "description": "Position of the element's origin relative to its anchor.",
              "fieldName": "offset",
              "inheritedFrom": {
                "name": "offset",
                "module": "src/mixins/offset.ts"
              }
            },
            {
              "name": "stroke",
              "type": {
                "text": "DrawStyle | null"
              },
              "description": "The rendering style for lines. This may be a color or gradient.\r\nWhen set to null, the parent element's style is used. When\r\nset to \"none\", no lines will be drawn.",
              "fieldName": "stroke",
              "inheritedFrom": {
                "name": "strokeable",
                "module": "src/mixins/stroke.ts"
              }
            },
            {
              "name": "line-width",
              "type": {
                "text": "number | null"
              },
              "description": "Width in pixels for drawing lines.",
              "fieldName": "lineWidth",
              "inheritedFrom": {
                "name": "strokeable",
                "module": "src/mixins/stroke.ts"
              }
            },
            {
              "name": "fill",
              "type": {
                "text": "DrawStyle | null"
              },
              "description": "The rendering style inside the element. This may be a color or gradient.\r\nWhen set to null, the parent element's style is used. When\r\nset to \"none\", the inside will be transparent.",
              "fieldName": "fill",
              "inheritedFrom": {
                "name": "fillable",
                "module": "src/mixins/fill.ts"
              }
            }
          ],
          "events": [
            {
              "name": "click",
              "type": {
                "text": "PointerEvent"
              },
              "inheritedFrom": {
                "name": "Canvas2DBaseRenderable",
                "module": "src/elements/canvas2d/renderable.ts"
              }
            },
            {
              "name": "mouseout",
              "type": {
                "text": "MouseEvent"
              },
              "inheritedFrom": {
                "name": "Canvas2DBaseRenderable",
                "module": "src/elements/canvas2d/renderable.ts"
              }
            },
            {
              "name": "mouseover",
              "type": {
                "text": "MouseEvent"
              },
              "inheritedFrom": {
                "name": "Canvas2DBaseRenderable",
                "module": "src/elements/canvas2d/renderable.ts"
              }
            },
            {
              "name": "mousemove",
              "type": {
                "text": "MouseEvent"
              },
              "inheritedFrom": {
                "name": "Canvas2DBaseRenderable",
                "module": "src/elements/canvas2d/renderable.ts"
              }
            },
            {
              "name": "mouseenter",
              "type": {
                "text": "MouseEvent"
              },
              "inheritedFrom": {
                "name": "Canvas2DBaseRenderable",
                "module": "src/elements/canvas2d/renderable.ts"
              }
            },
            {
              "name": "mousedown",
              "type": {
                "text": "MouseEvent"
              },
              "inheritedFrom": {
                "name": "Canvas2DBaseRenderable",
                "module": "src/elements/canvas2d/renderable.ts"
              }
            },
            {
              "name": "mouseup",
              "type": {
                "text": "MouseEvent"
              },
              "inheritedFrom": {
                "name": "Canvas2DBaseRenderable",
                "module": "src/elements/canvas2d/renderable.ts"
              }
            }
          ]
        },
        {
          "kind": "class",
          "description": "",
          "name": "Canvas2DShapeEllipse",
          "members": [
            {
              "kind": "field",
              "name": "tag",
              "type": {
                "text": "string"
              },
              "static": true,
              "readonly": true,
              "inheritedFrom": {
                "name": "Canvas2DElement",
                "module": "src/elements/canvas2d/element.ts"
              }
            },
            {
              "kind": "field",
              "name": "#startAngle",
              "privacy": "private",
              "inheritedFrom": {
                "name": "renderEllipse",
                "module": "src/elements/canvas2d/ellipse.ts"
              }
            },
            {
              "kind": "field",
              "name": "#endAngle",
              "privacy": "private",
              "inheritedFrom": {
                "name": "renderEllipse",
                "module": "src/elements/canvas2d/ellipse.ts"
              }
            },
            {
              "kind": "method",
              "name": "render",
              "parameters": [
                {
                  "name": "canvas2D",
                  "type": {
                    "text": "Canvas2DCanvasElement"
                  }
                }
              ],
              "privacy": "private",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "Canvas2DBaseRenderable",
                "module": "src/elements/canvas2d/renderable.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderRadialGradient",
              "parameters": [
                {
                  "name": "context",
                  "type": {
                    "text": "CanvasRenderingContext2D"
                  }
                },
                {
                  "name": "gradient",
                  "type": {
                    "text": "RadialGradient"
                  }
                }
              ],
              "privacy": "private",
              "return": {
                "type": {
                  "text": "CanvasGradient"
                }
              },
              "inheritedFrom": {
                "name": "Canvas2DBaseRenderable",
                "module": "src/elements/canvas2d/renderable.ts"
              }
            },
            {
              "kind": "field",
              "name": "startAngle",
              "inheritedFrom": {
                "name": "renderEllipse",
                "module": "src/elements/canvas2d/ellipse.ts"
              }
            },
            {
              "kind": "field",
              "name": "endAngle",
              "inheritedFrom": {
                "name": "renderEllipse",
                "module": "src/elements/canvas2d/ellipse.ts"
              }
            },
            {
              "kind": "field",
              "name": "origin",
              "type": {
                "text": "string"
              },
              "default": "\"center\"",
              "inheritedFrom": {
                "name": "hasRectangleBounds",
                "module": "src/mixins/rectangleBounds.ts"
              }
            },
            {
              "kind": "field",
              "name": "#anchor",
              "privacy": "private",
              "inheritedFrom": {
                "name": "transformeable",
                "module": "src/mixins/transform.ts"
              }
            },
            {
              "kind": "field",
              "name": "#angle",
              "privacy": "private",
              "inheritedFrom": {
                "name": "transformeable",
                "module": "src/mixins/transform.ts"
              }
            },
            {
              "kind": "field",
              "name": "#angularVelocity",
              "privacy": "private",
              "inheritedFrom": {
                "name": "transformeable",
                "module": "src/mixins/transform.ts"
              }
            },
            {
              "kind": "field",
              "name": "#scale",
              "privacy": "private",
              "inheritedFrom": {
                "name": "transformeable",
                "module": "src/mixins/transform.ts"
              }
            },
            {
              "kind": "field",
              "name": "#velocity",
              "privacy": "private",
              "inheritedFrom": {
                "name": "transformeable",
                "module": "src/mixins/transform.ts"
              }
            },
            {
              "kind": "field",
              "name": "#angleChangeListener",
              "privacy": "private",
              "type": {
                "text": "ChangeListener<number>"
              },
              "inheritedFrom": {
                "name": "transformeable",
                "module": "src/mixins/transform.ts"
              }
            },
            {
              "kind": "field",
              "name": "angle",
              "type": {
                "text": "Angle"
              },
              "description": "Clockwise rotation of the element around its anchor.",
              "reflects": true,
              "attribute": "angle",
              "inheritedFrom": {
                "name": "transformeable",
                "module": "src/mixins/transform.ts"
              }
            },
            {
              "kind": "field",
              "name": "#angularVelocityChangedTime",
              "privacy": "private",
              "type": {
                "text": "number"
              },
              "default": "-1",
              "inheritedFrom": {
                "name": "transformeable",
                "module": "src/mixins/transform.ts"
              }
            },
            {
              "kind": "field",
              "name": "angularVelocity",
              "type": {
                "text": "Angle"
              },
              "description": "Clockwise rotation per second.",
              "reflects": true,
              "attribute": "angular-velocity",
              "inheritedFrom": {
                "name": "transformeable",
                "module": "src/mixins/transform.ts"
              }
            },
            {
              "kind": "field",
              "name": "anchor",
              "type": {
                "text": "Vector2D"
              },
              "description": "Base position of the element relative to its parent's anchor.",
              "reflects": true,
              "attribute": "anchor",
              "inheritedFrom": {
                "name": "transformeable",
                "module": "src/mixins/transform.ts"
              }
            },
            {
              "kind": "field",
              "name": "#anchorChangeListener",
              "privacy": "private",
              "type": {
                "text": "ChangeListener<Vector2DBase>"
              },
              "inheritedFrom": {
                "name": "transformeable",
                "module": "src/mixins/transform.ts"
              }
            },
            {
              "kind": "method",
              "name": "moveAnchor",
              "parameters": [
                {
                  "name": "x",
                  "type": {
                    "text": "number"
                  }
                },
                {
                  "name": "y",
                  "type": {
                    "text": "number"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "transformeable",
                "module": "src/mixins/transform.ts"
              }
            },
            {
              "kind": "method",
              "name": "afterRender",
              "parameters": [
                {
                  "name": "canvas2D",
                  "type": {
                    "text": "Canvas2DCanvasElement"
                  }
                }
              ],
              "privacy": "private",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "Canvas2DBaseRenderable",
                "module": "src/elements/canvas2d/renderable.ts"
              }
            },
            {
              "kind": "method",
              "name": "rotateClockwise",
              "parameters": [
                {
                  "name": "angle",
                  "type": {
                    "text": "Angle"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "transformeable",
                "module": "src/mixins/transform.ts"
              }
            },
            {
              "kind": "method",
              "name": "rotateCounterclockwise",
              "parameters": [
                {
                  "name": "angle",
                  "type": {
                    "text": "Angle"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "transformeable",
                "module": "src/mixins/transform.ts"
              }
            },
            {
              "kind": "field",
              "name": "scale",
              "inheritedFrom": {
                "name": "transformeable",
                "module": "src/mixins/transform.ts"
              }
            },
            {
              "kind": "field",
              "name": "#velocityChangedTime",
              "privacy": "private",
              "type": {
                "text": "number"
              },
              "default": "-1",
              "inheritedFrom": {
                "name": "transformeable",
                "module": "src/mixins/transform.ts"
              }
            },
            {
              "kind": "field",
              "name": "velocity",
              "type": {
                "text": "Vector2D"
              },
              "description": "Anchor movement per second.",
              "reflects": true,
              "attribute": "velocity",
              "inheritedFrom": {
                "name": "transformeable",
                "module": "src/mixins/transform.ts"
              }
            },
            {
              "kind": "field",
              "name": "#origin",
              "privacy": "private",
              "type": {
                "text": "Origin"
              },
              "default": "\"topLeft\"",
              "inheritedFrom": {
                "name": "hasRectangleBounds",
                "module": "src/mixins/rectangleBounds.ts"
              }
            },
            {
              "kind": "field",
              "name": "topLeft",
              "readonly": true,
              "inheritedFrom": {
                "name": "hasRectangleBounds",
                "module": "src/mixins/rectangleBounds.ts"
              }
            },
            {
              "kind": "field",
              "name": "topRight",
              "readonly": true,
              "inheritedFrom": {
                "name": "hasRectangleBounds",
                "module": "src/mixins/rectangleBounds.ts"
              }
            },
            {
              "kind": "field",
              "name": "center",
              "readonly": true,
              "inheritedFrom": {
                "name": "hasRectangleBounds",
                "module": "src/mixins/rectangleBounds.ts"
              }
            },
            {
              "kind": "field",
              "name": "bottomLeft",
              "readonly": true,
              "inheritedFrom": {
                "name": "hasRectangleBounds",
                "module": "src/mixins/rectangleBounds.ts"
              }
            },
            {
              "kind": "field",
              "name": "bottomRight",
              "readonly": true,
              "inheritedFrom": {
                "name": "hasRectangleBounds",
                "module": "src/mixins/rectangleBounds.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderConicalGradient",
              "parameters": [
                {
                  "name": "context",
                  "type": {
                    "text": "CanvasRenderingContext2D"
                  }
                },
                {
                  "name": "gradient",
                  "type": {
                    "text": "ConicalGradient"
                  }
                }
              ],
              "privacy": "private",
              "return": {
                "type": {
                  "text": "CanvasGradient"
                }
              },
              "inheritedFrom": {
                "name": "Canvas2DBaseRenderable",
                "module": "src/elements/canvas2d/renderable.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderLinearGradient",
              "parameters": [
                {
                  "name": "context",
                  "type": {
                    "text": "CanvasRenderingContext2D"
                  }
                },
                {
                  "name": "gradient",
                  "type": {
                    "text": "LinearGradient"
                  }
                }
              ],
              "privacy": "private",
              "return": {
                "type": {
                  "text": "CanvasGradient"
                }
              },
              "inheritedFrom": {
                "name": "Canvas2DBaseRenderable",
                "module": "src/elements/canvas2d/renderable.ts"
              }
            },
            {
              "kind": "field",
              "name": "#width",
              "privacy": "private",
              "type": {
                "text": "number"
              },
              "default": "100",
              "inheritedFrom": {
                "name": "hasDimensions",
                "module": "src/mixins/dimensions.ts"
              }
            },
            {
              "kind": "field",
              "name": "#height",
              "privacy": "private",
              "type": {
                "text": "number"
              },
              "default": "100",
              "inheritedFrom": {
                "name": "hasDimensions",
                "module": "src/mixins/dimensions.ts"
              }
            },
            {
              "kind": "field",
              "name": "width",
              "inheritedFrom": {
                "name": "hasDimensions",
                "module": "src/mixins/dimensions.ts"
              }
            },
            {
              "kind": "field",
              "name": "height",
              "inheritedFrom": {
                "name": "hasDimensions",
                "module": "src/mixins/dimensions.ts"
              }
            },
            {
              "kind": "field",
              "name": "#offset",
              "privacy": "private",
              "default": "new Vector2D(0, 0)",
              "inheritedFrom": {
                "name": "offset",
                "module": "src/mixins/offset.ts"
              }
            },
            {
              "kind": "method",
              "name": "moveOffset",
              "parameters": [
                {
                  "name": "x",
                  "type": {
                    "text": "number"
                  }
                },
                {
                  "name": "y",
                  "type": {
                    "text": "number"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "offset",
                "module": "src/mixins/offset.ts"
              }
            },
            {
              "kind": "field",
              "name": "#offsetChangeListener",
              "privacy": "private",
              "type": {
                "text": "ChangeListener<Vector2DBase>"
              },
              "inheritedFrom": {
                "name": "offset",
                "module": "src/mixins/offset.ts"
              }
            },
            {
              "kind": "field",
              "name": "offset",
              "type": {
                "text": "Vector2D"
              },
              "description": "Position of the element's origin relative to its anchor.",
              "reflects": true,
              "attribute": "offset",
              "inheritedFrom": {
                "name": "offset",
                "module": "src/mixins/offset.ts"
              }
            },
            {
              "kind": "method",
              "name": "bezier",
              "parameters": [
                {
                  "name": "options",
                  "optional": true,
                  "type": {
                    "text": "Options<Canvas2DShapeBezier>"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "partChildren",
                "module": "src/mixins/children.ts"
              }
            },
            {
              "kind": "method",
              "name": "ellipse",
              "parameters": [
                {
                  "name": "options",
                  "optional": true,
                  "type": {
                    "text": "Options<Canvas2DShapeEllipse>"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "partChildren",
                "module": "src/mixins/children.ts"
              }
            },
            {
              "kind": "method",
              "name": "line",
              "parameters": [
                {
                  "name": "options",
                  "optional": true,
                  "type": {
                    "text": "Options<Canvas2DShapeLine>"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "partChildren",
                "module": "src/mixins/children.ts"
              }
            },
            {
              "kind": "method",
              "name": "rectangle",
              "parameters": [
                {
                  "name": "options",
                  "optional": true,
                  "type": {
                    "text": "Options<Canvas2DShapeRectangle>"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "partChildren",
                "module": "src/mixins/children.ts"
              }
            },
            {
              "kind": "field",
              "name": "#changedSinceRender",
              "privacy": "private",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "inheritedFrom": {
                "name": "Canvas2DBaseRenderable",
                "module": "src/elements/canvas2d/renderable.ts"
              }
            },
            {
              "kind": "field",
              "name": "#clickListeners",
              "privacy": "private",
              "default": "new Set<EventListenerOrEventListenerObject>()",
              "inheritedFrom": {
                "name": "Canvas2DBaseRenderable",
                "module": "src/elements/canvas2d/renderable.ts"
              }
            },
            {
              "kind": "field",
              "name": "#localMouse",
              "privacy": "private",
              "default": "new MouseData()",
              "inheritedFrom": {
                "name": "Canvas2DBaseRenderable",
                "module": "src/elements/canvas2d/renderable.ts"
              }
            },
            {
              "kind": "field",
              "name": "#mouseListeners",
              "privacy": "private",
              "default": "new Set<EventListenerOrEventListenerObject>()",
              "inheritedFrom": {
                "name": "Canvas2DBaseRenderable",
                "module": "src/elements/canvas2d/renderable.ts"
              }
            },
            {
              "kind": "field",
              "name": "#shadow",
              "privacy": "private",
              "type": {
                "text": "Shadow | null"
              },
              "default": "null",
              "inheritedFrom": {
                "name": "Canvas2DBaseRenderable",
                "module": "src/elements/canvas2d/renderable.ts"
              }
            },
            {
              "kind": "method",
              "name": "addEventListener",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "type",
                  "type": {
                    "text": "keyof HTMLElementEventMap"
                  }
                },
                {
                  "name": "listener",
                  "type": {
                    "text": "EventListenerOrEventListenerObject"
                  }
                },
                {
                  "name": "options",
                  "optional": true,
                  "type": {
                    "text": "boolean | AddEventListenerOptions"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Canvas2DBaseRenderable",
                "module": "src/elements/canvas2d/renderable.ts"
              }
            },
            {
              "kind": "method",
              "name": "removeEventListener",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "type",
                  "type": {
                    "text": "keyof HTMLElementEventMap"
                  }
                },
                {
                  "name": "listener",
                  "type": {
                    "text": "EventListenerOrEventListenerObject"
                  }
                },
                {
                  "name": "options",
                  "optional": true,
                  "type": {
                    "text": "boolean | AddEventListenerOptions"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Canvas2DBaseRenderable",
                "module": "src/elements/canvas2d/renderable.ts"
              }
            },
            {
              "kind": "field",
              "name": "changedSinceRender",
              "privacy": "private",
              "readonly": true,
              "inheritedFrom": {
                "name": "Canvas2DBaseRenderable",
                "module": "src/elements/canvas2d/renderable.ts"
              }
            },
            {
              "kind": "method",
              "name": "#handleClick",
              "privacy": "private",
              "parameters": [
                {
                  "name": "canvas2D",
                  "type": {
                    "text": "Canvas2DCanvasElement"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Canvas2DBaseRenderable",
                "module": "src/elements/canvas2d/renderable.ts"
              }
            },
            {
              "kind": "method",
              "name": "#handleMouse",
              "privacy": "private",
              "parameters": [
                {
                  "name": "canvas2D",
                  "type": {
                    "text": "Canvas2DCanvasElement"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Canvas2DBaseRenderable",
                "module": "src/elements/canvas2d/renderable.ts"
              }
            },
            {
              "kind": "method",
              "name": "registerChange",
              "parameters": [
                {
                  "name": "propertyName",
                  "type": {
                    "text": "P"
                  }
                },
                {
                  "name": "newValue",
                  "type": {
                    "text": "V"
                  }
                }
              ],
              "privacy": "private",
              "inheritedFrom": {
                "name": "Canvas2DBaseRenderable",
                "module": "src/elements/canvas2d/renderable.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderChildren",
              "parameters": [
                {
                  "name": "canvas2D",
                  "type": {
                    "text": "Canvas2DCanvasElement"
                  }
                }
              ],
              "privacy": "private",
              "inheritedFrom": {
                "name": "Canvas2DBaseRenderable",
                "module": "src/elements/canvas2d/renderable.ts"
              }
            },
            {
              "kind": "field",
              "name": "#shadowChangeListener",
              "privacy": "private",
              "type": {
                "text": "ChangeListener<Shadow>"
              },
              "inheritedFrom": {
                "name": "Canvas2DBaseRenderable",
                "module": "src/elements/canvas2d/renderable.ts"
              }
            },
            {
              "kind": "field",
              "name": "shadow",
              "inheritedFrom": {
                "name": "Canvas2DBaseRenderable",
                "module": "src/elements/canvas2d/renderable.ts"
              }
            },
            {
              "kind": "field",
              "name": "#eventProxy",
              "privacy": "private",
              "inheritedFrom": {
                "name": "Canvas2DElement",
                "module": "src/elements/canvas2d/element.ts"
              }
            },
            {
              "kind": "field",
              "name": "#everyFrame",
              "privacy": "private",
              "type": {
                "text": "Updater | null"
              },
              "default": "null",
              "inheritedFrom": {
                "name": "Canvas2DElement",
                "module": "src/elements/canvas2d/element.ts"
              }
            },
            {
              "kind": "field",
              "name": "canvas",
              "type": {
                "text": "Canvas2DCanvasElement"
              },
              "description": "The <c2d-canvas> element that is rendering this element. The <c2d-canvas>\r\nwill be an ancestor of this element.",
              "readonly": true,
              "inheritedFrom": {
                "name": "Canvas2DElement",
                "module": "src/elements/canvas2d/element.ts"
              }
            },
            {
              "kind": "method",
              "name": "createChild",
              "parameters": [
                {
                  "name": "ElementClass",
                  "type": {
                    "text": "E"
                  }
                },
                {
                  "name": "options",
                  "optional": true,
                  "type": {
                    "text": "Options<InstanceType<E>>"
                  }
                }
              ],
              "privacy": "private",
              "inheritedFrom": {
                "name": "Canvas2DElement",
                "module": "src/elements/canvas2d/element.ts"
              }
            },
            {
              "kind": "field",
              "name": "everyFrame",
              "type": {
                "text": "Updater | null"
              },
              "inheritedFrom": {
                "name": "Canvas2DElement",
                "module": "src/elements/canvas2d/element.ts"
              }
            },
            {
              "kind": "field",
              "name": "listen",
              "readonly": true,
              "inheritedFrom": {
                "name": "Canvas2DElement",
                "module": "src/elements/canvas2d/element.ts"
              }
            },
            {
              "kind": "method",
              "name": "scaleByPixelRatio",
              "parameters": [
                {
                  "name": "vector",
                  "type": {
                    "text": "Vector2D"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Canvas2DElement",
                "module": "src/elements/canvas2d/element.ts"
              }
            }
          ],
          "mixins": [
            {
              "name": "renderEllipse",
              "module": "src/elements/canvas2d/ellipse.ts"
            }
          ],
          "superclass": {
            "name": "Canvas2DShapePartRenderable",
            "module": "/src/elements/canvas2d/renderable"
          },
          "tagName": "c2d-shape-ellipse",
          "customElement": true,
          "attributes": [
            {
              "name": "angle",
              "type": {
                "text": "Angle"
              },
              "description": "Clockwise rotation of the element around its anchor.",
              "fieldName": "angle",
              "inheritedFrom": {
                "name": "transformeable",
                "module": "src/mixins/transform.ts"
              }
            },
            {
              "name": "angular-velocity",
              "type": {
                "text": "Angle"
              },
              "description": "Clockwise rotation per second.",
              "fieldName": "angularVelocity",
              "inheritedFrom": {
                "name": "transformeable",
                "module": "src/mixins/transform.ts"
              }
            },
            {
              "name": "anchor",
              "type": {
                "text": "Vector2D"
              },
              "description": "Base position of the element relative to its parent's anchor.",
              "fieldName": "anchor",
              "inheritedFrom": {
                "name": "transformeable",
                "module": "src/mixins/transform.ts"
              }
            },
            {
              "name": "scale",
              "inheritedFrom": {
                "name": "transformeable",
                "module": "src/mixins/transform.ts"
              }
            },
            {
              "name": "velocity",
              "type": {
                "text": "Vector2D"
              },
              "description": "Anchor movement per second.",
              "fieldName": "velocity",
              "inheritedFrom": {
                "name": "transformeable",
                "module": "src/mixins/transform.ts"
              }
            },
            {
              "name": "offset",
              "type": {
                "text": "Vector2D"
              },
              "description": "Position of the element's origin relative to its anchor.",
              "fieldName": "offset",
              "inheritedFrom": {
                "name": "offset",
                "module": "src/mixins/offset.ts"
              }
            }
          ],
          "events": [
            {
              "name": "click",
              "type": {
                "text": "PointerEvent"
              },
              "inheritedFrom": {
                "name": "Canvas2DBaseRenderable",
                "module": "src/elements/canvas2d/renderable.ts"
              }
            },
            {
              "name": "mouseout",
              "type": {
                "text": "MouseEvent"
              },
              "inheritedFrom": {
                "name": "Canvas2DBaseRenderable",
                "module": "src/elements/canvas2d/renderable.ts"
              }
            },
            {
              "name": "mouseover",
              "type": {
                "text": "MouseEvent"
              },
              "inheritedFrom": {
                "name": "Canvas2DBaseRenderable",
                "module": "src/elements/canvas2d/renderable.ts"
              }
            },
            {
              "name": "mousemove",
              "type": {
                "text": "MouseEvent"
              },
              "inheritedFrom": {
                "name": "Canvas2DBaseRenderable",
                "module": "src/elements/canvas2d/renderable.ts"
              }
            },
            {
              "name": "mouseenter",
              "type": {
                "text": "MouseEvent"
              },
              "inheritedFrom": {
                "name": "Canvas2DBaseRenderable",
                "module": "src/elements/canvas2d/renderable.ts"
              }
            },
            {
              "name": "mousedown",
              "type": {
                "text": "MouseEvent"
              },
              "inheritedFrom": {
                "name": "Canvas2DBaseRenderable",
                "module": "src/elements/canvas2d/renderable.ts"
              }
            },
            {
              "name": "mouseup",
              "type": {
                "text": "MouseEvent"
              },
              "inheritedFrom": {
                "name": "Canvas2DBaseRenderable",
                "module": "src/elements/canvas2d/renderable.ts"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "Canvas2DEllipse",
          "declaration": {
            "name": "Canvas2DEllipse",
            "module": "src/elements/canvas2d/ellipse.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "c2d-ellipse",
          "declaration": {
            "name": "Canvas2DEllipse",
            "module": "src/elements/canvas2d/ellipse.ts"
          }
        },
        {
          "kind": "js",
          "name": "Canvas2DShapeEllipse",
          "declaration": {
            "name": "Canvas2DShapeEllipse",
            "module": "src/elements/canvas2d/ellipse.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "c2d-shape-ellipse",
          "declaration": {
            "name": "Canvas2DShapeEllipse",
            "module": "src/elements/canvas2d/ellipse.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/elements/canvas2d/image.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "Canvas2DImage",
          "members": [
            {
              "kind": "field",
              "name": "tag",
              "type": {
                "text": "string"
              },
              "static": true,
              "readonly": true,
              "inheritedFrom": {
                "name": "Canvas2DElement",
                "module": "src/elements/canvas2d/element.ts"
              }
            },
            {
              "kind": "field",
              "name": "#mediaElement",
              "privacy": "private",
              "type": {
                "text": "HTMLElementTagNameMap[T]"
              },
              "inheritedFrom": {
                "name": "rendersVisualMedia",
                "module": "src/mixins/visualMedia.ts"
              }
            },
            {
              "kind": "field",
              "name": "#widthSet",
              "privacy": "private",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "inheritedFrom": {
                "name": "rendersVisualMedia",
                "module": "src/mixins/visualMedia.ts"
              }
            },
            {
              "kind": "field",
              "name": "#heightSet",
              "privacy": "private",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "inheritedFrom": {
                "name": "rendersVisualMedia",
                "module": "src/mixins/visualMedia.ts"
              }
            },
            {
              "kind": "field",
              "name": "mediaElement",
              "readonly": true,
              "inheritedFrom": {
                "name": "rendersVisualMedia",
                "module": "src/mixins/visualMedia.ts"
              }
            },
            {
              "kind": "field",
              "name": "source",
              "inheritedFrom": {
                "name": "rendersVisualMedia",
                "module": "src/mixins/visualMedia.ts"
              }
            },
            {
              "kind": "method",
              "name": "render",
              "parameters": [
                {
                  "name": "canvas2D",
                  "type": {
                    "text": "Canvas2DCanvasElement"
                  }
                }
              ],
              "privacy": "private",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "Canvas2DBaseRenderable",
                "module": "src/elements/canvas2d/renderable.ts"
              }
            },
            {
              "kind": "field",
              "name": "mediaWidth",
              "readonly": true,
              "inheritedFrom": {
                "name": "rendersVisualMedia",
                "module": "src/mixins/visualMedia.ts"
              }
            },
            {
              "kind": "field",
              "name": "width",
              "inheritedFrom": {
                "name": "hasDimensions",
                "module": "src/mixins/dimensions.ts"
              }
            },
            {
              "kind": "field",
              "name": "mediaHeight",
              "readonly": true,
              "inheritedFrom": {
                "name": "rendersVisualMedia",
                "module": "src/mixins/visualMedia.ts"
              }
            },
            {
              "kind": "field",
              "name": "height",
              "inheritedFrom": {
                "name": "hasDimensions",
                "module": "src/mixins/dimensions.ts"
              }
            },
            {
              "kind": "field",
              "name": "#anchor",
              "privacy": "private",
              "inheritedFrom": {
                "name": "transformeable",
                "module": "src/mixins/transform.ts"
              }
            },
            {
              "kind": "field",
              "name": "#angle",
              "privacy": "private",
              "inheritedFrom": {
                "name": "transformeable",
                "module": "src/mixins/transform.ts"
              }
            },
            {
              "kind": "field",
              "name": "#angularVelocity",
              "privacy": "private",
              "inheritedFrom": {
                "name": "transformeable",
                "module": "src/mixins/transform.ts"
              }
            },
            {
              "kind": "field",
              "name": "#scale",
              "privacy": "private",
              "inheritedFrom": {
                "name": "transformeable",
                "module": "src/mixins/transform.ts"
              }
            },
            {
              "kind": "field",
              "name": "#velocity",
              "privacy": "private",
              "inheritedFrom": {
                "name": "transformeable",
                "module": "src/mixins/transform.ts"
              }
            },
            {
              "kind": "field",
              "name": "#angleChangeListener",
              "privacy": "private",
              "type": {
                "text": "ChangeListener<number>"
              },
              "inheritedFrom": {
                "name": "transformeable",
                "module": "src/mixins/transform.ts"
              }
            },
            {
              "kind": "field",
              "name": "angle",
              "type": {
                "text": "Angle"
              },
              "description": "Clockwise rotation of the element around its anchor.",
              "reflects": true,
              "attribute": "angle",
              "inheritedFrom": {
                "name": "transformeable",
                "module": "src/mixins/transform.ts"
              }
            },
            {
              "kind": "field",
              "name": "#angularVelocityChangedTime",
              "privacy": "private",
              "type": {
                "text": "number"
              },
              "default": "-1",
              "inheritedFrom": {
                "name": "transformeable",
                "module": "src/mixins/transform.ts"
              }
            },
            {
              "kind": "field",
              "name": "angularVelocity",
              "type": {
                "text": "Angle"
              },
              "description": "Clockwise rotation per second.",
              "reflects": true,
              "attribute": "angular-velocity",
              "inheritedFrom": {
                "name": "transformeable",
                "module": "src/mixins/transform.ts"
              }
            },
            {
              "kind": "field",
              "name": "anchor",
              "type": {
                "text": "Vector2D"
              },
              "description": "Base position of the element relative to its parent's anchor.",
              "reflects": true,
              "attribute": "anchor",
              "inheritedFrom": {
                "name": "transformeable",
                "module": "src/mixins/transform.ts"
              }
            },
            {
              "kind": "field",
              "name": "#anchorChangeListener",
              "privacy": "private",
              "type": {
                "text": "ChangeListener<Vector2DBase>"
              },
              "inheritedFrom": {
                "name": "transformeable",
                "module": "src/mixins/transform.ts"
              }
            },
            {
              "kind": "method",
              "name": "moveAnchor",
              "parameters": [
                {
                  "name": "x",
                  "type": {
                    "text": "number"
                  }
                },
                {
                  "name": "y",
                  "type": {
                    "text": "number"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "transformeable",
                "module": "src/mixins/transform.ts"
              }
            },
            {
              "kind": "method",
              "name": "afterRender",
              "parameters": [
                {
                  "name": "canvas2D",
                  "type": {
                    "text": "Canvas2DCanvasElement"
                  }
                }
              ],
              "privacy": "private",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "Canvas2DBaseRenderable",
                "module": "src/elements/canvas2d/renderable.ts"
              }
            },
            {
              "kind": "method",
              "name": "rotateClockwise",
              "parameters": [
                {
                  "name": "angle",
                  "type": {
                    "text": "Angle"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "transformeable",
                "module": "src/mixins/transform.ts"
              }
            },
            {
              "kind": "method",
              "name": "rotateCounterclockwise",
              "parameters": [
                {
                  "name": "angle",
                  "type": {
                    "text": "Angle"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "transformeable",
                "module": "src/mixins/transform.ts"
              }
            },
            {
              "kind": "field",
              "name": "scale",
              "inheritedFrom": {
                "name": "transformeable",
                "module": "src/mixins/transform.ts"
              }
            },
            {
              "kind": "field",
              "name": "#velocityChangedTime",
              "privacy": "private",
              "type": {
                "text": "number"
              },
              "default": "-1",
              "inheritedFrom": {
                "name": "transformeable",
                "module": "src/mixins/transform.ts"
              }
            },
            {
              "kind": "field",
              "name": "velocity",
              "type": {
                "text": "Vector2D"
              },
              "description": "Anchor movement per second.",
              "reflects": true,
              "attribute": "velocity",
              "inheritedFrom": {
                "name": "transformeable",
                "module": "src/mixins/transform.ts"
              }
            },
            {
              "kind": "field",
              "name": "#origin",
              "privacy": "private",
              "type": {
                "text": "Origin"
              },
              "default": "\"topLeft\"",
              "inheritedFrom": {
                "name": "hasRectangleBounds",
                "module": "src/mixins/rectangleBounds.ts"
              }
            },
            {
              "kind": "field",
              "name": "topLeft",
              "readonly": true,
              "inheritedFrom": {
                "name": "hasRectangleBounds",
                "module": "src/mixins/rectangleBounds.ts"
              }
            },
            {
              "kind": "field",
              "name": "topRight",
              "readonly": true,
              "inheritedFrom": {
                "name": "hasRectangleBounds",
                "module": "src/mixins/rectangleBounds.ts"
              }
            },
            {
              "kind": "field",
              "name": "center",
              "readonly": true,
              "inheritedFrom": {
                "name": "hasRectangleBounds",
                "module": "src/mixins/rectangleBounds.ts"
              }
            },
            {
              "kind": "field",
              "name": "bottomLeft",
              "readonly": true,
              "inheritedFrom": {
                "name": "hasRectangleBounds",
                "module": "src/mixins/rectangleBounds.ts"
              }
            },
            {
              "kind": "field",
              "name": "bottomRight",
              "readonly": true,
              "inheritedFrom": {
                "name": "hasRectangleBounds",
                "module": "src/mixins/rectangleBounds.ts"
              }
            },
            {
              "kind": "field",
              "name": "origin",
              "inheritedFrom": {
                "name": "hasRectangleBounds",
                "module": "src/mixins/rectangleBounds.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderConicalGradient",
              "parameters": [
                {
                  "name": "context",
                  "type": {
                    "text": "CanvasRenderingContext2D"
                  }
                },
                {
                  "name": "gradient",
                  "type": {
                    "text": "ConicalGradient"
                  }
                }
              ],
              "privacy": "private",
              "return": {
                "type": {
                  "text": "CanvasGradient"
                }
              },
              "inheritedFrom": {
                "name": "Canvas2DBaseRenderable",
                "module": "src/elements/canvas2d/renderable.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderLinearGradient",
              "parameters": [
                {
                  "name": "context",
                  "type": {
                    "text": "CanvasRenderingContext2D"
                  }
                },
                {
                  "name": "gradient",
                  "type": {
                    "text": "LinearGradient"
                  }
                }
              ],
              "privacy": "private",
              "return": {
                "type": {
                  "text": "CanvasGradient"
                }
              },
              "inheritedFrom": {
                "name": "Canvas2DBaseRenderable",
                "module": "src/elements/canvas2d/renderable.ts"
              }
            },
            {
              "kind": "field",
              "name": "#width",
              "privacy": "private",
              "type": {
                "text": "number"
              },
              "default": "100",
              "inheritedFrom": {
                "name": "hasDimensions",
                "module": "src/mixins/dimensions.ts"
              }
            },
            {
              "kind": "field",
              "name": "#height",
              "privacy": "private",
              "type": {
                "text": "number"
              },
              "default": "100",
              "inheritedFrom": {
                "name": "hasDimensions",
                "module": "src/mixins/dimensions.ts"
              }
            },
            {
              "kind": "field",
              "name": "#offset",
              "privacy": "private",
              "default": "new Vector2D(0, 0)",
              "inheritedFrom": {
                "name": "offset",
                "module": "src/mixins/offset.ts"
              }
            },
            {
              "kind": "method",
              "name": "moveOffset",
              "parameters": [
                {
                  "name": "x",
                  "type": {
                    "text": "number"
                  }
                },
                {
                  "name": "y",
                  "type": {
                    "text": "number"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "offset",
                "module": "src/mixins/offset.ts"
              }
            },
            {
              "kind": "field",
              "name": "#offsetChangeListener",
              "privacy": "private",
              "type": {
                "text": "ChangeListener<Vector2DBase>"
              },
              "inheritedFrom": {
                "name": "offset",
                "module": "src/mixins/offset.ts"
              }
            },
            {
              "kind": "field",
              "name": "offset",
              "type": {
                "text": "Vector2D"
              },
              "description": "Position of the element's origin relative to its anchor.",
              "reflects": true,
              "attribute": "offset",
              "inheritedFrom": {
                "name": "offset",
                "module": "src/mixins/offset.ts"
              }
            },
            {
              "kind": "method",
              "name": "bezier",
              "return": {
                "type": {
                  "text": "Canvas2DBezier"
                }
              },
              "parameters": [
                {
                  "name": "options",
                  "optional": true,
                  "type": {
                    "text": "Options<Canvas2DBezier>"
                  }
                }
              ],
              "description": "Creates a `<c2d-bezier>` child element and returns it.",
              "inheritedFrom": {
                "name": "standaloneChildren",
                "module": "src/mixins/children.ts"
              }
            },
            {
              "kind": "method",
              "name": "ellipse",
              "return": {
                "type": {
                  "text": "Canvas2DEllipse"
                }
              },
              "parameters": [
                {
                  "name": "options",
                  "optional": true,
                  "type": {
                    "text": "Options<Canvas2DEllipse>"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "standaloneChildren",
                "module": "src/mixins/children.ts"
              }
            },
            {
              "kind": "method",
              "name": "image",
              "return": {
                "type": {
                  "text": "Canvas2DImage"
                }
              },
              "parameters": [
                {
                  "name": "options",
                  "optional": true,
                  "type": {
                    "text": "Options<Canvas2DImage>"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "standaloneChildren",
                "module": "src/mixins/children.ts"
              }
            },
            {
              "kind": "method",
              "name": "multiple",
              "return": {
                "type": {
                  "text": "Node[]"
                }
              },
              "parameters": [
                {
                  "name": "callback",
                  "type": {
                    "text": "MultipleCallback"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "standaloneChildren",
                "module": "src/mixins/children.ts"
              }
            },
            {
              "kind": "method",
              "name": "line",
              "return": {
                "type": {
                  "text": "Canvas2DLine"
                }
              },
              "parameters": [
                {
                  "name": "options",
                  "optional": true,
                  "type": {
                    "text": "Options<Canvas2DLine>"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "standaloneChildren",
                "module": "src/mixins/children.ts"
              }
            },
            {
              "kind": "method",
              "name": "rectangle",
              "return": {
                "type": {
                  "text": "Canvas2DRectangle"
                }
              },
              "parameters": [
                {
                  "name": "options",
                  "optional": true,
                  "type": {
                    "text": "Options<Canvas2DRectangle>"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "standaloneChildren",
                "module": "src/mixins/children.ts"
              }
            },
            {
              "kind": "method",
              "name": "shape",
              "return": {
                "type": {
                  "text": "Canvas2DShape"
                }
              },
              "parameters": [
                {
                  "name": "options",
                  "optional": true,
                  "type": {
                    "text": "Options<Canvas2DShape>"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "standaloneChildren",
                "module": "src/mixins/children.ts"
              }
            },
            {
              "kind": "method",
              "name": "text",
              "return": {
                "type": {
                  "text": "Canvas2DText"
                }
              },
              "parameters": [
                {
                  "name": "options",
                  "optional": true,
                  "type": {
                    "text": "Options<Canvas2DText>"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "standaloneChildren",
                "module": "src/mixins/children.ts"
              }
            },
            {
              "kind": "method",
              "name": "video",
              "return": {
                "type": {
                  "text": "Canvas2DVideo"
                }
              },
              "parameters": [
                {
                  "name": "options",
                  "optional": true,
                  "type": {
                    "text": "Options<Canvas2DVideo>"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "standaloneChildren",
                "module": "src/mixins/children.ts"
              }
            },
            {
              "kind": "field",
              "name": "#changedSinceRender",
              "privacy": "private",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "inheritedFrom": {
                "name": "Canvas2DBaseRenderable",
                "module": "src/elements/canvas2d/renderable.ts"
              }
            },
            {
              "kind": "field",
              "name": "#clickListeners",
              "privacy": "private",
              "default": "new Set<EventListenerOrEventListenerObject>()",
              "inheritedFrom": {
                "name": "Canvas2DBaseRenderable",
                "module": "src/elements/canvas2d/renderable.ts"
              }
            },
            {
              "kind": "field",
              "name": "#localMouse",
              "privacy": "private",
              "default": "new MouseData()",
              "inheritedFrom": {
                "name": "Canvas2DBaseRenderable",
                "module": "src/elements/canvas2d/renderable.ts"
              }
            },
            {
              "kind": "field",
              "name": "#mouseListeners",
              "privacy": "private",
              "default": "new Set<EventListenerOrEventListenerObject>()",
              "inheritedFrom": {
                "name": "Canvas2DBaseRenderable",
                "module": "src/elements/canvas2d/renderable.ts"
              }
            },
            {
              "kind": "field",
              "name": "#shadow",
              "privacy": "private",
              "type": {
                "text": "Shadow | null"
              },
              "default": "null",
              "inheritedFrom": {
                "name": "Canvas2DBaseRenderable",
                "module": "src/elements/canvas2d/renderable.ts"
              }
            },
            {
              "kind": "method",
              "name": "addEventListener",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "type",
                  "type": {
                    "text": "keyof HTMLElementEventMap"
                  }
                },
                {
                  "name": "listener",
                  "type": {
                    "text": "EventListenerOrEventListenerObject"
                  }
                },
                {
                  "name": "options",
                  "optional": true,
                  "type": {
                    "text": "boolean | AddEventListenerOptions"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Canvas2DBaseRenderable",
                "module": "src/elements/canvas2d/renderable.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderRadialGradient",
              "parameters": [
                {
                  "name": "context",
                  "type": {
                    "text": "CanvasRenderingContext2D"
                  }
                },
                {
                  "name": "gradient",
                  "type": {
                    "text": "RadialGradient"
                  }
                }
              ],
              "privacy": "private",
              "inheritedFrom": {
                "name": "Canvas2DBaseRenderable",
                "module": "src/elements/canvas2d/renderable.ts"
              }
            },
            {
              "kind": "method",
              "name": "removeEventListener",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "type",
                  "type": {
                    "text": "keyof HTMLElementEventMap"
                  }
                },
                {
                  "name": "listener",
                  "type": {
                    "text": "EventListenerOrEventListenerObject"
                  }
                },
                {
                  "name": "options",
                  "optional": true,
                  "type": {
                    "text": "boolean | AddEventListenerOptions"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Canvas2DBaseRenderable",
                "module": "src/elements/canvas2d/renderable.ts"
              }
            },
            {
              "kind": "field",
              "name": "changedSinceRender",
              "privacy": "private",
              "readonly": true,
              "inheritedFrom": {
                "name": "Canvas2DBaseRenderable",
                "module": "src/elements/canvas2d/renderable.ts"
              }
            },
            {
              "kind": "method",
              "name": "#handleClick",
              "privacy": "private",
              "parameters": [
                {
                  "name": "canvas2D",
                  "type": {
                    "text": "Canvas2DCanvasElement"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Canvas2DBaseRenderable",
                "module": "src/elements/canvas2d/renderable.ts"
              }
            },
            {
              "kind": "method",
              "name": "#handleMouse",
              "privacy": "private",
              "parameters": [
                {
                  "name": "canvas2D",
                  "type": {
                    "text": "Canvas2DCanvasElement"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Canvas2DBaseRenderable",
                "module": "src/elements/canvas2d/renderable.ts"
              }
            },
            {
              "kind": "method",
              "name": "registerChange",
              "parameters": [
                {
                  "name": "propertyName",
                  "type": {
                    "text": "P"
                  }
                },
                {
                  "name": "newValue",
                  "type": {
                    "text": "V"
                  }
                }
              ],
              "privacy": "private",
              "inheritedFrom": {
                "name": "Canvas2DBaseRenderable",
                "module": "src/elements/canvas2d/renderable.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderChildren",
              "parameters": [
                {
                  "name": "canvas2D",
                  "type": {
                    "text": "Canvas2DCanvasElement"
                  }
                }
              ],
              "privacy": "private",
              "inheritedFrom": {
                "name": "Canvas2DBaseRenderable",
                "module": "src/elements/canvas2d/renderable.ts"
              }
            },
            {
              "kind": "field",
              "name": "#shadowChangeListener",
              "privacy": "private",
              "type": {
                "text": "ChangeListener<Shadow>"
              },
              "inheritedFrom": {
                "name": "Canvas2DBaseRenderable",
                "module": "src/elements/canvas2d/renderable.ts"
              }
            },
            {
              "kind": "field",
              "name": "shadow",
              "inheritedFrom": {
                "name": "Canvas2DBaseRenderable",
                "module": "src/elements/canvas2d/renderable.ts"
              }
            },
            {
              "kind": "field",
              "name": "#eventProxy",
              "privacy": "private",
              "inheritedFrom": {
                "name": "Canvas2DElement",
                "module": "src/elements/canvas2d/element.ts"
              }
            },
            {
              "kind": "field",
              "name": "#everyFrame",
              "privacy": "private",
              "type": {
                "text": "Updater | null"
              },
              "default": "null",
              "inheritedFrom": {
                "name": "Canvas2DElement",
                "module": "src/elements/canvas2d/element.ts"
              }
            },
            {
              "kind": "field",
              "name": "canvas",
              "type": {
                "text": "Canvas2DCanvasElement"
              },
              "description": "The <c2d-canvas> element that is rendering this element. The <c2d-canvas>\r\nwill be an ancestor of this element.",
              "readonly": true,
              "inheritedFrom": {
                "name": "Canvas2DElement",
                "module": "src/elements/canvas2d/element.ts"
              }
            },
            {
              "kind": "method",
              "name": "createChild",
              "parameters": [
                {
                  "name": "ElementClass",
                  "type": {
                    "text": "E"
                  }
                },
                {
                  "name": "options",
                  "optional": true,
                  "type": {
                    "text": "Options<InstanceType<E>>"
                  }
                }
              ],
              "privacy": "private",
              "inheritedFrom": {
                "name": "Canvas2DElement",
                "module": "src/elements/canvas2d/element.ts"
              }
            },
            {
              "kind": "field",
              "name": "everyFrame",
              "type": {
                "text": "Updater | null"
              },
              "inheritedFrom": {
                "name": "Canvas2DElement",
                "module": "src/elements/canvas2d/element.ts"
              }
            },
            {
              "kind": "field",
              "name": "listen",
              "readonly": true,
              "inheritedFrom": {
                "name": "Canvas2DElement",
                "module": "src/elements/canvas2d/element.ts"
              }
            },
            {
              "kind": "method",
              "name": "scaleByPixelRatio",
              "parameters": [
                {
                  "name": "vector",
                  "type": {
                    "text": "Vector2D"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Canvas2DElement",
                "module": "src/elements/canvas2d/element.ts"
              }
            }
          ],
          "mixins": [
            {
              "name": "rendersVisualMedia",
              "module": "/src/mixins/visualMedia"
            }
          ],
          "superclass": {
            "name": "Canvas2DStandaloneRenderable",
            "module": "/src/elements/canvas2d/renderable"
          },
          "tagName": "c2d-image",
          "customElement": true,
          "attributes": [
            {
              "name": "angle",
              "type": {
                "text": "Angle"
              },
              "description": "Clockwise rotation of the element around its anchor.",
              "fieldName": "angle",
              "inheritedFrom": {
                "name": "transformeable",
                "module": "src/mixins/transform.ts"
              }
            },
            {
              "name": "angular-velocity",
              "type": {
                "text": "Angle"
              },
              "description": "Clockwise rotation per second.",
              "fieldName": "angularVelocity",
              "inheritedFrom": {
                "name": "transformeable",
                "module": "src/mixins/transform.ts"
              }
            },
            {
              "name": "anchor",
              "type": {
                "text": "Vector2D"
              },
              "description": "Base position of the element relative to its parent's anchor.",
              "fieldName": "anchor",
              "inheritedFrom": {
                "name": "transformeable",
                "module": "src/mixins/transform.ts"
              }
            },
            {
              "name": "scale",
              "inheritedFrom": {
                "name": "transformeable",
                "module": "src/mixins/transform.ts"
              }
            },
            {
              "name": "velocity",
              "type": {
                "text": "Vector2D"
              },
              "description": "Anchor movement per second.",
              "fieldName": "velocity",
              "inheritedFrom": {
                "name": "transformeable",
                "module": "src/mixins/transform.ts"
              }
            },
            {
              "name": "offset",
              "type": {
                "text": "Vector2D"
              },
              "description": "Position of the element's origin relative to its anchor.",
              "fieldName": "offset",
              "inheritedFrom": {
                "name": "offset",
                "module": "src/mixins/offset.ts"
              }
            }
          ],
          "events": [
            {
              "name": "click",
              "type": {
                "text": "PointerEvent"
              },
              "inheritedFrom": {
                "name": "Canvas2DBaseRenderable",
                "module": "src/elements/canvas2d/renderable.ts"
              }
            },
            {
              "name": "mouseout",
              "type": {
                "text": "MouseEvent"
              },
              "inheritedFrom": {
                "name": "Canvas2DBaseRenderable",
                "module": "src/elements/canvas2d/renderable.ts"
              }
            },
            {
              "name": "mouseover",
              "type": {
                "text": "MouseEvent"
              },
              "inheritedFrom": {
                "name": "Canvas2DBaseRenderable",
                "module": "src/elements/canvas2d/renderable.ts"
              }
            },
            {
              "name": "mousemove",
              "type": {
                "text": "MouseEvent"
              },
              "inheritedFrom": {
                "name": "Canvas2DBaseRenderable",
                "module": "src/elements/canvas2d/renderable.ts"
              }
            },
            {
              "name": "mouseenter",
              "type": {
                "text": "MouseEvent"
              },
              "inheritedFrom": {
                "name": "Canvas2DBaseRenderable",
                "module": "src/elements/canvas2d/renderable.ts"
              }
            },
            {
              "name": "mousedown",
              "type": {
                "text": "MouseEvent"
              },
              "inheritedFrom": {
                "name": "Canvas2DBaseRenderable",
                "module": "src/elements/canvas2d/renderable.ts"
              }
            },
            {
              "name": "mouseup",
              "type": {
                "text": "MouseEvent"
              },
              "inheritedFrom": {
                "name": "Canvas2DBaseRenderable",
                "module": "src/elements/canvas2d/renderable.ts"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "Canvas2DImage",
          "declaration": {
            "name": "Canvas2DImage",
            "module": "src/elements/canvas2d/image.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "c2d-image",
          "declaration": {
            "name": "Canvas2DImage",
            "module": "src/elements/canvas2d/image.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/elements/canvas2d/line.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "Canvas2DShapeLine",
          "members": [
            {
              "kind": "field",
              "name": "tag",
              "type": {
                "text": "string"
              },
              "static": true,
              "readonly": true,
              "inheritedFrom": {
                "name": "Canvas2DElement",
                "module": "src/elements/canvas2d/element.ts"
              }
            },
            {
              "kind": "method",
              "name": "render",
              "parameters": [
                {
                  "name": "canvas2D",
                  "type": {
                    "text": "Canvas2DCanvasElement"
                  }
                }
              ],
              "privacy": "private",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "Canvas2DBaseRenderable",
                "module": "src/elements/canvas2d/renderable.ts"
              }
            },
            {
              "kind": "field",
              "name": "#to",
              "privacy": "private",
              "inheritedFrom": {
                "name": "hasTo",
                "module": "src/mixins/fromTo.ts"
              }
            },
            {
              "kind": "field",
              "name": "to",
              "description": "End point of the element relative to its anchor.",
              "reflects": true,
              "attribute": "to",
              "inheritedFrom": {
                "name": "hasTo",
                "module": "src/mixins/fromTo.ts"
              }
            },
            {
              "kind": "field",
              "name": "#anchor",
              "privacy": "private",
              "inheritedFrom": {
                "name": "transformeable",
                "module": "src/mixins/transform.ts"
              }
            },
            {
              "kind": "field",
              "name": "#angle",
              "privacy": "private",
              "inheritedFrom": {
                "name": "transformeable",
                "module": "src/mixins/transform.ts"
              }
            },
            {
              "kind": "field",
              "name": "#angularVelocity",
              "privacy": "private",
              "inheritedFrom": {
                "name": "transformeable",
                "module": "src/mixins/transform.ts"
              }
            },
            {
              "kind": "field",
              "name": "#scale",
              "privacy": "private",
              "inheritedFrom": {
                "name": "transformeable",
                "module": "src/mixins/transform.ts"
              }
            },
            {
              "kind": "field",
              "name": "#velocity",
              "privacy": "private",
              "inheritedFrom": {
                "name": "transformeable",
                "module": "src/mixins/transform.ts"
              }
            },
            {
              "kind": "field",
              "name": "#angleChangeListener",
              "privacy": "private",
              "type": {
                "text": "ChangeListener<number>"
              },
              "inheritedFrom": {
                "name": "transformeable",
                "module": "src/mixins/transform.ts"
              }
            },
            {
              "kind": "field",
              "name": "angle",
              "type": {
                "text": "Angle"
              },
              "description": "Clockwise rotation of the element around its anchor.",
              "reflects": true,
              "attribute": "angle",
              "inheritedFrom": {
                "name": "transformeable",
                "module": "src/mixins/transform.ts"
              }
            },
            {
              "kind": "field",
              "name": "#angularVelocityChangedTime",
              "privacy": "private",
              "type": {
                "text": "number"
              },
              "default": "-1",
              "inheritedFrom": {
                "name": "transformeable",
                "module": "src/mixins/transform.ts"
              }
            },
            {
              "kind": "field",
              "name": "angularVelocity",
              "type": {
                "text": "Angle"
              },
              "description": "Clockwise rotation per second.",
              "reflects": true,
              "attribute": "angular-velocity",
              "inheritedFrom": {
                "name": "transformeable",
                "module": "src/mixins/transform.ts"
              }
            },
            {
              "kind": "field",
              "name": "anchor",
              "type": {
                "text": "Vector2D"
              },
              "description": "Base position of the element relative to its parent's anchor.",
              "reflects": true,
              "attribute": "anchor",
              "inheritedFrom": {
                "name": "transformeable",
                "module": "src/mixins/transform.ts"
              }
            },
            {
              "kind": "field",
              "name": "#anchorChangeListener",
              "privacy": "private",
              "type": {
                "text": "ChangeListener<Vector2DBase>"
              },
              "inheritedFrom": {
                "name": "transformeable",
                "module": "src/mixins/transform.ts"
              }
            },
            {
              "kind": "method",
              "name": "moveAnchor",
              "parameters": [
                {
                  "name": "x",
                  "type": {
                    "text": "number"
                  }
                },
                {
                  "name": "y",
                  "type": {
                    "text": "number"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "transformeable",
                "module": "src/mixins/transform.ts"
              }
            },
            {
              "kind": "method",
              "name": "afterRender",
              "parameters": [
                {
                  "name": "canvas2D",
                  "type": {
                    "text": "Canvas2DCanvasElement"
                  }
                }
              ],
              "privacy": "private",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "Canvas2DBaseRenderable",
                "module": "src/elements/canvas2d/renderable.ts"
              }
            },
            {
              "kind": "method",
              "name": "rotateClockwise",
              "parameters": [
                {
                  "name": "angle",
                  "type": {
                    "text": "Angle"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "transformeable",
                "module": "src/mixins/transform.ts"
              }
            },
            {
              "kind": "method",
              "name": "rotateCounterclockwise",
              "parameters": [
                {
                  "name": "angle",
                  "type": {
                    "text": "Angle"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "transformeable",
                "module": "src/mixins/transform.ts"
              }
            },
            {
              "kind": "field",
              "name": "scale",
              "inheritedFrom": {
                "name": "transformeable",
                "module": "src/mixins/transform.ts"
              }
            },
            {
              "kind": "field",
              "name": "#velocityChangedTime",
              "privacy": "private",
              "type": {
                "text": "number"
              },
              "default": "-1",
              "inheritedFrom": {
                "name": "transformeable",
                "module": "src/mixins/transform.ts"
              }
            },
            {
              "kind": "field",
              "name": "velocity",
              "type": {
                "text": "Vector2D"
              },
              "description": "Anchor movement per second.",
              "reflects": true,
              "attribute": "velocity",
              "inheritedFrom": {
                "name": "transformeable",
                "module": "src/mixins/transform.ts"
              }
            },
            {
              "kind": "method",
              "name": "bezier",
              "parameters": [
                {
                  "name": "options",
                  "optional": true,
                  "type": {
                    "text": "Options<Canvas2DShapeBezier>"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "partChildren",
                "module": "src/mixins/children.ts"
              }
            },
            {
              "kind": "method",
              "name": "ellipse",
              "parameters": [
                {
                  "name": "options",
                  "optional": true,
                  "type": {
                    "text": "Options<Canvas2DShapeEllipse>"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "partChildren",
                "module": "src/mixins/children.ts"
              }
            },
            {
              "kind": "method",
              "name": "line",
              "parameters": [
                {
                  "name": "options",
                  "optional": true,
                  "type": {
                    "text": "Options<Canvas2DShapeLine>"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "partChildren",
                "module": "src/mixins/children.ts"
              }
            },
            {
              "kind": "method",
              "name": "rectangle",
              "parameters": [
                {
                  "name": "options",
                  "optional": true,
                  "type": {
                    "text": "Options<Canvas2DShapeRectangle>"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "partChildren",
                "module": "src/mixins/children.ts"
              }
            },
            {
              "kind": "field",
              "name": "#changedSinceRender",
              "privacy": "private",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "inheritedFrom": {
                "name": "Canvas2DBaseRenderable",
                "module": "src/elements/canvas2d/renderable.ts"
              }
            },
            {
              "kind": "field",
              "name": "#clickListeners",
              "privacy": "private",
              "default": "new Set<EventListenerOrEventListenerObject>()",
              "inheritedFrom": {
                "name": "Canvas2DBaseRenderable",
                "module": "src/elements/canvas2d/renderable.ts"
              }
            },
            {
              "kind": "field",
              "name": "#localMouse",
              "privacy": "private",
              "default": "new MouseData()",
              "inheritedFrom": {
                "name": "Canvas2DBaseRenderable",
                "module": "src/elements/canvas2d/renderable.ts"
              }
            },
            {
              "kind": "field",
              "name": "#mouseListeners",
              "privacy": "private",
              "default": "new Set<EventListenerOrEventListenerObject>()",
              "inheritedFrom": {
                "name": "Canvas2DBaseRenderable",
                "module": "src/elements/canvas2d/renderable.ts"
              }
            },
            {
              "kind": "field",
              "name": "#shadow",
              "privacy": "private",
              "type": {
                "text": "Shadow | null"
              },
              "default": "null",
              "inheritedFrom": {
                "name": "Canvas2DBaseRenderable",
                "module": "src/elements/canvas2d/renderable.ts"
              }
            },
            {
              "kind": "method",
              "name": "addEventListener",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "type",
                  "type": {
                    "text": "keyof HTMLElementEventMap"
                  }
                },
                {
                  "name": "listener",
                  "type": {
                    "text": "EventListenerOrEventListenerObject"
                  }
                },
                {
                  "name": "options",
                  "optional": true,
                  "type": {
                    "text": "boolean | AddEventListenerOptions"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Canvas2DBaseRenderable",
                "module": "src/elements/canvas2d/renderable.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderConicalGradient",
              "parameters": [
                {
                  "name": "context",
                  "type": {
                    "text": "CanvasRenderingContext2D"
                  }
                },
                {
                  "name": "gradient",
                  "type": {
                    "text": "ConicalGradient"
                  }
                }
              ],
              "privacy": "private",
              "inheritedFrom": {
                "name": "Canvas2DBaseRenderable",
                "module": "src/elements/canvas2d/renderable.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderLinearGradient",
              "parameters": [
                {
                  "name": "context",
                  "type": {
                    "text": "CanvasRenderingContext2D"
                  }
                },
                {
                  "name": "gradient",
                  "type": {
                    "text": "LinearGradient"
                  }
                }
              ],
              "privacy": "private",
              "inheritedFrom": {
                "name": "Canvas2DBaseRenderable",
                "module": "src/elements/canvas2d/renderable.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderRadialGradient",
              "parameters": [
                {
                  "name": "context",
                  "type": {
                    "text": "CanvasRenderingContext2D"
                  }
                },
                {
                  "name": "gradient",
                  "type": {
                    "text": "RadialGradient"
                  }
                }
              ],
              "privacy": "private",
              "inheritedFrom": {
                "name": "Canvas2DBaseRenderable",
                "module": "src/elements/canvas2d/renderable.ts"
              }
            },
            {
              "kind": "method",
              "name": "removeEventListener",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "type",
                  "type": {
                    "text": "keyof HTMLElementEventMap"
                  }
                },
                {
                  "name": "listener",
                  "type": {
                    "text": "EventListenerOrEventListenerObject"
                  }
                },
                {
                  "name": "options",
                  "optional": true,
                  "type": {
                    "text": "boolean | AddEventListenerOptions"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Canvas2DBaseRenderable",
                "module": "src/elements/canvas2d/renderable.ts"
              }
            },
            {
              "kind": "field",
              "name": "changedSinceRender",
              "privacy": "private",
              "readonly": true,
              "inheritedFrom": {
                "name": "Canvas2DBaseRenderable",
                "module": "src/elements/canvas2d/renderable.ts"
              }
            },
            {
              "kind": "method",
              "name": "#handleClick",
              "privacy": "private",
              "parameters": [
                {
                  "name": "canvas2D",
                  "type": {
                    "text": "Canvas2DCanvasElement"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Canvas2DBaseRenderable",
                "module": "src/elements/canvas2d/renderable.ts"
              }
            },
            {
              "kind": "method",
              "name": "#handleMouse",
              "privacy": "private",
              "parameters": [
                {
                  "name": "canvas2D",
                  "type": {
                    "text": "Canvas2DCanvasElement"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Canvas2DBaseRenderable",
                "module": "src/elements/canvas2d/renderable.ts"
              }
            },
            {
              "kind": "method",
              "name": "registerChange",
              "parameters": [
                {
                  "name": "propertyName",
                  "type": {
                    "text": "P"
                  }
                },
                {
                  "name": "newValue",
                  "type": {
                    "text": "V"
                  }
                }
              ],
              "privacy": "private",
              "inheritedFrom": {
                "name": "Canvas2DBaseRenderable",
                "module": "src/elements/canvas2d/renderable.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderChildren",
              "parameters": [
                {
                  "name": "canvas2D",
                  "type": {
                    "text": "Canvas2DCanvasElement"
                  }
                }
              ],
              "privacy": "private",
              "inheritedFrom": {
                "name": "Canvas2DBaseRenderable",
                "module": "src/elements/canvas2d/renderable.ts"
              }
            },
            {
              "kind": "field",
              "name": "#shadowChangeListener",
              "privacy": "private",
              "type": {
                "text": "ChangeListener<Shadow>"
              },
              "inheritedFrom": {
                "name": "Canvas2DBaseRenderable",
                "module": "src/elements/canvas2d/renderable.ts"
              }
            },
            {
              "kind": "field",
              "name": "shadow",
              "inheritedFrom": {
                "name": "Canvas2DBaseRenderable",
                "module": "src/elements/canvas2d/renderable.ts"
              }
            },
            {
              "kind": "field",
              "name": "#eventProxy",
              "privacy": "private",
              "inheritedFrom": {
                "name": "Canvas2DElement",
                "module": "src/elements/canvas2d/element.ts"
              }
            },
            {
              "kind": "field",
              "name": "#everyFrame",
              "privacy": "private",
              "type": {
                "text": "Updater | null"
              },
              "default": "null",
              "inheritedFrom": {
                "name": "Canvas2DElement",
                "module": "src/elements/canvas2d/element.ts"
              }
            },
            {
              "kind": "field",
              "name": "canvas",
              "type": {
                "text": "Canvas2DCanvasElement"
              },
              "description": "The <c2d-canvas> element that is rendering this element. The <c2d-canvas>\r\nwill be an ancestor of this element.",
              "readonly": true,
              "inheritedFrom": {
                "name": "Canvas2DElement",
                "module": "src/elements/canvas2d/element.ts"
              }
            },
            {
              "kind": "method",
              "name": "createChild",
              "parameters": [
                {
                  "name": "ElementClass",
                  "type": {
                    "text": "E"
                  }
                },
                {
                  "name": "options",
                  "optional": true,
                  "type": {
                    "text": "Options<InstanceType<E>>"
                  }
                }
              ],
              "privacy": "private",
              "inheritedFrom": {
                "name": "Canvas2DElement",
                "module": "src/elements/canvas2d/element.ts"
              }
            },
            {
              "kind": "field",
              "name": "everyFrame",
              "type": {
                "text": "Updater | null"
              },
              "inheritedFrom": {
                "name": "Canvas2DElement",
                "module": "src/elements/canvas2d/element.ts"
              }
            },
            {
              "kind": "field",
              "name": "listen",
              "readonly": true,
              "inheritedFrom": {
                "name": "Canvas2DElement",
                "module": "src/elements/canvas2d/element.ts"
              }
            },
            {
              "kind": "method",
              "name": "scaleByPixelRatio",
              "parameters": [
                {
                  "name": "vector",
                  "type": {
                    "text": "Vector2D"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Canvas2DElement",
                "module": "src/elements/canvas2d/element.ts"
              }
            }
          ],
          "mixins": [
            {
              "name": "hasTo",
              "module": "/src/mixins/fromTo"
            }
          ],
          "superclass": {
            "name": "Canvas2DShapePartRenderable",
            "module": "/src/elements/canvas2d/renderable"
          },
          "tagName": "c2d-shape-line",
          "customElement": true,
          "attributes": [
            {
              "name": "to",
              "description": "End point of the element relative to its anchor.",
              "fieldName": "to",
              "inheritedFrom": {
                "name": "hasTo",
                "module": "src/mixins/fromTo.ts"
              }
            },
            {
              "name": "angle",
              "type": {
                "text": "Angle"
              },
              "description": "Clockwise rotation of the element around its anchor.",
              "fieldName": "angle",
              "inheritedFrom": {
                "name": "transformeable",
                "module": "src/mixins/transform.ts"
              }
            },
            {
              "name": "angular-velocity",
              "type": {
                "text": "Angle"
              },
              "description": "Clockwise rotation per second.",
              "fieldName": "angularVelocity",
              "inheritedFrom": {
                "name": "transformeable",
                "module": "src/mixins/transform.ts"
              }
            },
            {
              "name": "anchor",
              "type": {
                "text": "Vector2D"
              },
              "description": "Base position of the element relative to its parent's anchor.",
              "fieldName": "anchor",
              "inheritedFrom": {
                "name": "transformeable",
                "module": "src/mixins/transform.ts"
              }
            },
            {
              "name": "scale",
              "inheritedFrom": {
                "name": "transformeable",
                "module": "src/mixins/transform.ts"
              }
            },
            {
              "name": "velocity",
              "type": {
                "text": "Vector2D"
              },
              "description": "Anchor movement per second.",
              "fieldName": "velocity",
              "inheritedFrom": {
                "name": "transformeable",
                "module": "src/mixins/transform.ts"
              }
            }
          ],
          "events": [
            {
              "name": "click",
              "type": {
                "text": "PointerEvent"
              },
              "inheritedFrom": {
                "name": "Canvas2DBaseRenderable",
                "module": "src/elements/canvas2d/renderable.ts"
              }
            },
            {
              "name": "mouseout",
              "type": {
                "text": "MouseEvent"
              },
              "inheritedFrom": {
                "name": "Canvas2DBaseRenderable",
                "module": "src/elements/canvas2d/renderable.ts"
              }
            },
            {
              "name": "mouseover",
              "type": {
                "text": "MouseEvent"
              },
              "inheritedFrom": {
                "name": "Canvas2DBaseRenderable",
                "module": "src/elements/canvas2d/renderable.ts"
              }
            },
            {
              "name": "mousemove",
              "type": {
                "text": "MouseEvent"
              },
              "inheritedFrom": {
                "name": "Canvas2DBaseRenderable",
                "module": "src/elements/canvas2d/renderable.ts"
              }
            },
            {
              "name": "mouseenter",
              "type": {
                "text": "MouseEvent"
              },
              "inheritedFrom": {
                "name": "Canvas2DBaseRenderable",
                "module": "src/elements/canvas2d/renderable.ts"
              }
            },
            {
              "name": "mousedown",
              "type": {
                "text": "MouseEvent"
              },
              "inheritedFrom": {
                "name": "Canvas2DBaseRenderable",
                "module": "src/elements/canvas2d/renderable.ts"
              }
            },
            {
              "name": "mouseup",
              "type": {
                "text": "MouseEvent"
              },
              "inheritedFrom": {
                "name": "Canvas2DBaseRenderable",
                "module": "src/elements/canvas2d/renderable.ts"
              }
            }
          ]
        },
        {
          "kind": "class",
          "description": "",
          "name": "Canvas2DLine",
          "members": [
            {
              "kind": "field",
              "name": "tag",
              "type": {
                "text": "string"
              },
              "static": true,
              "readonly": true,
              "inheritedFrom": {
                "name": "Canvas2DElement",
                "module": "src/elements/canvas2d/element.ts"
              }
            },
            {
              "kind": "field",
              "name": "center",
              "readonly": true
            },
            {
              "kind": "method",
              "name": "render",
              "parameters": [
                {
                  "name": "canvas2D",
                  "type": {
                    "text": "Canvas2DCanvasElement"
                  }
                }
              ],
              "privacy": "private",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "Canvas2DBaseRenderable",
                "module": "src/elements/canvas2d/renderable.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderConicalGradient",
              "parameters": [
                {
                  "name": "context",
                  "type": {
                    "text": "CanvasRenderingContext2D"
                  }
                },
                {
                  "name": "gradient",
                  "type": {
                    "text": "ConicalGradient"
                  }
                }
              ],
              "privacy": "private",
              "return": {
                "type": {
                  "text": "CanvasGradient"
                }
              },
              "inheritedFrom": {
                "name": "Canvas2DBaseRenderable",
                "module": "src/elements/canvas2d/renderable.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderLinearGradient",
              "parameters": [
                {
                  "name": "context",
                  "type": {
                    "text": "CanvasRenderingContext2D"
                  }
                },
                {
                  "name": "gradient",
                  "type": {
                    "text": "LinearGradient"
                  }
                }
              ],
              "privacy": "private",
              "return": {
                "type": {
                  "text": "CanvasGradient"
                }
              },
              "inheritedFrom": {
                "name": "Canvas2DBaseRenderable",
                "module": "src/elements/canvas2d/renderable.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderRadialGradient",
              "parameters": [
                {
                  "name": "context",
                  "type": {
                    "text": "CanvasRenderingContext2D"
                  }
                },
                {
                  "name": "gradient",
                  "type": {
                    "text": "RadialGradient"
                  }
                }
              ],
              "privacy": "private",
              "return": {
                "type": {
                  "text": "CanvasGradient"
                }
              },
              "inheritedFrom": {
                "name": "Canvas2DBaseRenderable",
                "module": "src/elements/canvas2d/renderable.ts"
              }
            },
            {
              "kind": "field",
              "name": "#stroke",
              "privacy": "private",
              "type": {
                "text": "DrawStyle | null"
              },
              "default": "null",
              "inheritedFrom": {
                "name": "strokeable",
                "module": "src/mixins/stroke.ts"
              }
            },
            {
              "kind": "field",
              "name": "#lineWidth",
              "privacy": "private",
              "type": {
                "text": "number | null"
              },
              "default": "null",
              "inheritedFrom": {
                "name": "strokeable",
                "module": "src/mixins/stroke.ts"
              }
            },
            {
              "kind": "field",
              "name": "lineWidth",
              "type": {
                "text": "number | null"
              },
              "description": "Width in pixels for drawing lines.",
              "reflects": true,
              "attribute": "line-width",
              "inheritedFrom": {
                "name": "strokeable",
                "module": "src/mixins/stroke.ts"
              }
            },
            {
              "kind": "field",
              "name": "stroke",
              "type": {
                "text": "DrawStyle | null"
              },
              "description": "The rendering style for lines. This may be a color or gradient.\r\nWhen set to null, the parent element's style is used. When\r\nset to \"none\", no lines will be drawn.",
              "reflects": true,
              "attribute": "stroke",
              "inheritedFrom": {
                "name": "strokeable",
                "module": "src/mixins/stroke.ts"
              }
            },
            {
              "kind": "method",
              "name": "afterRender",
              "parameters": [
                {
                  "name": "canvas2D",
                  "type": {
                    "text": "Canvas2DCanvasElement"
                  }
                }
              ],
              "privacy": "private",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "Canvas2DBaseRenderable",
                "module": "src/elements/canvas2d/renderable.ts"
              }
            },
            {
              "kind": "field",
              "name": "#to",
              "privacy": "private",
              "inheritedFrom": {
                "name": "hasTo",
                "module": "src/mixins/fromTo.ts"
              }
            },
            {
              "kind": "field",
              "name": "to",
              "description": "End point of the element relative to its anchor.",
              "reflects": true,
              "attribute": "to",
              "inheritedFrom": {
                "name": "hasTo",
                "module": "src/mixins/fromTo.ts"
              }
            },
            {
              "kind": "field",
              "name": "#anchor",
              "privacy": "private",
              "inheritedFrom": {
                "name": "transformeable",
                "module": "src/mixins/transform.ts"
              }
            },
            {
              "kind": "field",
              "name": "#angle",
              "privacy": "private",
              "inheritedFrom": {
                "name": "transformeable",
                "module": "src/mixins/transform.ts"
              }
            },
            {
              "kind": "field",
              "name": "#angularVelocity",
              "privacy": "private",
              "inheritedFrom": {
                "name": "transformeable",
                "module": "src/mixins/transform.ts"
              }
            },
            {
              "kind": "field",
              "name": "#scale",
              "privacy": "private",
              "inheritedFrom": {
                "name": "transformeable",
                "module": "src/mixins/transform.ts"
              }
            },
            {
              "kind": "field",
              "name": "#velocity",
              "privacy": "private",
              "inheritedFrom": {
                "name": "transformeable",
                "module": "src/mixins/transform.ts"
              }
            },
            {
              "kind": "field",
              "name": "#angleChangeListener",
              "privacy": "private",
              "type": {
                "text": "ChangeListener<number>"
              },
              "inheritedFrom": {
                "name": "transformeable",
                "module": "src/mixins/transform.ts"
              }
            },
            {
              "kind": "field",
              "name": "angle",
              "type": {
                "text": "Angle"
              },
              "description": "Clockwise rotation of the element around its anchor.",
              "reflects": true,
              "attribute": "angle",
              "inheritedFrom": {
                "name": "transformeable",
                "module": "src/mixins/transform.ts"
              }
            },
            {
              "kind": "field",
              "name": "#angularVelocityChangedTime",
              "privacy": "private",
              "type": {
                "text": "number"
              },
              "default": "-1",
              "inheritedFrom": {
                "name": "transformeable",
                "module": "src/mixins/transform.ts"
              }
            },
            {
              "kind": "field",
              "name": "angularVelocity",
              "type": {
                "text": "Angle"
              },
              "description": "Clockwise rotation per second.",
              "reflects": true,
              "attribute": "angular-velocity",
              "inheritedFrom": {
                "name": "transformeable",
                "module": "src/mixins/transform.ts"
              }
            },
            {
              "kind": "field",
              "name": "anchor",
              "type": {
                "text": "Vector2D"
              },
              "description": "Base position of the element relative to its parent's anchor.",
              "reflects": true,
              "attribute": "anchor",
              "inheritedFrom": {
                "name": "transformeable",
                "module": "src/mixins/transform.ts"
              }
            },
            {
              "kind": "field",
              "name": "#anchorChangeListener",
              "privacy": "private",
              "type": {
                "text": "ChangeListener<Vector2DBase>"
              },
              "inheritedFrom": {
                "name": "transformeable",
                "module": "src/mixins/transform.ts"
              }
            },
            {
              "kind": "method",
              "name": "moveAnchor",
              "parameters": [
                {
                  "name": "x",
                  "type": {
                    "text": "number"
                  }
                },
                {
                  "name": "y",
                  "type": {
                    "text": "number"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "transformeable",
                "module": "src/mixins/transform.ts"
              }
            },
            {
              "kind": "method",
              "name": "rotateClockwise",
              "parameters": [
                {
                  "name": "angle",
                  "type": {
                    "text": "Angle"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "transformeable",
                "module": "src/mixins/transform.ts"
              }
            },
            {
              "kind": "method",
              "name": "rotateCounterclockwise",
              "parameters": [
                {
                  "name": "angle",
                  "type": {
                    "text": "Angle"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "transformeable",
                "module": "src/mixins/transform.ts"
              }
            },
            {
              "kind": "field",
              "name": "scale",
              "inheritedFrom": {
                "name": "transformeable",
                "module": "src/mixins/transform.ts"
              }
            },
            {
              "kind": "field",
              "name": "#velocityChangedTime",
              "privacy": "private",
              "type": {
                "text": "number"
              },
              "default": "-1",
              "inheritedFrom": {
                "name": "transformeable",
                "module": "src/mixins/transform.ts"
              }
            },
            {
              "kind": "field",
              "name": "velocity",
              "type": {
                "text": "Vector2D"
              },
              "description": "Anchor movement per second.",
              "reflects": true,
              "attribute": "velocity",
              "inheritedFrom": {
                "name": "transformeable",
                "module": "src/mixins/transform.ts"
              }
            },
            {
              "kind": "field",
              "name": "#from",
              "privacy": "private",
              "inheritedFrom": {
                "name": "hasFrom",
                "module": "src/mixins/fromTo.ts"
              }
            },
            {
              "kind": "field",
              "name": "from",
              "type": {
                "text": "Vector2D"
              },
              "description": "Starting point of the element relative to its anchor.",
              "reflects": true,
              "attribute": "from",
              "inheritedFrom": {
                "name": "hasFrom",
                "module": "src/mixins/fromTo.ts"
              }
            },
            {
              "kind": "method",
              "name": "bezier",
              "return": {
                "type": {
                  "text": "Canvas2DBezier"
                }
              },
              "parameters": [
                {
                  "name": "options",
                  "optional": true,
                  "type": {
                    "text": "Options<Canvas2DBezier>"
                  }
                }
              ],
              "description": "Creates a `<c2d-bezier>` child element and returns it.",
              "inheritedFrom": {
                "name": "standaloneChildren",
                "module": "src/mixins/children.ts"
              }
            },
            {
              "kind": "method",
              "name": "ellipse",
              "return": {
                "type": {
                  "text": "Canvas2DEllipse"
                }
              },
              "parameters": [
                {
                  "name": "options",
                  "optional": true,
                  "type": {
                    "text": "Options<Canvas2DEllipse>"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "standaloneChildren",
                "module": "src/mixins/children.ts"
              }
            },
            {
              "kind": "method",
              "name": "image",
              "return": {
                "type": {
                  "text": "Canvas2DImage"
                }
              },
              "parameters": [
                {
                  "name": "options",
                  "optional": true,
                  "type": {
                    "text": "Options<Canvas2DImage>"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "standaloneChildren",
                "module": "src/mixins/children.ts"
              }
            },
            {
              "kind": "method",
              "name": "multiple",
              "return": {
                "type": {
                  "text": "Node[]"
                }
              },
              "parameters": [
                {
                  "name": "callback",
                  "type": {
                    "text": "MultipleCallback"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "standaloneChildren",
                "module": "src/mixins/children.ts"
              }
            },
            {
              "kind": "method",
              "name": "line",
              "return": {
                "type": {
                  "text": "Canvas2DLine"
                }
              },
              "parameters": [
                {
                  "name": "options",
                  "optional": true,
                  "type": {
                    "text": "Options<Canvas2DLine>"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "standaloneChildren",
                "module": "src/mixins/children.ts"
              }
            },
            {
              "kind": "method",
              "name": "rectangle",
              "return": {
                "type": {
                  "text": "Canvas2DRectangle"
                }
              },
              "parameters": [
                {
                  "name": "options",
                  "optional": true,
                  "type": {
                    "text": "Options<Canvas2DRectangle>"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "standaloneChildren",
                "module": "src/mixins/children.ts"
              }
            },
            {
              "kind": "method",
              "name": "shape",
              "return": {
                "type": {
                  "text": "Canvas2DShape"
                }
              },
              "parameters": [
                {
                  "name": "options",
                  "optional": true,
                  "type": {
                    "text": "Options<Canvas2DShape>"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "standaloneChildren",
                "module": "src/mixins/children.ts"
              }
            },
            {
              "kind": "method",
              "name": "text",
              "return": {
                "type": {
                  "text": "Canvas2DText"
                }
              },
              "parameters": [
                {
                  "name": "options",
                  "optional": true,
                  "type": {
                    "text": "Options<Canvas2DText>"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "standaloneChildren",
                "module": "src/mixins/children.ts"
              }
            },
            {
              "kind": "method",
              "name": "video",
              "return": {
                "type": {
                  "text": "Canvas2DVideo"
                }
              },
              "parameters": [
                {
                  "name": "options",
                  "optional": true,
                  "type": {
                    "text": "Options<Canvas2DVideo>"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "standaloneChildren",
                "module": "src/mixins/children.ts"
              }
            },
            {
              "kind": "field",
              "name": "#changedSinceRender",
              "privacy": "private",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "inheritedFrom": {
                "name": "Canvas2DBaseRenderable",
                "module": "src/elements/canvas2d/renderable.ts"
              }
            },
            {
              "kind": "field",
              "name": "#clickListeners",
              "privacy": "private",
              "default": "new Set<EventListenerOrEventListenerObject>()",
              "inheritedFrom": {
                "name": "Canvas2DBaseRenderable",
                "module": "src/elements/canvas2d/renderable.ts"
              }
            },
            {
              "kind": "field",
              "name": "#localMouse",
              "privacy": "private",
              "default": "new MouseData()",
              "inheritedFrom": {
                "name": "Canvas2DBaseRenderable",
                "module": "src/elements/canvas2d/renderable.ts"
              }
            },
            {
              "kind": "field",
              "name": "#mouseListeners",
              "privacy": "private",
              "default": "new Set<EventListenerOrEventListenerObject>()",
              "inheritedFrom": {
                "name": "Canvas2DBaseRenderable",
                "module": "src/elements/canvas2d/renderable.ts"
              }
            },
            {
              "kind": "field",
              "name": "#shadow",
              "privacy": "private",
              "type": {
                "text": "Shadow | null"
              },
              "default": "null",
              "inheritedFrom": {
                "name": "Canvas2DBaseRenderable",
                "module": "src/elements/canvas2d/renderable.ts"
              }
            },
            {
              "kind": "method",
              "name": "addEventListener",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "type",
                  "type": {
                    "text": "keyof HTMLElementEventMap"
                  }
                },
                {
                  "name": "listener",
                  "type": {
                    "text": "EventListenerOrEventListenerObject"
                  }
                },
                {
                  "name": "options",
                  "optional": true,
                  "type": {
                    "text": "boolean | AddEventListenerOptions"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Canvas2DBaseRenderable",
                "module": "src/elements/canvas2d/renderable.ts"
              }
            },
            {
              "kind": "method",
              "name": "removeEventListener",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "type",
                  "type": {
                    "text": "keyof HTMLElementEventMap"
                  }
                },
                {
                  "name": "listener",
                  "type": {
                    "text": "EventListenerOrEventListenerObject"
                  }
                },
                {
                  "name": "options",
                  "optional": true,
                  "type": {
                    "text": "boolean | AddEventListenerOptions"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Canvas2DBaseRenderable",
                "module": "src/elements/canvas2d/renderable.ts"
              }
            },
            {
              "kind": "field",
              "name": "changedSinceRender",
              "privacy": "private",
              "readonly": true,
              "inheritedFrom": {
                "name": "Canvas2DBaseRenderable",
                "module": "src/elements/canvas2d/renderable.ts"
              }
            },
            {
              "kind": "method",
              "name": "#handleClick",
              "privacy": "private",
              "parameters": [
                {
                  "name": "canvas2D",
                  "type": {
                    "text": "Canvas2DCanvasElement"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Canvas2DBaseRenderable",
                "module": "src/elements/canvas2d/renderable.ts"
              }
            },
            {
              "kind": "method",
              "name": "#handleMouse",
              "privacy": "private",
              "parameters": [
                {
                  "name": "canvas2D",
                  "type": {
                    "text": "Canvas2DCanvasElement"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Canvas2DBaseRenderable",
                "module": "src/elements/canvas2d/renderable.ts"
              }
            },
            {
              "kind": "method",
              "name": "registerChange",
              "parameters": [
                {
                  "name": "propertyName",
                  "type": {
                    "text": "P"
                  }
                },
                {
                  "name": "newValue",
                  "type": {
                    "text": "V"
                  }
                }
              ],
              "privacy": "private",
              "inheritedFrom": {
                "name": "Canvas2DBaseRenderable",
                "module": "src/elements/canvas2d/renderable.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderChildren",
              "parameters": [
                {
                  "name": "canvas2D",
                  "type": {
                    "text": "Canvas2DCanvasElement"
                  }
                }
              ],
              "privacy": "private",
              "inheritedFrom": {
                "name": "Canvas2DBaseRenderable",
                "module": "src/elements/canvas2d/renderable.ts"
              }
            },
            {
              "kind": "field",
              "name": "#shadowChangeListener",
              "privacy": "private",
              "type": {
                "text": "ChangeListener<Shadow>"
              },
              "inheritedFrom": {
                "name": "Canvas2DBaseRenderable",
                "module": "src/elements/canvas2d/renderable.ts"
              }
            },
            {
              "kind": "field",
              "name": "shadow",
              "inheritedFrom": {
                "name": "Canvas2DBaseRenderable",
                "module": "src/elements/canvas2d/renderable.ts"
              }
            },
            {
              "kind": "field",
              "name": "#eventProxy",
              "privacy": "private",
              "inheritedFrom": {
                "name": "Canvas2DElement",
                "module": "src/elements/canvas2d/element.ts"
              }
            },
            {
              "kind": "field",
              "name": "#everyFrame",
              "privacy": "private",
              "type": {
                "text": "Updater | null"
              },
              "default": "null",
              "inheritedFrom": {
                "name": "Canvas2DElement",
                "module": "src/elements/canvas2d/element.ts"
              }
            },
            {
              "kind": "field",
              "name": "canvas",
              "type": {
                "text": "Canvas2DCanvasElement"
              },
              "description": "The <c2d-canvas> element that is rendering this element. The <c2d-canvas>\r\nwill be an ancestor of this element.",
              "readonly": true,
              "inheritedFrom": {
                "name": "Canvas2DElement",
                "module": "src/elements/canvas2d/element.ts"
              }
            },
            {
              "kind": "method",
              "name": "createChild",
              "parameters": [
                {
                  "name": "ElementClass",
                  "type": {
                    "text": "E"
                  }
                },
                {
                  "name": "options",
                  "optional": true,
                  "type": {
                    "text": "Options<InstanceType<E>>"
                  }
                }
              ],
              "privacy": "private",
              "inheritedFrom": {
                "name": "Canvas2DElement",
                "module": "src/elements/canvas2d/element.ts"
              }
            },
            {
              "kind": "field",
              "name": "everyFrame",
              "type": {
                "text": "Updater | null"
              },
              "inheritedFrom": {
                "name": "Canvas2DElement",
                "module": "src/elements/canvas2d/element.ts"
              }
            },
            {
              "kind": "field",
              "name": "listen",
              "readonly": true,
              "inheritedFrom": {
                "name": "Canvas2DElement",
                "module": "src/elements/canvas2d/element.ts"
              }
            },
            {
              "kind": "method",
              "name": "scaleByPixelRatio",
              "parameters": [
                {
                  "name": "vector",
                  "type": {
                    "text": "Vector2D"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Canvas2DElement",
                "module": "src/elements/canvas2d/element.ts"
              }
            }
          ],
          "mixins": [
            {
              "name": "strokeable",
              "module": "/src/mixins/stroke"
            },
            {
              "name": "hasTo",
              "module": "/src/mixins/fromTo"
            },
            {
              "name": "hasFrom",
              "module": "/src/mixins/fromTo"
            }
          ],
          "superclass": {
            "name": "Canvas2DStandaloneRenderable",
            "module": "/src/elements/canvas2d/renderable"
          },
          "tagName": "c2d-line",
          "customElement": true,
          "attributes": [
            {
              "name": "stroke",
              "type": {
                "text": "DrawStyle | null"
              },
              "description": "The rendering style for lines. This may be a color or gradient.\r\nWhen set to null, the parent element's style is used. When\r\nset to \"none\", no lines will be drawn.",
              "fieldName": "stroke",
              "inheritedFrom": {
                "name": "strokeable",
                "module": "src/mixins/stroke.ts"
              }
            },
            {
              "name": "line-width",
              "type": {
                "text": "number | null"
              },
              "description": "Width in pixels for drawing lines.",
              "fieldName": "lineWidth",
              "inheritedFrom": {
                "name": "strokeable",
                "module": "src/mixins/stroke.ts"
              }
            },
            {
              "name": "to",
              "description": "End point of the element relative to its anchor.",
              "fieldName": "to",
              "inheritedFrom": {
                "name": "hasTo",
                "module": "src/mixins/fromTo.ts"
              }
            },
            {
              "name": "angle",
              "type": {
                "text": "Angle"
              },
              "description": "Clockwise rotation of the element around its anchor.",
              "fieldName": "angle",
              "inheritedFrom": {
                "name": "transformeable",
                "module": "src/mixins/transform.ts"
              }
            },
            {
              "name": "angular-velocity",
              "type": {
                "text": "Angle"
              },
              "description": "Clockwise rotation per second.",
              "fieldName": "angularVelocity",
              "inheritedFrom": {
                "name": "transformeable",
                "module": "src/mixins/transform.ts"
              }
            },
            {
              "name": "anchor",
              "type": {
                "text": "Vector2D"
              },
              "description": "Base position of the element relative to its parent's anchor.",
              "fieldName": "anchor",
              "inheritedFrom": {
                "name": "transformeable",
                "module": "src/mixins/transform.ts"
              }
            },
            {
              "name": "scale",
              "inheritedFrom": {
                "name": "transformeable",
                "module": "src/mixins/transform.ts"
              }
            },
            {
              "name": "velocity",
              "type": {
                "text": "Vector2D"
              },
              "description": "Anchor movement per second.",
              "fieldName": "velocity",
              "inheritedFrom": {
                "name": "transformeable",
                "module": "src/mixins/transform.ts"
              }
            },
            {
              "name": "from",
              "type": {
                "text": "Vector2D"
              },
              "description": "Starting point of the element relative to its anchor.",
              "fieldName": "from",
              "inheritedFrom": {
                "name": "hasFrom",
                "module": "src/mixins/fromTo.ts"
              }
            }
          ],
          "events": [
            {
              "name": "click",
              "type": {
                "text": "PointerEvent"
              },
              "inheritedFrom": {
                "name": "Canvas2DBaseRenderable",
                "module": "src/elements/canvas2d/renderable.ts"
              }
            },
            {
              "name": "mouseout",
              "type": {
                "text": "MouseEvent"
              },
              "inheritedFrom": {
                "name": "Canvas2DBaseRenderable",
                "module": "src/elements/canvas2d/renderable.ts"
              }
            },
            {
              "name": "mouseover",
              "type": {
                "text": "MouseEvent"
              },
              "inheritedFrom": {
                "name": "Canvas2DBaseRenderable",
                "module": "src/elements/canvas2d/renderable.ts"
              }
            },
            {
              "name": "mousemove",
              "type": {
                "text": "MouseEvent"
              },
              "inheritedFrom": {
                "name": "Canvas2DBaseRenderable",
                "module": "src/elements/canvas2d/renderable.ts"
              }
            },
            {
              "name": "mouseenter",
              "type": {
                "text": "MouseEvent"
              },
              "inheritedFrom": {
                "name": "Canvas2DBaseRenderable",
                "module": "src/elements/canvas2d/renderable.ts"
              }
            },
            {
              "name": "mousedown",
              "type": {
                "text": "MouseEvent"
              },
              "inheritedFrom": {
                "name": "Canvas2DBaseRenderable",
                "module": "src/elements/canvas2d/renderable.ts"
              }
            },
            {
              "name": "mouseup",
              "type": {
                "text": "MouseEvent"
              },
              "inheritedFrom": {
                "name": "Canvas2DBaseRenderable",
                "module": "src/elements/canvas2d/renderable.ts"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "Canvas2DShapeLine",
          "declaration": {
            "name": "Canvas2DShapeLine",
            "module": "src/elements/canvas2d/line.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "c2d-shape-line",
          "declaration": {
            "name": "Canvas2DShapeLine",
            "module": "src/elements/canvas2d/line.ts"
          }
        },
        {
          "kind": "js",
          "name": "Canvas2DLine",
          "declaration": {
            "name": "Canvas2DLine",
            "module": "src/elements/canvas2d/line.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "c2d-line",
          "declaration": {
            "name": "Canvas2DLine",
            "module": "src/elements/canvas2d/line.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/elements/canvas2d/rectangle.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "Canvas2DRectangle",
          "members": [
            {
              "kind": "field",
              "name": "tag",
              "type": {
                "text": "string"
              },
              "static": true,
              "readonly": true,
              "inheritedFrom": {
                "name": "Canvas2DElement",
                "module": "src/elements/canvas2d/element.ts"
              }
            },
            {
              "kind": "method",
              "name": "render",
              "parameters": [
                {
                  "name": "canvas2D",
                  "type": {
                    "text": "Canvas2DCanvasElement"
                  }
                }
              ],
              "privacy": "private",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "Canvas2DBaseRenderable",
                "module": "src/elements/canvas2d/renderable.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderRadialGradient",
              "parameters": [
                {
                  "name": "context",
                  "type": {
                    "text": "CanvasRenderingContext2D"
                  }
                },
                {
                  "name": "gradient",
                  "type": {
                    "text": "RadialGradient"
                  }
                }
              ],
              "privacy": "private",
              "return": {
                "type": {
                  "text": "CanvasGradient"
                }
              },
              "inheritedFrom": {
                "name": "Canvas2DBaseRenderable",
                "module": "src/elements/canvas2d/renderable.ts"
              }
            },
            {
              "kind": "field",
              "name": "#anchor",
              "privacy": "private",
              "inheritedFrom": {
                "name": "transformeable",
                "module": "src/mixins/transform.ts"
              }
            },
            {
              "kind": "field",
              "name": "#angle",
              "privacy": "private",
              "inheritedFrom": {
                "name": "transformeable",
                "module": "src/mixins/transform.ts"
              }
            },
            {
              "kind": "field",
              "name": "#angularVelocity",
              "privacy": "private",
              "inheritedFrom": {
                "name": "transformeable",
                "module": "src/mixins/transform.ts"
              }
            },
            {
              "kind": "field",
              "name": "#scale",
              "privacy": "private",
              "inheritedFrom": {
                "name": "transformeable",
                "module": "src/mixins/transform.ts"
              }
            },
            {
              "kind": "field",
              "name": "#velocity",
              "privacy": "private",
              "inheritedFrom": {
                "name": "transformeable",
                "module": "src/mixins/transform.ts"
              }
            },
            {
              "kind": "field",
              "name": "#angleChangeListener",
              "privacy": "private",
              "type": {
                "text": "ChangeListener<number>"
              },
              "inheritedFrom": {
                "name": "transformeable",
                "module": "src/mixins/transform.ts"
              }
            },
            {
              "kind": "field",
              "name": "angle",
              "type": {
                "text": "Angle"
              },
              "description": "Clockwise rotation of the element around its anchor.",
              "reflects": true,
              "attribute": "angle",
              "inheritedFrom": {
                "name": "transformeable",
                "module": "src/mixins/transform.ts"
              }
            },
            {
              "kind": "field",
              "name": "#angularVelocityChangedTime",
              "privacy": "private",
              "type": {
                "text": "number"
              },
              "default": "-1",
              "inheritedFrom": {
                "name": "transformeable",
                "module": "src/mixins/transform.ts"
              }
            },
            {
              "kind": "field",
              "name": "angularVelocity",
              "type": {
                "text": "Angle"
              },
              "description": "Clockwise rotation per second.",
              "reflects": true,
              "attribute": "angular-velocity",
              "inheritedFrom": {
                "name": "transformeable",
                "module": "src/mixins/transform.ts"
              }
            },
            {
              "kind": "field",
              "name": "anchor",
              "type": {
                "text": "Vector2D"
              },
              "description": "Base position of the element relative to its parent's anchor.",
              "reflects": true,
              "attribute": "anchor",
              "inheritedFrom": {
                "name": "transformeable",
                "module": "src/mixins/transform.ts"
              }
            },
            {
              "kind": "field",
              "name": "#anchorChangeListener",
              "privacy": "private",
              "type": {
                "text": "ChangeListener<Vector2DBase>"
              },
              "inheritedFrom": {
                "name": "transformeable",
                "module": "src/mixins/transform.ts"
              }
            },
            {
              "kind": "method",
              "name": "moveAnchor",
              "parameters": [
                {
                  "name": "x",
                  "type": {
                    "text": "number"
                  }
                },
                {
                  "name": "y",
                  "type": {
                    "text": "number"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "transformeable",
                "module": "src/mixins/transform.ts"
              }
            },
            {
              "kind": "method",
              "name": "afterRender",
              "parameters": [
                {
                  "name": "canvas2D",
                  "type": {
                    "text": "Canvas2DCanvasElement"
                  }
                }
              ],
              "privacy": "private",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "Canvas2DBaseRenderable",
                "module": "src/elements/canvas2d/renderable.ts"
              }
            },
            {
              "kind": "method",
              "name": "rotateClockwise",
              "parameters": [
                {
                  "name": "angle",
                  "type": {
                    "text": "Angle"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "transformeable",
                "module": "src/mixins/transform.ts"
              }
            },
            {
              "kind": "method",
              "name": "rotateCounterclockwise",
              "parameters": [
                {
                  "name": "angle",
                  "type": {
                    "text": "Angle"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "transformeable",
                "module": "src/mixins/transform.ts"
              }
            },
            {
              "kind": "field",
              "name": "scale",
              "inheritedFrom": {
                "name": "transformeable",
                "module": "src/mixins/transform.ts"
              }
            },
            {
              "kind": "field",
              "name": "#velocityChangedTime",
              "privacy": "private",
              "type": {
                "text": "number"
              },
              "default": "-1",
              "inheritedFrom": {
                "name": "transformeable",
                "module": "src/mixins/transform.ts"
              }
            },
            {
              "kind": "field",
              "name": "velocity",
              "type": {
                "text": "Vector2D"
              },
              "description": "Anchor movement per second.",
              "reflects": true,
              "attribute": "velocity",
              "inheritedFrom": {
                "name": "transformeable",
                "module": "src/mixins/transform.ts"
              }
            },
            {
              "kind": "field",
              "name": "#origin",
              "privacy": "private",
              "type": {
                "text": "Origin"
              },
              "default": "\"topLeft\"",
              "inheritedFrom": {
                "name": "hasRectangleBounds",
                "module": "src/mixins/rectangleBounds.ts"
              }
            },
            {
              "kind": "field",
              "name": "topLeft",
              "readonly": true,
              "inheritedFrom": {
                "name": "hasRectangleBounds",
                "module": "src/mixins/rectangleBounds.ts"
              }
            },
            {
              "kind": "field",
              "name": "topRight",
              "readonly": true,
              "inheritedFrom": {
                "name": "hasRectangleBounds",
                "module": "src/mixins/rectangleBounds.ts"
              }
            },
            {
              "kind": "field",
              "name": "center",
              "readonly": true,
              "inheritedFrom": {
                "name": "hasRectangleBounds",
                "module": "src/mixins/rectangleBounds.ts"
              }
            },
            {
              "kind": "field",
              "name": "bottomLeft",
              "readonly": true,
              "inheritedFrom": {
                "name": "hasRectangleBounds",
                "module": "src/mixins/rectangleBounds.ts"
              }
            },
            {
              "kind": "field",
              "name": "bottomRight",
              "readonly": true,
              "inheritedFrom": {
                "name": "hasRectangleBounds",
                "module": "src/mixins/rectangleBounds.ts"
              }
            },
            {
              "kind": "field",
              "name": "origin",
              "inheritedFrom": {
                "name": "hasRectangleBounds",
                "module": "src/mixins/rectangleBounds.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderConicalGradient",
              "parameters": [
                {
                  "name": "context",
                  "type": {
                    "text": "CanvasRenderingContext2D"
                  }
                },
                {
                  "name": "gradient",
                  "type": {
                    "text": "ConicalGradient"
                  }
                }
              ],
              "privacy": "private",
              "return": {
                "type": {
                  "text": "CanvasGradient"
                }
              },
              "inheritedFrom": {
                "name": "Canvas2DBaseRenderable",
                "module": "src/elements/canvas2d/renderable.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderLinearGradient",
              "parameters": [
                {
                  "name": "context",
                  "type": {
                    "text": "CanvasRenderingContext2D"
                  }
                },
                {
                  "name": "gradient",
                  "type": {
                    "text": "LinearGradient"
                  }
                }
              ],
              "privacy": "private",
              "return": {
                "type": {
                  "text": "CanvasGradient"
                }
              },
              "inheritedFrom": {
                "name": "Canvas2DBaseRenderable",
                "module": "src/elements/canvas2d/renderable.ts"
              }
            },
            {
              "kind": "field",
              "name": "#width",
              "privacy": "private",
              "type": {
                "text": "number"
              },
              "default": "100",
              "inheritedFrom": {
                "name": "hasDimensions",
                "module": "src/mixins/dimensions.ts"
              }
            },
            {
              "kind": "field",
              "name": "#height",
              "privacy": "private",
              "type": {
                "text": "number"
              },
              "default": "100",
              "inheritedFrom": {
                "name": "hasDimensions",
                "module": "src/mixins/dimensions.ts"
              }
            },
            {
              "kind": "field",
              "name": "width",
              "inheritedFrom": {
                "name": "hasDimensions",
                "module": "src/mixins/dimensions.ts"
              }
            },
            {
              "kind": "field",
              "name": "height",
              "inheritedFrom": {
                "name": "hasDimensions",
                "module": "src/mixins/dimensions.ts"
              }
            },
            {
              "kind": "field",
              "name": "#offset",
              "privacy": "private",
              "default": "new Vector2D(0, 0)",
              "inheritedFrom": {
                "name": "offset",
                "module": "src/mixins/offset.ts"
              }
            },
            {
              "kind": "method",
              "name": "moveOffset",
              "parameters": [
                {
                  "name": "x",
                  "type": {
                    "text": "number"
                  }
                },
                {
                  "name": "y",
                  "type": {
                    "text": "number"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "offset",
                "module": "src/mixins/offset.ts"
              }
            },
            {
              "kind": "field",
              "name": "#offsetChangeListener",
              "privacy": "private",
              "type": {
                "text": "ChangeListener<Vector2DBase>"
              },
              "inheritedFrom": {
                "name": "offset",
                "module": "src/mixins/offset.ts"
              }
            },
            {
              "kind": "field",
              "name": "offset",
              "type": {
                "text": "Vector2D"
              },
              "description": "Position of the element's origin relative to its anchor.",
              "reflects": true,
              "attribute": "offset",
              "inheritedFrom": {
                "name": "offset",
                "module": "src/mixins/offset.ts"
              }
            },
            {
              "kind": "field",
              "name": "#stroke",
              "privacy": "private",
              "type": {
                "text": "DrawStyle | null"
              },
              "default": "null",
              "inheritedFrom": {
                "name": "strokeable",
                "module": "src/mixins/stroke.ts"
              }
            },
            {
              "kind": "field",
              "name": "#lineWidth",
              "privacy": "private",
              "type": {
                "text": "number | null"
              },
              "default": "null",
              "inheritedFrom": {
                "name": "strokeable",
                "module": "src/mixins/stroke.ts"
              }
            },
            {
              "kind": "field",
              "name": "lineWidth",
              "type": {
                "text": "number | null"
              },
              "description": "Width in pixels for drawing lines.",
              "reflects": true,
              "attribute": "line-width",
              "inheritedFrom": {
                "name": "strokeable",
                "module": "src/mixins/stroke.ts"
              }
            },
            {
              "kind": "field",
              "name": "stroke",
              "type": {
                "text": "DrawStyle | null"
              },
              "description": "The rendering style for lines. This may be a color or gradient.\r\nWhen set to null, the parent element's style is used. When\r\nset to \"none\", no lines will be drawn.",
              "reflects": true,
              "attribute": "stroke",
              "inheritedFrom": {
                "name": "strokeable",
                "module": "src/mixins/stroke.ts"
              }
            },
            {
              "kind": "field",
              "name": "#fill",
              "privacy": "private",
              "type": {
                "text": "DrawStyle | null"
              },
              "default": "null",
              "inheritedFrom": {
                "name": "fillable",
                "module": "src/mixins/fill.ts"
              }
            },
            {
              "kind": "field",
              "name": "fill",
              "type": {
                "text": "DrawStyle | null"
              },
              "description": "The rendering style inside the element. This may be a color or gradient.\r\nWhen set to null, the parent element's style is used. When\r\nset to \"none\", the inside will be transparent.",
              "reflects": true,
              "attribute": "fill",
              "inheritedFrom": {
                "name": "fillable",
                "module": "src/mixins/fill.ts"
              }
            },
            {
              "kind": "method",
              "name": "bezier",
              "return": {
                "type": {
                  "text": "Canvas2DBezier"
                }
              },
              "parameters": [
                {
                  "name": "options",
                  "optional": true,
                  "type": {
                    "text": "Options<Canvas2DBezier>"
                  }
                }
              ],
              "description": "Creates a `<c2d-bezier>` child element and returns it.",
              "inheritedFrom": {
                "name": "standaloneChildren",
                "module": "src/mixins/children.ts"
              }
            },
            {
              "kind": "method",
              "name": "ellipse",
              "return": {
                "type": {
                  "text": "Canvas2DEllipse"
                }
              },
              "parameters": [
                {
                  "name": "options",
                  "optional": true,
                  "type": {
                    "text": "Options<Canvas2DEllipse>"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "standaloneChildren",
                "module": "src/mixins/children.ts"
              }
            },
            {
              "kind": "method",
              "name": "image",
              "return": {
                "type": {
                  "text": "Canvas2DImage"
                }
              },
              "parameters": [
                {
                  "name": "options",
                  "optional": true,
                  "type": {
                    "text": "Options<Canvas2DImage>"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "standaloneChildren",
                "module": "src/mixins/children.ts"
              }
            },
            {
              "kind": "method",
              "name": "multiple",
              "return": {
                "type": {
                  "text": "Node[]"
                }
              },
              "parameters": [
                {
                  "name": "callback",
                  "type": {
                    "text": "MultipleCallback"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "standaloneChildren",
                "module": "src/mixins/children.ts"
              }
            },
            {
              "kind": "method",
              "name": "line",
              "return": {
                "type": {
                  "text": "Canvas2DLine"
                }
              },
              "parameters": [
                {
                  "name": "options",
                  "optional": true,
                  "type": {
                    "text": "Options<Canvas2DLine>"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "standaloneChildren",
                "module": "src/mixins/children.ts"
              }
            },
            {
              "kind": "method",
              "name": "rectangle",
              "return": {
                "type": {
                  "text": "Canvas2DRectangle"
                }
              },
              "parameters": [
                {
                  "name": "options",
                  "optional": true,
                  "type": {
                    "text": "Options<Canvas2DRectangle>"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "standaloneChildren",
                "module": "src/mixins/children.ts"
              }
            },
            {
              "kind": "method",
              "name": "shape",
              "return": {
                "type": {
                  "text": "Canvas2DShape"
                }
              },
              "parameters": [
                {
                  "name": "options",
                  "optional": true,
                  "type": {
                    "text": "Options<Canvas2DShape>"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "standaloneChildren",
                "module": "src/mixins/children.ts"
              }
            },
            {
              "kind": "method",
              "name": "text",
              "return": {
                "type": {
                  "text": "Canvas2DText"
                }
              },
              "parameters": [
                {
                  "name": "options",
                  "optional": true,
                  "type": {
                    "text": "Options<Canvas2DText>"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "standaloneChildren",
                "module": "src/mixins/children.ts"
              }
            },
            {
              "kind": "method",
              "name": "video",
              "return": {
                "type": {
                  "text": "Canvas2DVideo"
                }
              },
              "parameters": [
                {
                  "name": "options",
                  "optional": true,
                  "type": {
                    "text": "Options<Canvas2DVideo>"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "standaloneChildren",
                "module": "src/mixins/children.ts"
              }
            },
            {
              "kind": "field",
              "name": "#changedSinceRender",
              "privacy": "private",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "inheritedFrom": {
                "name": "Canvas2DBaseRenderable",
                "module": "src/elements/canvas2d/renderable.ts"
              }
            },
            {
              "kind": "field",
              "name": "#clickListeners",
              "privacy": "private",
              "default": "new Set<EventListenerOrEventListenerObject>()",
              "inheritedFrom": {
                "name": "Canvas2DBaseRenderable",
                "module": "src/elements/canvas2d/renderable.ts"
              }
            },
            {
              "kind": "field",
              "name": "#localMouse",
              "privacy": "private",
              "default": "new MouseData()",
              "inheritedFrom": {
                "name": "Canvas2DBaseRenderable",
                "module": "src/elements/canvas2d/renderable.ts"
              }
            },
            {
              "kind": "field",
              "name": "#mouseListeners",
              "privacy": "private",
              "default": "new Set<EventListenerOrEventListenerObject>()",
              "inheritedFrom": {
                "name": "Canvas2DBaseRenderable",
                "module": "src/elements/canvas2d/renderable.ts"
              }
            },
            {
              "kind": "field",
              "name": "#shadow",
              "privacy": "private",
              "type": {
                "text": "Shadow | null"
              },
              "default": "null",
              "inheritedFrom": {
                "name": "Canvas2DBaseRenderable",
                "module": "src/elements/canvas2d/renderable.ts"
              }
            },
            {
              "kind": "method",
              "name": "addEventListener",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "type",
                  "type": {
                    "text": "keyof HTMLElementEventMap"
                  }
                },
                {
                  "name": "listener",
                  "type": {
                    "text": "EventListenerOrEventListenerObject"
                  }
                },
                {
                  "name": "options",
                  "optional": true,
                  "type": {
                    "text": "boolean | AddEventListenerOptions"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Canvas2DBaseRenderable",
                "module": "src/elements/canvas2d/renderable.ts"
              }
            },
            {
              "kind": "method",
              "name": "removeEventListener",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "type",
                  "type": {
                    "text": "keyof HTMLElementEventMap"
                  }
                },
                {
                  "name": "listener",
                  "type": {
                    "text": "EventListenerOrEventListenerObject"
                  }
                },
                {
                  "name": "options",
                  "optional": true,
                  "type": {
                    "text": "boolean | AddEventListenerOptions"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Canvas2DBaseRenderable",
                "module": "src/elements/canvas2d/renderable.ts"
              }
            },
            {
              "kind": "field",
              "name": "changedSinceRender",
              "privacy": "private",
              "readonly": true,
              "inheritedFrom": {
                "name": "Canvas2DBaseRenderable",
                "module": "src/elements/canvas2d/renderable.ts"
              }
            },
            {
              "kind": "method",
              "name": "#handleClick",
              "privacy": "private",
              "parameters": [
                {
                  "name": "canvas2D",
                  "type": {
                    "text": "Canvas2DCanvasElement"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Canvas2DBaseRenderable",
                "module": "src/elements/canvas2d/renderable.ts"
              }
            },
            {
              "kind": "method",
              "name": "#handleMouse",
              "privacy": "private",
              "parameters": [
                {
                  "name": "canvas2D",
                  "type": {
                    "text": "Canvas2DCanvasElement"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Canvas2DBaseRenderable",
                "module": "src/elements/canvas2d/renderable.ts"
              }
            },
            {
              "kind": "method",
              "name": "registerChange",
              "parameters": [
                {
                  "name": "propertyName",
                  "type": {
                    "text": "P"
                  }
                },
                {
                  "name": "newValue",
                  "type": {
                    "text": "V"
                  }
                }
              ],
              "privacy": "private",
              "inheritedFrom": {
                "name": "Canvas2DBaseRenderable",
                "module": "src/elements/canvas2d/renderable.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderChildren",
              "parameters": [
                {
                  "name": "canvas2D",
                  "type": {
                    "text": "Canvas2DCanvasElement"
                  }
                }
              ],
              "privacy": "private",
              "inheritedFrom": {
                "name": "Canvas2DBaseRenderable",
                "module": "src/elements/canvas2d/renderable.ts"
              }
            },
            {
              "kind": "field",
              "name": "#shadowChangeListener",
              "privacy": "private",
              "type": {
                "text": "ChangeListener<Shadow>"
              },
              "inheritedFrom": {
                "name": "Canvas2DBaseRenderable",
                "module": "src/elements/canvas2d/renderable.ts"
              }
            },
            {
              "kind": "field",
              "name": "shadow",
              "inheritedFrom": {
                "name": "Canvas2DBaseRenderable",
                "module": "src/elements/canvas2d/renderable.ts"
              }
            },
            {
              "kind": "field",
              "name": "#eventProxy",
              "privacy": "private",
              "inheritedFrom": {
                "name": "Canvas2DElement",
                "module": "src/elements/canvas2d/element.ts"
              }
            },
            {
              "kind": "field",
              "name": "#everyFrame",
              "privacy": "private",
              "type": {
                "text": "Updater | null"
              },
              "default": "null",
              "inheritedFrom": {
                "name": "Canvas2DElement",
                "module": "src/elements/canvas2d/element.ts"
              }
            },
            {
              "kind": "field",
              "name": "canvas",
              "type": {
                "text": "Canvas2DCanvasElement"
              },
              "description": "The <c2d-canvas> element that is rendering this element. The <c2d-canvas>\r\nwill be an ancestor of this element.",
              "readonly": true,
              "inheritedFrom": {
                "name": "Canvas2DElement",
                "module": "src/elements/canvas2d/element.ts"
              }
            },
            {
              "kind": "method",
              "name": "createChild",
              "parameters": [
                {
                  "name": "ElementClass",
                  "type": {
                    "text": "E"
                  }
                },
                {
                  "name": "options",
                  "optional": true,
                  "type": {
                    "text": "Options<InstanceType<E>>"
                  }
                }
              ],
              "privacy": "private",
              "inheritedFrom": {
                "name": "Canvas2DElement",
                "module": "src/elements/canvas2d/element.ts"
              }
            },
            {
              "kind": "field",
              "name": "everyFrame",
              "type": {
                "text": "Updater | null"
              },
              "inheritedFrom": {
                "name": "Canvas2DElement",
                "module": "src/elements/canvas2d/element.ts"
              }
            },
            {
              "kind": "field",
              "name": "listen",
              "readonly": true,
              "inheritedFrom": {
                "name": "Canvas2DElement",
                "module": "src/elements/canvas2d/element.ts"
              }
            },
            {
              "kind": "method",
              "name": "scaleByPixelRatio",
              "parameters": [
                {
                  "name": "vector",
                  "type": {
                    "text": "Vector2D"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Canvas2DElement",
                "module": "src/elements/canvas2d/element.ts"
              }
            }
          ],
          "mixins": [
            {
              "name": "renderCanvasRectangle",
              "module": "src/elements/canvas2d/rectangle.ts"
            },
            {
              "name": "strokeable",
              "module": "/src/mixins/stroke"
            },
            {
              "name": "fillable",
              "module": "/src/mixins/fill"
            }
          ],
          "superclass": {
            "name": "Canvas2DStandaloneRenderable",
            "module": "/src/elements/canvas2d/renderable"
          },
          "tagName": "c2d-rectangle",
          "customElement": true,
          "attributes": [
            {
              "name": "angle",
              "type": {
                "text": "Angle"
              },
              "description": "Clockwise rotation of the element around its anchor.",
              "fieldName": "angle",
              "inheritedFrom": {
                "name": "transformeable",
                "module": "src/mixins/transform.ts"
              }
            },
            {
              "name": "angular-velocity",
              "type": {
                "text": "Angle"
              },
              "description": "Clockwise rotation per second.",
              "fieldName": "angularVelocity",
              "inheritedFrom": {
                "name": "transformeable",
                "module": "src/mixins/transform.ts"
              }
            },
            {
              "name": "anchor",
              "type": {
                "text": "Vector2D"
              },
              "description": "Base position of the element relative to its parent's anchor.",
              "fieldName": "anchor",
              "inheritedFrom": {
                "name": "transformeable",
                "module": "src/mixins/transform.ts"
              }
            },
            {
              "name": "scale",
              "inheritedFrom": {
                "name": "transformeable",
                "module": "src/mixins/transform.ts"
              }
            },
            {
              "name": "velocity",
              "type": {
                "text": "Vector2D"
              },
              "description": "Anchor movement per second.",
              "fieldName": "velocity",
              "inheritedFrom": {
                "name": "transformeable",
                "module": "src/mixins/transform.ts"
              }
            },
            {
              "name": "offset",
              "type": {
                "text": "Vector2D"
              },
              "description": "Position of the element's origin relative to its anchor.",
              "fieldName": "offset",
              "inheritedFrom": {
                "name": "offset",
                "module": "src/mixins/offset.ts"
              }
            },
            {
              "name": "stroke",
              "type": {
                "text": "DrawStyle | null"
              },
              "description": "The rendering style for lines. This may be a color or gradient.\r\nWhen set to null, the parent element's style is used. When\r\nset to \"none\", no lines will be drawn.",
              "fieldName": "stroke",
              "inheritedFrom": {
                "name": "strokeable",
                "module": "src/mixins/stroke.ts"
              }
            },
            {
              "name": "line-width",
              "type": {
                "text": "number | null"
              },
              "description": "Width in pixels for drawing lines.",
              "fieldName": "lineWidth",
              "inheritedFrom": {
                "name": "strokeable",
                "module": "src/mixins/stroke.ts"
              }
            },
            {
              "name": "fill",
              "type": {
                "text": "DrawStyle | null"
              },
              "description": "The rendering style inside the element. This may be a color or gradient.\r\nWhen set to null, the parent element's style is used. When\r\nset to \"none\", the inside will be transparent.",
              "fieldName": "fill",
              "inheritedFrom": {
                "name": "fillable",
                "module": "src/mixins/fill.ts"
              }
            }
          ],
          "events": [
            {
              "name": "click",
              "type": {
                "text": "PointerEvent"
              },
              "inheritedFrom": {
                "name": "Canvas2DBaseRenderable",
                "module": "src/elements/canvas2d/renderable.ts"
              }
            },
            {
              "name": "mouseout",
              "type": {
                "text": "MouseEvent"
              },
              "inheritedFrom": {
                "name": "Canvas2DBaseRenderable",
                "module": "src/elements/canvas2d/renderable.ts"
              }
            },
            {
              "name": "mouseover",
              "type": {
                "text": "MouseEvent"
              },
              "inheritedFrom": {
                "name": "Canvas2DBaseRenderable",
                "module": "src/elements/canvas2d/renderable.ts"
              }
            },
            {
              "name": "mousemove",
              "type": {
                "text": "MouseEvent"
              },
              "inheritedFrom": {
                "name": "Canvas2DBaseRenderable",
                "module": "src/elements/canvas2d/renderable.ts"
              }
            },
            {
              "name": "mouseenter",
              "type": {
                "text": "MouseEvent"
              },
              "inheritedFrom": {
                "name": "Canvas2DBaseRenderable",
                "module": "src/elements/canvas2d/renderable.ts"
              }
            },
            {
              "name": "mousedown",
              "type": {
                "text": "MouseEvent"
              },
              "inheritedFrom": {
                "name": "Canvas2DBaseRenderable",
                "module": "src/elements/canvas2d/renderable.ts"
              }
            },
            {
              "name": "mouseup",
              "type": {
                "text": "MouseEvent"
              },
              "inheritedFrom": {
                "name": "Canvas2DBaseRenderable",
                "module": "src/elements/canvas2d/renderable.ts"
              }
            }
          ]
        },
        {
          "kind": "class",
          "description": "",
          "name": "Canvas2DShapeRectangle",
          "members": [
            {
              "kind": "field",
              "name": "tag",
              "type": {
                "text": "string"
              },
              "static": true,
              "readonly": true,
              "inheritedFrom": {
                "name": "Canvas2DElement",
                "module": "src/elements/canvas2d/element.ts"
              }
            },
            {
              "kind": "method",
              "name": "render",
              "parameters": [
                {
                  "name": "canvas2D",
                  "type": {
                    "text": "Canvas2DCanvasElement"
                  }
                }
              ],
              "privacy": "private",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "Canvas2DBaseRenderable",
                "module": "src/elements/canvas2d/renderable.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderRadialGradient",
              "parameters": [
                {
                  "name": "context",
                  "type": {
                    "text": "CanvasRenderingContext2D"
                  }
                },
                {
                  "name": "gradient",
                  "type": {
                    "text": "RadialGradient"
                  }
                }
              ],
              "privacy": "private",
              "return": {
                "type": {
                  "text": "CanvasGradient"
                }
              },
              "inheritedFrom": {
                "name": "Canvas2DBaseRenderable",
                "module": "src/elements/canvas2d/renderable.ts"
              }
            },
            {
              "kind": "field",
              "name": "#anchor",
              "privacy": "private",
              "inheritedFrom": {
                "name": "transformeable",
                "module": "src/mixins/transform.ts"
              }
            },
            {
              "kind": "field",
              "name": "#angle",
              "privacy": "private",
              "inheritedFrom": {
                "name": "transformeable",
                "module": "src/mixins/transform.ts"
              }
            },
            {
              "kind": "field",
              "name": "#angularVelocity",
              "privacy": "private",
              "inheritedFrom": {
                "name": "transformeable",
                "module": "src/mixins/transform.ts"
              }
            },
            {
              "kind": "field",
              "name": "#scale",
              "privacy": "private",
              "inheritedFrom": {
                "name": "transformeable",
                "module": "src/mixins/transform.ts"
              }
            },
            {
              "kind": "field",
              "name": "#velocity",
              "privacy": "private",
              "inheritedFrom": {
                "name": "transformeable",
                "module": "src/mixins/transform.ts"
              }
            },
            {
              "kind": "field",
              "name": "#angleChangeListener",
              "privacy": "private",
              "type": {
                "text": "ChangeListener<number>"
              },
              "inheritedFrom": {
                "name": "transformeable",
                "module": "src/mixins/transform.ts"
              }
            },
            {
              "kind": "field",
              "name": "angle",
              "type": {
                "text": "Angle"
              },
              "description": "Clockwise rotation of the element around its anchor.",
              "reflects": true,
              "attribute": "angle",
              "inheritedFrom": {
                "name": "transformeable",
                "module": "src/mixins/transform.ts"
              }
            },
            {
              "kind": "field",
              "name": "#angularVelocityChangedTime",
              "privacy": "private",
              "type": {
                "text": "number"
              },
              "default": "-1",
              "inheritedFrom": {
                "name": "transformeable",
                "module": "src/mixins/transform.ts"
              }
            },
            {
              "kind": "field",
              "name": "angularVelocity",
              "type": {
                "text": "Angle"
              },
              "description": "Clockwise rotation per second.",
              "reflects": true,
              "attribute": "angular-velocity",
              "inheritedFrom": {
                "name": "transformeable",
                "module": "src/mixins/transform.ts"
              }
            },
            {
              "kind": "field",
              "name": "anchor",
              "type": {
                "text": "Vector2D"
              },
              "description": "Base position of the element relative to its parent's anchor.",
              "reflects": true,
              "attribute": "anchor",
              "inheritedFrom": {
                "name": "transformeable",
                "module": "src/mixins/transform.ts"
              }
            },
            {
              "kind": "field",
              "name": "#anchorChangeListener",
              "privacy": "private",
              "type": {
                "text": "ChangeListener<Vector2DBase>"
              },
              "inheritedFrom": {
                "name": "transformeable",
                "module": "src/mixins/transform.ts"
              }
            },
            {
              "kind": "method",
              "name": "moveAnchor",
              "parameters": [
                {
                  "name": "x",
                  "type": {
                    "text": "number"
                  }
                },
                {
                  "name": "y",
                  "type": {
                    "text": "number"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "transformeable",
                "module": "src/mixins/transform.ts"
              }
            },
            {
              "kind": "method",
              "name": "afterRender",
              "parameters": [
                {
                  "name": "canvas2D",
                  "type": {
                    "text": "Canvas2DCanvasElement"
                  }
                }
              ],
              "privacy": "private",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "Canvas2DBaseRenderable",
                "module": "src/elements/canvas2d/renderable.ts"
              }
            },
            {
              "kind": "method",
              "name": "rotateClockwise",
              "parameters": [
                {
                  "name": "angle",
                  "type": {
                    "text": "Angle"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "transformeable",
                "module": "src/mixins/transform.ts"
              }
            },
            {
              "kind": "method",
              "name": "rotateCounterclockwise",
              "parameters": [
                {
                  "name": "angle",
                  "type": {
                    "text": "Angle"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "transformeable",
                "module": "src/mixins/transform.ts"
              }
            },
            {
              "kind": "field",
              "name": "scale",
              "inheritedFrom": {
                "name": "transformeable",
                "module": "src/mixins/transform.ts"
              }
            },
            {
              "kind": "field",
              "name": "#velocityChangedTime",
              "privacy": "private",
              "type": {
                "text": "number"
              },
              "default": "-1",
              "inheritedFrom": {
                "name": "transformeable",
                "module": "src/mixins/transform.ts"
              }
            },
            {
              "kind": "field",
              "name": "velocity",
              "type": {
                "text": "Vector2D"
              },
              "description": "Anchor movement per second.",
              "reflects": true,
              "attribute": "velocity",
              "inheritedFrom": {
                "name": "transformeable",
                "module": "src/mixins/transform.ts"
              }
            },
            {
              "kind": "field",
              "name": "#origin",
              "privacy": "private",
              "type": {
                "text": "Origin"
              },
              "default": "\"topLeft\"",
              "inheritedFrom": {
                "name": "hasRectangleBounds",
                "module": "src/mixins/rectangleBounds.ts"
              }
            },
            {
              "kind": "field",
              "name": "topLeft",
              "readonly": true,
              "inheritedFrom": {
                "name": "hasRectangleBounds",
                "module": "src/mixins/rectangleBounds.ts"
              }
            },
            {
              "kind": "field",
              "name": "topRight",
              "readonly": true,
              "inheritedFrom": {
                "name": "hasRectangleBounds",
                "module": "src/mixins/rectangleBounds.ts"
              }
            },
            {
              "kind": "field",
              "name": "center",
              "readonly": true,
              "inheritedFrom": {
                "name": "hasRectangleBounds",
                "module": "src/mixins/rectangleBounds.ts"
              }
            },
            {
              "kind": "field",
              "name": "bottomLeft",
              "readonly": true,
              "inheritedFrom": {
                "name": "hasRectangleBounds",
                "module": "src/mixins/rectangleBounds.ts"
              }
            },
            {
              "kind": "field",
              "name": "bottomRight",
              "readonly": true,
              "inheritedFrom": {
                "name": "hasRectangleBounds",
                "module": "src/mixins/rectangleBounds.ts"
              }
            },
            {
              "kind": "field",
              "name": "origin",
              "inheritedFrom": {
                "name": "hasRectangleBounds",
                "module": "src/mixins/rectangleBounds.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderConicalGradient",
              "parameters": [
                {
                  "name": "context",
                  "type": {
                    "text": "CanvasRenderingContext2D"
                  }
                },
                {
                  "name": "gradient",
                  "type": {
                    "text": "ConicalGradient"
                  }
                }
              ],
              "privacy": "private",
              "return": {
                "type": {
                  "text": "CanvasGradient"
                }
              },
              "inheritedFrom": {
                "name": "Canvas2DBaseRenderable",
                "module": "src/elements/canvas2d/renderable.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderLinearGradient",
              "parameters": [
                {
                  "name": "context",
                  "type": {
                    "text": "CanvasRenderingContext2D"
                  }
                },
                {
                  "name": "gradient",
                  "type": {
                    "text": "LinearGradient"
                  }
                }
              ],
              "privacy": "private",
              "return": {
                "type": {
                  "text": "CanvasGradient"
                }
              },
              "inheritedFrom": {
                "name": "Canvas2DBaseRenderable",
                "module": "src/elements/canvas2d/renderable.ts"
              }
            },
            {
              "kind": "field",
              "name": "#width",
              "privacy": "private",
              "type": {
                "text": "number"
              },
              "default": "100",
              "inheritedFrom": {
                "name": "hasDimensions",
                "module": "src/mixins/dimensions.ts"
              }
            },
            {
              "kind": "field",
              "name": "#height",
              "privacy": "private",
              "type": {
                "text": "number"
              },
              "default": "100",
              "inheritedFrom": {
                "name": "hasDimensions",
                "module": "src/mixins/dimensions.ts"
              }
            },
            {
              "kind": "field",
              "name": "width",
              "inheritedFrom": {
                "name": "hasDimensions",
                "module": "src/mixins/dimensions.ts"
              }
            },
            {
              "kind": "field",
              "name": "height",
              "inheritedFrom": {
                "name": "hasDimensions",
                "module": "src/mixins/dimensions.ts"
              }
            },
            {
              "kind": "field",
              "name": "#offset",
              "privacy": "private",
              "default": "new Vector2D(0, 0)",
              "inheritedFrom": {
                "name": "offset",
                "module": "src/mixins/offset.ts"
              }
            },
            {
              "kind": "method",
              "name": "moveOffset",
              "parameters": [
                {
                  "name": "x",
                  "type": {
                    "text": "number"
                  }
                },
                {
                  "name": "y",
                  "type": {
                    "text": "number"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "offset",
                "module": "src/mixins/offset.ts"
              }
            },
            {
              "kind": "field",
              "name": "#offsetChangeListener",
              "privacy": "private",
              "type": {
                "text": "ChangeListener<Vector2DBase>"
              },
              "inheritedFrom": {
                "name": "offset",
                "module": "src/mixins/offset.ts"
              }
            },
            {
              "kind": "field",
              "name": "offset",
              "type": {
                "text": "Vector2D"
              },
              "description": "Position of the element's origin relative to its anchor.",
              "reflects": true,
              "attribute": "offset",
              "inheritedFrom": {
                "name": "offset",
                "module": "src/mixins/offset.ts"
              }
            },
            {
              "kind": "method",
              "name": "bezier",
              "parameters": [
                {
                  "name": "options",
                  "optional": true,
                  "type": {
                    "text": "Options<Canvas2DShapeBezier>"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "partChildren",
                "module": "src/mixins/children.ts"
              }
            },
            {
              "kind": "method",
              "name": "ellipse",
              "parameters": [
                {
                  "name": "options",
                  "optional": true,
                  "type": {
                    "text": "Options<Canvas2DShapeEllipse>"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "partChildren",
                "module": "src/mixins/children.ts"
              }
            },
            {
              "kind": "method",
              "name": "line",
              "parameters": [
                {
                  "name": "options",
                  "optional": true,
                  "type": {
                    "text": "Options<Canvas2DShapeLine>"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "partChildren",
                "module": "src/mixins/children.ts"
              }
            },
            {
              "kind": "method",
              "name": "rectangle",
              "parameters": [
                {
                  "name": "options",
                  "optional": true,
                  "type": {
                    "text": "Options<Canvas2DShapeRectangle>"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "partChildren",
                "module": "src/mixins/children.ts"
              }
            },
            {
              "kind": "field",
              "name": "#changedSinceRender",
              "privacy": "private",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "inheritedFrom": {
                "name": "Canvas2DBaseRenderable",
                "module": "src/elements/canvas2d/renderable.ts"
              }
            },
            {
              "kind": "field",
              "name": "#clickListeners",
              "privacy": "private",
              "default": "new Set<EventListenerOrEventListenerObject>()",
              "inheritedFrom": {
                "name": "Canvas2DBaseRenderable",
                "module": "src/elements/canvas2d/renderable.ts"
              }
            },
            {
              "kind": "field",
              "name": "#localMouse",
              "privacy": "private",
              "default": "new MouseData()",
              "inheritedFrom": {
                "name": "Canvas2DBaseRenderable",
                "module": "src/elements/canvas2d/renderable.ts"
              }
            },
            {
              "kind": "field",
              "name": "#mouseListeners",
              "privacy": "private",
              "default": "new Set<EventListenerOrEventListenerObject>()",
              "inheritedFrom": {
                "name": "Canvas2DBaseRenderable",
                "module": "src/elements/canvas2d/renderable.ts"
              }
            },
            {
              "kind": "field",
              "name": "#shadow",
              "privacy": "private",
              "type": {
                "text": "Shadow | null"
              },
              "default": "null",
              "inheritedFrom": {
                "name": "Canvas2DBaseRenderable",
                "module": "src/elements/canvas2d/renderable.ts"
              }
            },
            {
              "kind": "method",
              "name": "addEventListener",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "type",
                  "type": {
                    "text": "keyof HTMLElementEventMap"
                  }
                },
                {
                  "name": "listener",
                  "type": {
                    "text": "EventListenerOrEventListenerObject"
                  }
                },
                {
                  "name": "options",
                  "optional": true,
                  "type": {
                    "text": "boolean | AddEventListenerOptions"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Canvas2DBaseRenderable",
                "module": "src/elements/canvas2d/renderable.ts"
              }
            },
            {
              "kind": "method",
              "name": "removeEventListener",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "type",
                  "type": {
                    "text": "keyof HTMLElementEventMap"
                  }
                },
                {
                  "name": "listener",
                  "type": {
                    "text": "EventListenerOrEventListenerObject"
                  }
                },
                {
                  "name": "options",
                  "optional": true,
                  "type": {
                    "text": "boolean | AddEventListenerOptions"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Canvas2DBaseRenderable",
                "module": "src/elements/canvas2d/renderable.ts"
              }
            },
            {
              "kind": "field",
              "name": "changedSinceRender",
              "privacy": "private",
              "readonly": true,
              "inheritedFrom": {
                "name": "Canvas2DBaseRenderable",
                "module": "src/elements/canvas2d/renderable.ts"
              }
            },
            {
              "kind": "method",
              "name": "#handleClick",
              "privacy": "private",
              "parameters": [
                {
                  "name": "canvas2D",
                  "type": {
                    "text": "Canvas2DCanvasElement"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Canvas2DBaseRenderable",
                "module": "src/elements/canvas2d/renderable.ts"
              }
            },
            {
              "kind": "method",
              "name": "#handleMouse",
              "privacy": "private",
              "parameters": [
                {
                  "name": "canvas2D",
                  "type": {
                    "text": "Canvas2DCanvasElement"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Canvas2DBaseRenderable",
                "module": "src/elements/canvas2d/renderable.ts"
              }
            },
            {
              "kind": "method",
              "name": "registerChange",
              "parameters": [
                {
                  "name": "propertyName",
                  "type": {
                    "text": "P"
                  }
                },
                {
                  "name": "newValue",
                  "type": {
                    "text": "V"
                  }
                }
              ],
              "privacy": "private",
              "inheritedFrom": {
                "name": "Canvas2DBaseRenderable",
                "module": "src/elements/canvas2d/renderable.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderChildren",
              "parameters": [
                {
                  "name": "canvas2D",
                  "type": {
                    "text": "Canvas2DCanvasElement"
                  }
                }
              ],
              "privacy": "private",
              "inheritedFrom": {
                "name": "Canvas2DBaseRenderable",
                "module": "src/elements/canvas2d/renderable.ts"
              }
            },
            {
              "kind": "field",
              "name": "#shadowChangeListener",
              "privacy": "private",
              "type": {
                "text": "ChangeListener<Shadow>"
              },
              "inheritedFrom": {
                "name": "Canvas2DBaseRenderable",
                "module": "src/elements/canvas2d/renderable.ts"
              }
            },
            {
              "kind": "field",
              "name": "shadow",
              "inheritedFrom": {
                "name": "Canvas2DBaseRenderable",
                "module": "src/elements/canvas2d/renderable.ts"
              }
            },
            {
              "kind": "field",
              "name": "#eventProxy",
              "privacy": "private",
              "inheritedFrom": {
                "name": "Canvas2DElement",
                "module": "src/elements/canvas2d/element.ts"
              }
            },
            {
              "kind": "field",
              "name": "#everyFrame",
              "privacy": "private",
              "type": {
                "text": "Updater | null"
              },
              "default": "null",
              "inheritedFrom": {
                "name": "Canvas2DElement",
                "module": "src/elements/canvas2d/element.ts"
              }
            },
            {
              "kind": "field",
              "name": "canvas",
              "type": {
                "text": "Canvas2DCanvasElement"
              },
              "description": "The <c2d-canvas> element that is rendering this element. The <c2d-canvas>\r\nwill be an ancestor of this element.",
              "readonly": true,
              "inheritedFrom": {
                "name": "Canvas2DElement",
                "module": "src/elements/canvas2d/element.ts"
              }
            },
            {
              "kind": "method",
              "name": "createChild",
              "parameters": [
                {
                  "name": "ElementClass",
                  "type": {
                    "text": "E"
                  }
                },
                {
                  "name": "options",
                  "optional": true,
                  "type": {
                    "text": "Options<InstanceType<E>>"
                  }
                }
              ],
              "privacy": "private",
              "inheritedFrom": {
                "name": "Canvas2DElement",
                "module": "src/elements/canvas2d/element.ts"
              }
            },
            {
              "kind": "field",
              "name": "everyFrame",
              "type": {
                "text": "Updater | null"
              },
              "inheritedFrom": {
                "name": "Canvas2DElement",
                "module": "src/elements/canvas2d/element.ts"
              }
            },
            {
              "kind": "field",
              "name": "listen",
              "readonly": true,
              "inheritedFrom": {
                "name": "Canvas2DElement",
                "module": "src/elements/canvas2d/element.ts"
              }
            },
            {
              "kind": "method",
              "name": "scaleByPixelRatio",
              "parameters": [
                {
                  "name": "vector",
                  "type": {
                    "text": "Vector2D"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Canvas2DElement",
                "module": "src/elements/canvas2d/element.ts"
              }
            }
          ],
          "mixins": [
            {
              "name": "renderCanvasRectangle",
              "module": "src/elements/canvas2d/rectangle.ts"
            }
          ],
          "superclass": {
            "name": "Canvas2DShapePartRenderable",
            "module": "/src/elements/canvas2d/renderable"
          },
          "tagName": "c2d-shape-rectangle",
          "customElement": true,
          "attributes": [
            {
              "name": "angle",
              "type": {
                "text": "Angle"
              },
              "description": "Clockwise rotation of the element around its anchor.",
              "fieldName": "angle",
              "inheritedFrom": {
                "name": "transformeable",
                "module": "src/mixins/transform.ts"
              }
            },
            {
              "name": "angular-velocity",
              "type": {
                "text": "Angle"
              },
              "description": "Clockwise rotation per second.",
              "fieldName": "angularVelocity",
              "inheritedFrom": {
                "name": "transformeable",
                "module": "src/mixins/transform.ts"
              }
            },
            {
              "name": "anchor",
              "type": {
                "text": "Vector2D"
              },
              "description": "Base position of the element relative to its parent's anchor.",
              "fieldName": "anchor",
              "inheritedFrom": {
                "name": "transformeable",
                "module": "src/mixins/transform.ts"
              }
            },
            {
              "name": "scale",
              "inheritedFrom": {
                "name": "transformeable",
                "module": "src/mixins/transform.ts"
              }
            },
            {
              "name": "velocity",
              "type": {
                "text": "Vector2D"
              },
              "description": "Anchor movement per second.",
              "fieldName": "velocity",
              "inheritedFrom": {
                "name": "transformeable",
                "module": "src/mixins/transform.ts"
              }
            },
            {
              "name": "offset",
              "type": {
                "text": "Vector2D"
              },
              "description": "Position of the element's origin relative to its anchor.",
              "fieldName": "offset",
              "inheritedFrom": {
                "name": "offset",
                "module": "src/mixins/offset.ts"
              }
            }
          ],
          "events": [
            {
              "name": "click",
              "type": {
                "text": "PointerEvent"
              },
              "inheritedFrom": {
                "name": "Canvas2DBaseRenderable",
                "module": "src/elements/canvas2d/renderable.ts"
              }
            },
            {
              "name": "mouseout",
              "type": {
                "text": "MouseEvent"
              },
              "inheritedFrom": {
                "name": "Canvas2DBaseRenderable",
                "module": "src/elements/canvas2d/renderable.ts"
              }
            },
            {
              "name": "mouseover",
              "type": {
                "text": "MouseEvent"
              },
              "inheritedFrom": {
                "name": "Canvas2DBaseRenderable",
                "module": "src/elements/canvas2d/renderable.ts"
              }
            },
            {
              "name": "mousemove",
              "type": {
                "text": "MouseEvent"
              },
              "inheritedFrom": {
                "name": "Canvas2DBaseRenderable",
                "module": "src/elements/canvas2d/renderable.ts"
              }
            },
            {
              "name": "mouseenter",
              "type": {
                "text": "MouseEvent"
              },
              "inheritedFrom": {
                "name": "Canvas2DBaseRenderable",
                "module": "src/elements/canvas2d/renderable.ts"
              }
            },
            {
              "name": "mousedown",
              "type": {
                "text": "MouseEvent"
              },
              "inheritedFrom": {
                "name": "Canvas2DBaseRenderable",
                "module": "src/elements/canvas2d/renderable.ts"
              }
            },
            {
              "name": "mouseup",
              "type": {
                "text": "MouseEvent"
              },
              "inheritedFrom": {
                "name": "Canvas2DBaseRenderable",
                "module": "src/elements/canvas2d/renderable.ts"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "Canvas2DRectangle",
          "declaration": {
            "name": "Canvas2DRectangle",
            "module": "src/elements/canvas2d/rectangle.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "c2d-rectangle",
          "declaration": {
            "name": "Canvas2DRectangle",
            "module": "src/elements/canvas2d/rectangle.ts"
          }
        },
        {
          "kind": "js",
          "name": "Canvas2DShapeRectangle",
          "declaration": {
            "name": "Canvas2DShapeRectangle",
            "module": "src/elements/canvas2d/rectangle.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "c2d-shape-rectangle",
          "declaration": {
            "name": "Canvas2DShapeRectangle",
            "module": "src/elements/canvas2d/rectangle.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/elements/canvas2d/renderable.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "changedEvent",
          "default": "new Event(\"change\", { bubbles: true })"
        },
        {
          "kind": "class",
          "description": "",
          "name": "Canvas2DBaseRenderable",
          "members": [
            {
              "kind": "field",
              "name": "#changedSinceRender",
              "privacy": "private",
              "type": {
                "text": "boolean"
              },
              "default": "false"
            },
            {
              "kind": "field",
              "name": "#clickListeners",
              "privacy": "private",
              "default": "new Set<EventListenerOrEventListenerObject>()"
            },
            {
              "kind": "field",
              "name": "#localMouse",
              "privacy": "private",
              "default": "new MouseData()"
            },
            {
              "kind": "field",
              "name": "#mouseListeners",
              "privacy": "private",
              "default": "new Set<EventListenerOrEventListenerObject>()"
            },
            {
              "kind": "field",
              "name": "#shadow",
              "privacy": "private",
              "type": {
                "text": "Shadow | null"
              },
              "default": "null"
            },
            {
              "kind": "method",
              "name": "addEventListener",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "type",
                  "type": {
                    "text": "keyof HTMLElementEventMap"
                  }
                },
                {
                  "name": "listener",
                  "type": {
                    "text": "EventListenerOrEventListenerObject"
                  }
                },
                {
                  "name": "options",
                  "optional": true,
                  "type": {
                    "text": "boolean | AddEventListenerOptions"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "renderConicalGradient",
              "parameters": [
                {
                  "name": "context",
                  "type": {
                    "text": "CanvasRenderingContext2D"
                  }
                },
                {
                  "name": "gradient",
                  "type": {
                    "text": "ConicalGradient"
                  }
                }
              ],
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "renderLinearGradient",
              "parameters": [
                {
                  "name": "context",
                  "type": {
                    "text": "CanvasRenderingContext2D"
                  }
                },
                {
                  "name": "gradient",
                  "type": {
                    "text": "LinearGradient"
                  }
                }
              ],
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "renderRadialGradient",
              "parameters": [
                {
                  "name": "context",
                  "type": {
                    "text": "CanvasRenderingContext2D"
                  }
                },
                {
                  "name": "gradient",
                  "type": {
                    "text": "RadialGradient"
                  }
                }
              ],
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "removeEventListener",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "type",
                  "type": {
                    "text": "keyof HTMLElementEventMap"
                  }
                },
                {
                  "name": "listener",
                  "type": {
                    "text": "EventListenerOrEventListenerObject"
                  }
                },
                {
                  "name": "options",
                  "optional": true,
                  "type": {
                    "text": "boolean | AddEventListenerOptions"
                  }
                }
              ]
            },
            {
              "kind": "field",
              "name": "changedSinceRender",
              "privacy": "private",
              "readonly": true
            },
            {
              "kind": "method",
              "name": "#handleClick",
              "privacy": "private",
              "parameters": [
                {
                  "name": "canvas2D",
                  "type": {
                    "text": "Canvas2DCanvasElement"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "#handleMouse",
              "privacy": "private",
              "parameters": [
                {
                  "name": "canvas2D",
                  "type": {
                    "text": "Canvas2DCanvasElement"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "registerChange",
              "parameters": [
                {
                  "name": "propertyName",
                  "type": {
                    "text": "P"
                  }
                },
                {
                  "name": "newValue",
                  "type": {
                    "text": "V"
                  }
                }
              ],
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "render",
              "parameters": [
                {
                  "name": "canvas2D",
                  "type": {
                    "text": "Canvas2DCanvasElement"
                  }
                }
              ],
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "renderChildren",
              "parameters": [
                {
                  "name": "canvas2D",
                  "type": {
                    "text": "Canvas2DCanvasElement"
                  }
                }
              ],
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "afterRender",
              "parameters": [
                {
                  "name": "canvas2D",
                  "type": {
                    "text": "Canvas2DCanvasElement"
                  }
                }
              ],
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "#shadowChangeListener",
              "privacy": "private",
              "type": {
                "text": "ChangeListener<Shadow>"
              }
            },
            {
              "kind": "field",
              "name": "shadow"
            },
            {
              "kind": "field",
              "name": "tag",
              "type": {
                "text": "string"
              },
              "static": true,
              "inheritedFrom": {
                "name": "Canvas2DElement",
                "module": "src/elements/canvas2d/element.ts"
              }
            },
            {
              "kind": "field",
              "name": "#eventProxy",
              "privacy": "private",
              "inheritedFrom": {
                "name": "Canvas2DElement",
                "module": "src/elements/canvas2d/element.ts"
              }
            },
            {
              "kind": "field",
              "name": "#everyFrame",
              "privacy": "private",
              "type": {
                "text": "Updater | null"
              },
              "default": "null",
              "inheritedFrom": {
                "name": "Canvas2DElement",
                "module": "src/elements/canvas2d/element.ts"
              }
            },
            {
              "kind": "field",
              "name": "canvas",
              "type": {
                "text": "Canvas2DCanvasElement"
              },
              "description": "The <c2d-canvas> element that is rendering this element. The <c2d-canvas>\r\nwill be an ancestor of this element.",
              "readonly": true,
              "inheritedFrom": {
                "name": "Canvas2DElement",
                "module": "src/elements/canvas2d/element.ts"
              }
            },
            {
              "kind": "method",
              "name": "createChild",
              "parameters": [
                {
                  "name": "ElementClass",
                  "type": {
                    "text": "E"
                  }
                },
                {
                  "name": "options",
                  "optional": true,
                  "type": {
                    "text": "Options<InstanceType<E>>"
                  }
                }
              ],
              "privacy": "private",
              "inheritedFrom": {
                "name": "Canvas2DElement",
                "module": "src/elements/canvas2d/element.ts"
              }
            },
            {
              "kind": "field",
              "name": "everyFrame",
              "type": {
                "text": "Updater | null"
              },
              "inheritedFrom": {
                "name": "Canvas2DElement",
                "module": "src/elements/canvas2d/element.ts"
              }
            },
            {
              "kind": "field",
              "name": "listen",
              "readonly": true,
              "inheritedFrom": {
                "name": "Canvas2DElement",
                "module": "src/elements/canvas2d/element.ts"
              }
            },
            {
              "kind": "method",
              "name": "scaleByPixelRatio",
              "parameters": [
                {
                  "name": "vector",
                  "type": {
                    "text": "Vector2D"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Canvas2DElement",
                "module": "src/elements/canvas2d/element.ts"
              }
            }
          ],
          "events": [
            {
              "name": "click",
              "type": {
                "text": "PointerEvent"
              }
            },
            {
              "name": "mouseout",
              "type": {
                "text": "MouseEvent"
              }
            },
            {
              "name": "mouseover",
              "type": {
                "text": "MouseEvent"
              }
            },
            {
              "name": "mousemove",
              "type": {
                "text": "MouseEvent"
              }
            },
            {
              "name": "mouseenter",
              "type": {
                "text": "MouseEvent"
              }
            },
            {
              "name": "mousedown",
              "type": {
                "text": "MouseEvent"
              }
            },
            {
              "name": "mouseup",
              "type": {
                "text": "MouseEvent"
              }
            }
          ],
          "superclass": {
            "name": "Canvas2DElement",
            "module": "/src/elements/canvas2d/element"
          }
        },
        {
          "kind": "class",
          "description": "",
          "name": "Canvas2DStandaloneRenderable",
          "members": [
            {
              "kind": "method",
              "name": "render",
              "parameters": [
                {
                  "name": "canvas2D",
                  "type": {
                    "text": "Canvas2DCanvasElement"
                  }
                }
              ],
              "privacy": "private",
              "inheritedFrom": {
                "name": "Canvas2DBaseRenderable",
                "module": "src/elements/canvas2d/renderable.ts"
              }
            },
            {
              "kind": "method",
              "name": "bezier",
              "return": {
                "type": {
                  "text": "Canvas2DBezier"
                }
              },
              "parameters": [
                {
                  "name": "options",
                  "optional": true,
                  "type": {
                    "text": "Options<Canvas2DBezier>"
                  }
                }
              ],
              "description": "Creates a `<c2d-bezier>` child element and returns it.",
              "inheritedFrom": {
                "name": "standaloneChildren",
                "module": "src/mixins/children.ts"
              }
            },
            {
              "kind": "method",
              "name": "ellipse",
              "return": {
                "type": {
                  "text": "Canvas2DEllipse"
                }
              },
              "parameters": [
                {
                  "name": "options",
                  "optional": true,
                  "type": {
                    "text": "Options<Canvas2DEllipse>"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "standaloneChildren",
                "module": "src/mixins/children.ts"
              }
            },
            {
              "kind": "method",
              "name": "image",
              "return": {
                "type": {
                  "text": "Canvas2DImage"
                }
              },
              "parameters": [
                {
                  "name": "options",
                  "optional": true,
                  "type": {
                    "text": "Options<Canvas2DImage>"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "standaloneChildren",
                "module": "src/mixins/children.ts"
              }
            },
            {
              "kind": "method",
              "name": "multiple",
              "return": {
                "type": {
                  "text": "Node[]"
                }
              },
              "parameters": [
                {
                  "name": "callback",
                  "type": {
                    "text": "MultipleCallback"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "standaloneChildren",
                "module": "src/mixins/children.ts"
              }
            },
            {
              "kind": "method",
              "name": "line",
              "return": {
                "type": {
                  "text": "Canvas2DLine"
                }
              },
              "parameters": [
                {
                  "name": "options",
                  "optional": true,
                  "type": {
                    "text": "Options<Canvas2DLine>"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "standaloneChildren",
                "module": "src/mixins/children.ts"
              }
            },
            {
              "kind": "method",
              "name": "rectangle",
              "return": {
                "type": {
                  "text": "Canvas2DRectangle"
                }
              },
              "parameters": [
                {
                  "name": "options",
                  "optional": true,
                  "type": {
                    "text": "Options<Canvas2DRectangle>"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "standaloneChildren",
                "module": "src/mixins/children.ts"
              }
            },
            {
              "kind": "method",
              "name": "shape",
              "return": {
                "type": {
                  "text": "Canvas2DShape"
                }
              },
              "parameters": [
                {
                  "name": "options",
                  "optional": true,
                  "type": {
                    "text": "Options<Canvas2DShape>"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "standaloneChildren",
                "module": "src/mixins/children.ts"
              }
            },
            {
              "kind": "method",
              "name": "text",
              "return": {
                "type": {
                  "text": "Canvas2DText"
                }
              },
              "parameters": [
                {
                  "name": "options",
                  "optional": true,
                  "type": {
                    "text": "Options<Canvas2DText>"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "standaloneChildren",
                "module": "src/mixins/children.ts"
              }
            },
            {
              "kind": "method",
              "name": "video",
              "return": {
                "type": {
                  "text": "Canvas2DVideo"
                }
              },
              "parameters": [
                {
                  "name": "options",
                  "optional": true,
                  "type": {
                    "text": "Options<Canvas2DVideo>"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "standaloneChildren",
                "module": "src/mixins/children.ts"
              }
            },
            {
              "kind": "field",
              "name": "#changedSinceRender",
              "privacy": "private",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "inheritedFrom": {
                "name": "Canvas2DBaseRenderable",
                "module": "src/elements/canvas2d/renderable.ts"
              }
            },
            {
              "kind": "field",
              "name": "#clickListeners",
              "privacy": "private",
              "default": "new Set<EventListenerOrEventListenerObject>()",
              "inheritedFrom": {
                "name": "Canvas2DBaseRenderable",
                "module": "src/elements/canvas2d/renderable.ts"
              }
            },
            {
              "kind": "field",
              "name": "#localMouse",
              "privacy": "private",
              "default": "new MouseData()",
              "inheritedFrom": {
                "name": "Canvas2DBaseRenderable",
                "module": "src/elements/canvas2d/renderable.ts"
              }
            },
            {
              "kind": "field",
              "name": "#mouseListeners",
              "privacy": "private",
              "default": "new Set<EventListenerOrEventListenerObject>()",
              "inheritedFrom": {
                "name": "Canvas2DBaseRenderable",
                "module": "src/elements/canvas2d/renderable.ts"
              }
            },
            {
              "kind": "field",
              "name": "#shadow",
              "privacy": "private",
              "type": {
                "text": "Shadow | null"
              },
              "default": "null",
              "inheritedFrom": {
                "name": "Canvas2DBaseRenderable",
                "module": "src/elements/canvas2d/renderable.ts"
              }
            },
            {
              "kind": "method",
              "name": "addEventListener",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "type",
                  "type": {
                    "text": "keyof HTMLElementEventMap"
                  }
                },
                {
                  "name": "listener",
                  "type": {
                    "text": "EventListenerOrEventListenerObject"
                  }
                },
                {
                  "name": "options",
                  "optional": true,
                  "type": {
                    "text": "boolean | AddEventListenerOptions"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Canvas2DBaseRenderable",
                "module": "src/elements/canvas2d/renderable.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderConicalGradient",
              "parameters": [
                {
                  "name": "context",
                  "type": {
                    "text": "CanvasRenderingContext2D"
                  }
                },
                {
                  "name": "gradient",
                  "type": {
                    "text": "ConicalGradient"
                  }
                }
              ],
              "privacy": "private",
              "inheritedFrom": {
                "name": "Canvas2DBaseRenderable",
                "module": "src/elements/canvas2d/renderable.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderLinearGradient",
              "parameters": [
                {
                  "name": "context",
                  "type": {
                    "text": "CanvasRenderingContext2D"
                  }
                },
                {
                  "name": "gradient",
                  "type": {
                    "text": "LinearGradient"
                  }
                }
              ],
              "privacy": "private",
              "inheritedFrom": {
                "name": "Canvas2DBaseRenderable",
                "module": "src/elements/canvas2d/renderable.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderRadialGradient",
              "parameters": [
                {
                  "name": "context",
                  "type": {
                    "text": "CanvasRenderingContext2D"
                  }
                },
                {
                  "name": "gradient",
                  "type": {
                    "text": "RadialGradient"
                  }
                }
              ],
              "privacy": "private",
              "inheritedFrom": {
                "name": "Canvas2DBaseRenderable",
                "module": "src/elements/canvas2d/renderable.ts"
              }
            },
            {
              "kind": "method",
              "name": "removeEventListener",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "type",
                  "type": {
                    "text": "keyof HTMLElementEventMap"
                  }
                },
                {
                  "name": "listener",
                  "type": {
                    "text": "EventListenerOrEventListenerObject"
                  }
                },
                {
                  "name": "options",
                  "optional": true,
                  "type": {
                    "text": "boolean | AddEventListenerOptions"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Canvas2DBaseRenderable",
                "module": "src/elements/canvas2d/renderable.ts"
              }
            },
            {
              "kind": "field",
              "name": "changedSinceRender",
              "privacy": "private",
              "readonly": true,
              "inheritedFrom": {
                "name": "Canvas2DBaseRenderable",
                "module": "src/elements/canvas2d/renderable.ts"
              }
            },
            {
              "kind": "method",
              "name": "#handleClick",
              "privacy": "private",
              "parameters": [
                {
                  "name": "canvas2D",
                  "type": {
                    "text": "Canvas2DCanvasElement"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Canvas2DBaseRenderable",
                "module": "src/elements/canvas2d/renderable.ts"
              }
            },
            {
              "kind": "method",
              "name": "#handleMouse",
              "privacy": "private",
              "parameters": [
                {
                  "name": "canvas2D",
                  "type": {
                    "text": "Canvas2DCanvasElement"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Canvas2DBaseRenderable",
                "module": "src/elements/canvas2d/renderable.ts"
              }
            },
            {
              "kind": "method",
              "name": "registerChange",
              "parameters": [
                {
                  "name": "propertyName",
                  "type": {
                    "text": "P"
                  }
                },
                {
                  "name": "newValue",
                  "type": {
                    "text": "V"
                  }
                }
              ],
              "privacy": "private",
              "inheritedFrom": {
                "name": "Canvas2DBaseRenderable",
                "module": "src/elements/canvas2d/renderable.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderChildren",
              "parameters": [
                {
                  "name": "canvas2D",
                  "type": {
                    "text": "Canvas2DCanvasElement"
                  }
                }
              ],
              "privacy": "private",
              "inheritedFrom": {
                "name": "Canvas2DBaseRenderable",
                "module": "src/elements/canvas2d/renderable.ts"
              }
            },
            {
              "kind": "method",
              "name": "afterRender",
              "parameters": [
                {
                  "name": "canvas2D",
                  "type": {
                    "text": "Canvas2DCanvasElement"
                  }
                }
              ],
              "privacy": "private",
              "inheritedFrom": {
                "name": "Canvas2DBaseRenderable",
                "module": "src/elements/canvas2d/renderable.ts"
              }
            },
            {
              "kind": "field",
              "name": "#shadowChangeListener",
              "privacy": "private",
              "type": {
                "text": "ChangeListener<Shadow>"
              },
              "inheritedFrom": {
                "name": "Canvas2DBaseRenderable",
                "module": "src/elements/canvas2d/renderable.ts"
              }
            },
            {
              "kind": "field",
              "name": "shadow",
              "inheritedFrom": {
                "name": "Canvas2DBaseRenderable",
                "module": "src/elements/canvas2d/renderable.ts"
              }
            },
            {
              "kind": "field",
              "name": "tag",
              "type": {
                "text": "string"
              },
              "static": true,
              "inheritedFrom": {
                "name": "Canvas2DElement",
                "module": "src/elements/canvas2d/element.ts"
              }
            },
            {
              "kind": "field",
              "name": "#eventProxy",
              "privacy": "private",
              "inheritedFrom": {
                "name": "Canvas2DElement",
                "module": "src/elements/canvas2d/element.ts"
              }
            },
            {
              "kind": "field",
              "name": "#everyFrame",
              "privacy": "private",
              "type": {
                "text": "Updater | null"
              },
              "default": "null",
              "inheritedFrom": {
                "name": "Canvas2DElement",
                "module": "src/elements/canvas2d/element.ts"
              }
            },
            {
              "kind": "field",
              "name": "canvas",
              "type": {
                "text": "Canvas2DCanvasElement"
              },
              "description": "The <c2d-canvas> element that is rendering this element. The <c2d-canvas>\r\nwill be an ancestor of this element.",
              "readonly": true,
              "inheritedFrom": {
                "name": "Canvas2DElement",
                "module": "src/elements/canvas2d/element.ts"
              }
            },
            {
              "kind": "method",
              "name": "createChild",
              "parameters": [
                {
                  "name": "ElementClass",
                  "type": {
                    "text": "E"
                  }
                },
                {
                  "name": "options",
                  "optional": true,
                  "type": {
                    "text": "Options<InstanceType<E>>"
                  }
                }
              ],
              "privacy": "private",
              "inheritedFrom": {
                "name": "Canvas2DElement",
                "module": "src/elements/canvas2d/element.ts"
              }
            },
            {
              "kind": "field",
              "name": "everyFrame",
              "type": {
                "text": "Updater | null"
              },
              "inheritedFrom": {
                "name": "Canvas2DElement",
                "module": "src/elements/canvas2d/element.ts"
              }
            },
            {
              "kind": "field",
              "name": "listen",
              "readonly": true,
              "inheritedFrom": {
                "name": "Canvas2DElement",
                "module": "src/elements/canvas2d/element.ts"
              }
            },
            {
              "kind": "method",
              "name": "scaleByPixelRatio",
              "parameters": [
                {
                  "name": "vector",
                  "type": {
                    "text": "Vector2D"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Canvas2DElement",
                "module": "src/elements/canvas2d/element.ts"
              }
            }
          ],
          "mixins": [
            {
              "name": "standaloneChildren",
              "module": "/src/mixins/children"
            }
          ],
          "superclass": {
            "name": "Canvas2DBaseRenderable",
            "module": "src/elements/canvas2d/renderable.ts"
          },
          "events": [
            {
              "name": "click",
              "type": {
                "text": "PointerEvent"
              },
              "inheritedFrom": {
                "name": "Canvas2DBaseRenderable",
                "module": "src/elements/canvas2d/renderable.ts"
              }
            },
            {
              "name": "mouseout",
              "type": {
                "text": "MouseEvent"
              },
              "inheritedFrom": {
                "name": "Canvas2DBaseRenderable",
                "module": "src/elements/canvas2d/renderable.ts"
              }
            },
            {
              "name": "mouseover",
              "type": {
                "text": "MouseEvent"
              },
              "inheritedFrom": {
                "name": "Canvas2DBaseRenderable",
                "module": "src/elements/canvas2d/renderable.ts"
              }
            },
            {
              "name": "mousemove",
              "type": {
                "text": "MouseEvent"
              },
              "inheritedFrom": {
                "name": "Canvas2DBaseRenderable",
                "module": "src/elements/canvas2d/renderable.ts"
              }
            },
            {
              "name": "mouseenter",
              "type": {
                "text": "MouseEvent"
              },
              "inheritedFrom": {
                "name": "Canvas2DBaseRenderable",
                "module": "src/elements/canvas2d/renderable.ts"
              }
            },
            {
              "name": "mousedown",
              "type": {
                "text": "MouseEvent"
              },
              "inheritedFrom": {
                "name": "Canvas2DBaseRenderable",
                "module": "src/elements/canvas2d/renderable.ts"
              }
            },
            {
              "name": "mouseup",
              "type": {
                "text": "MouseEvent"
              },
              "inheritedFrom": {
                "name": "Canvas2DBaseRenderable",
                "module": "src/elements/canvas2d/renderable.ts"
              }
            }
          ]
        },
        {
          "kind": "class",
          "description": "",
          "name": "Canvas2DShapePartRenderable",
          "mixins": [
            {
              "name": "partChildren",
              "module": "/src/mixins/children"
            }
          ],
          "superclass": {
            "name": "Canvas2DBaseRenderable",
            "module": "src/elements/canvas2d/renderable.ts"
          },
          "members": [
            {
              "kind": "method",
              "name": "bezier",
              "parameters": [
                {
                  "name": "options",
                  "optional": true,
                  "type": {
                    "text": "Options<Canvas2DShapeBezier>"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "partChildren",
                "module": "src/mixins/children.ts"
              }
            },
            {
              "kind": "method",
              "name": "ellipse",
              "parameters": [
                {
                  "name": "options",
                  "optional": true,
                  "type": {
                    "text": "Options<Canvas2DShapeEllipse>"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "partChildren",
                "module": "src/mixins/children.ts"
              }
            },
            {
              "kind": "method",
              "name": "line",
              "parameters": [
                {
                  "name": "options",
                  "optional": true,
                  "type": {
                    "text": "Options<Canvas2DShapeLine>"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "partChildren",
                "module": "src/mixins/children.ts"
              }
            },
            {
              "kind": "method",
              "name": "rectangle",
              "parameters": [
                {
                  "name": "options",
                  "optional": true,
                  "type": {
                    "text": "Options<Canvas2DShapeRectangle>"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "partChildren",
                "module": "src/mixins/children.ts"
              }
            },
            {
              "kind": "field",
              "name": "#changedSinceRender",
              "privacy": "private",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "inheritedFrom": {
                "name": "Canvas2DBaseRenderable",
                "module": "src/elements/canvas2d/renderable.ts"
              }
            },
            {
              "kind": "field",
              "name": "#clickListeners",
              "privacy": "private",
              "default": "new Set<EventListenerOrEventListenerObject>()",
              "inheritedFrom": {
                "name": "Canvas2DBaseRenderable",
                "module": "src/elements/canvas2d/renderable.ts"
              }
            },
            {
              "kind": "field",
              "name": "#localMouse",
              "privacy": "private",
              "default": "new MouseData()",
              "inheritedFrom": {
                "name": "Canvas2DBaseRenderable",
                "module": "src/elements/canvas2d/renderable.ts"
              }
            },
            {
              "kind": "field",
              "name": "#mouseListeners",
              "privacy": "private",
              "default": "new Set<EventListenerOrEventListenerObject>()",
              "inheritedFrom": {
                "name": "Canvas2DBaseRenderable",
                "module": "src/elements/canvas2d/renderable.ts"
              }
            },
            {
              "kind": "field",
              "name": "#shadow",
              "privacy": "private",
              "type": {
                "text": "Shadow | null"
              },
              "default": "null",
              "inheritedFrom": {
                "name": "Canvas2DBaseRenderable",
                "module": "src/elements/canvas2d/renderable.ts"
              }
            },
            {
              "kind": "method",
              "name": "addEventListener",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "type",
                  "type": {
                    "text": "keyof HTMLElementEventMap"
                  }
                },
                {
                  "name": "listener",
                  "type": {
                    "text": "EventListenerOrEventListenerObject"
                  }
                },
                {
                  "name": "options",
                  "optional": true,
                  "type": {
                    "text": "boolean | AddEventListenerOptions"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Canvas2DBaseRenderable",
                "module": "src/elements/canvas2d/renderable.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderConicalGradient",
              "parameters": [
                {
                  "name": "context",
                  "type": {
                    "text": "CanvasRenderingContext2D"
                  }
                },
                {
                  "name": "gradient",
                  "type": {
                    "text": "ConicalGradient"
                  }
                }
              ],
              "privacy": "private",
              "inheritedFrom": {
                "name": "Canvas2DBaseRenderable",
                "module": "src/elements/canvas2d/renderable.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderLinearGradient",
              "parameters": [
                {
                  "name": "context",
                  "type": {
                    "text": "CanvasRenderingContext2D"
                  }
                },
                {
                  "name": "gradient",
                  "type": {
                    "text": "LinearGradient"
                  }
                }
              ],
              "privacy": "private",
              "inheritedFrom": {
                "name": "Canvas2DBaseRenderable",
                "module": "src/elements/canvas2d/renderable.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderRadialGradient",
              "parameters": [
                {
                  "name": "context",
                  "type": {
                    "text": "CanvasRenderingContext2D"
                  }
                },
                {
                  "name": "gradient",
                  "type": {
                    "text": "RadialGradient"
                  }
                }
              ],
              "privacy": "private",
              "inheritedFrom": {
                "name": "Canvas2DBaseRenderable",
                "module": "src/elements/canvas2d/renderable.ts"
              }
            },
            {
              "kind": "method",
              "name": "removeEventListener",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "type",
                  "type": {
                    "text": "keyof HTMLElementEventMap"
                  }
                },
                {
                  "name": "listener",
                  "type": {
                    "text": "EventListenerOrEventListenerObject"
                  }
                },
                {
                  "name": "options",
                  "optional": true,
                  "type": {
                    "text": "boolean | AddEventListenerOptions"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Canvas2DBaseRenderable",
                "module": "src/elements/canvas2d/renderable.ts"
              }
            },
            {
              "kind": "field",
              "name": "changedSinceRender",
              "privacy": "private",
              "readonly": true,
              "inheritedFrom": {
                "name": "Canvas2DBaseRenderable",
                "module": "src/elements/canvas2d/renderable.ts"
              }
            },
            {
              "kind": "method",
              "name": "#handleClick",
              "privacy": "private",
              "parameters": [
                {
                  "name": "canvas2D",
                  "type": {
                    "text": "Canvas2DCanvasElement"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Canvas2DBaseRenderable",
                "module": "src/elements/canvas2d/renderable.ts"
              }
            },
            {
              "kind": "method",
              "name": "#handleMouse",
              "privacy": "private",
              "parameters": [
                {
                  "name": "canvas2D",
                  "type": {
                    "text": "Canvas2DCanvasElement"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Canvas2DBaseRenderable",
                "module": "src/elements/canvas2d/renderable.ts"
              }
            },
            {
              "kind": "method",
              "name": "registerChange",
              "parameters": [
                {
                  "name": "propertyName",
                  "type": {
                    "text": "P"
                  }
                },
                {
                  "name": "newValue",
                  "type": {
                    "text": "V"
                  }
                }
              ],
              "privacy": "private",
              "inheritedFrom": {
                "name": "Canvas2DBaseRenderable",
                "module": "src/elements/canvas2d/renderable.ts"
              }
            },
            {
              "kind": "method",
              "name": "render",
              "parameters": [
                {
                  "name": "canvas2D",
                  "type": {
                    "text": "Canvas2DCanvasElement"
                  }
                }
              ],
              "privacy": "private",
              "inheritedFrom": {
                "name": "Canvas2DBaseRenderable",
                "module": "src/elements/canvas2d/renderable.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderChildren",
              "parameters": [
                {
                  "name": "canvas2D",
                  "type": {
                    "text": "Canvas2DCanvasElement"
                  }
                }
              ],
              "privacy": "private",
              "inheritedFrom": {
                "name": "Canvas2DBaseRenderable",
                "module": "src/elements/canvas2d/renderable.ts"
              }
            },
            {
              "kind": "method",
              "name": "afterRender",
              "parameters": [
                {
                  "name": "canvas2D",
                  "type": {
                    "text": "Canvas2DCanvasElement"
                  }
                }
              ],
              "privacy": "private",
              "inheritedFrom": {
                "name": "Canvas2DBaseRenderable",
                "module": "src/elements/canvas2d/renderable.ts"
              }
            },
            {
              "kind": "field",
              "name": "#shadowChangeListener",
              "privacy": "private",
              "type": {
                "text": "ChangeListener<Shadow>"
              },
              "inheritedFrom": {
                "name": "Canvas2DBaseRenderable",
                "module": "src/elements/canvas2d/renderable.ts"
              }
            },
            {
              "kind": "field",
              "name": "shadow",
              "inheritedFrom": {
                "name": "Canvas2DBaseRenderable",
                "module": "src/elements/canvas2d/renderable.ts"
              }
            },
            {
              "kind": "field",
              "name": "tag",
              "type": {
                "text": "string"
              },
              "static": true,
              "inheritedFrom": {
                "name": "Canvas2DElement",
                "module": "src/elements/canvas2d/element.ts"
              }
            },
            {
              "kind": "field",
              "name": "#eventProxy",
              "privacy": "private",
              "inheritedFrom": {
                "name": "Canvas2DElement",
                "module": "src/elements/canvas2d/element.ts"
              }
            },
            {
              "kind": "field",
              "name": "#everyFrame",
              "privacy": "private",
              "type": {
                "text": "Updater | null"
              },
              "default": "null",
              "inheritedFrom": {
                "name": "Canvas2DElement",
                "module": "src/elements/canvas2d/element.ts"
              }
            },
            {
              "kind": "field",
              "name": "canvas",
              "type": {
                "text": "Canvas2DCanvasElement"
              },
              "description": "The <c2d-canvas> element that is rendering this element. The <c2d-canvas>\r\nwill be an ancestor of this element.",
              "readonly": true,
              "inheritedFrom": {
                "name": "Canvas2DElement",
                "module": "src/elements/canvas2d/element.ts"
              }
            },
            {
              "kind": "method",
              "name": "createChild",
              "parameters": [
                {
                  "name": "ElementClass",
                  "type": {
                    "text": "E"
                  }
                },
                {
                  "name": "options",
                  "optional": true,
                  "type": {
                    "text": "Options<InstanceType<E>>"
                  }
                }
              ],
              "privacy": "private",
              "inheritedFrom": {
                "name": "Canvas2DElement",
                "module": "src/elements/canvas2d/element.ts"
              }
            },
            {
              "kind": "field",
              "name": "everyFrame",
              "type": {
                "text": "Updater | null"
              },
              "inheritedFrom": {
                "name": "Canvas2DElement",
                "module": "src/elements/canvas2d/element.ts"
              }
            },
            {
              "kind": "field",
              "name": "listen",
              "readonly": true,
              "inheritedFrom": {
                "name": "Canvas2DElement",
                "module": "src/elements/canvas2d/element.ts"
              }
            },
            {
              "kind": "method",
              "name": "scaleByPixelRatio",
              "parameters": [
                {
                  "name": "vector",
                  "type": {
                    "text": "Vector2D"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Canvas2DElement",
                "module": "src/elements/canvas2d/element.ts"
              }
            }
          ],
          "events": [
            {
              "name": "click",
              "type": {
                "text": "PointerEvent"
              },
              "inheritedFrom": {
                "name": "Canvas2DBaseRenderable",
                "module": "src/elements/canvas2d/renderable.ts"
              }
            },
            {
              "name": "mouseout",
              "type": {
                "text": "MouseEvent"
              },
              "inheritedFrom": {
                "name": "Canvas2DBaseRenderable",
                "module": "src/elements/canvas2d/renderable.ts"
              }
            },
            {
              "name": "mouseover",
              "type": {
                "text": "MouseEvent"
              },
              "inheritedFrom": {
                "name": "Canvas2DBaseRenderable",
                "module": "src/elements/canvas2d/renderable.ts"
              }
            },
            {
              "name": "mousemove",
              "type": {
                "text": "MouseEvent"
              },
              "inheritedFrom": {
                "name": "Canvas2DBaseRenderable",
                "module": "src/elements/canvas2d/renderable.ts"
              }
            },
            {
              "name": "mouseenter",
              "type": {
                "text": "MouseEvent"
              },
              "inheritedFrom": {
                "name": "Canvas2DBaseRenderable",
                "module": "src/elements/canvas2d/renderable.ts"
              }
            },
            {
              "name": "mousedown",
              "type": {
                "text": "MouseEvent"
              },
              "inheritedFrom": {
                "name": "Canvas2DBaseRenderable",
                "module": "src/elements/canvas2d/renderable.ts"
              }
            },
            {
              "name": "mouseup",
              "type": {
                "text": "MouseEvent"
              },
              "inheritedFrom": {
                "name": "Canvas2DBaseRenderable",
                "module": "src/elements/canvas2d/renderable.ts"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "changedEvent",
          "declaration": {
            "name": "changedEvent",
            "module": "src/elements/canvas2d/renderable.ts"
          }
        },
        {
          "kind": "js",
          "name": "Canvas2DBaseRenderable",
          "declaration": {
            "name": "Canvas2DBaseRenderable",
            "module": "src/elements/canvas2d/renderable.ts"
          }
        },
        {
          "kind": "js",
          "name": "Canvas2DStandaloneRenderable",
          "declaration": {
            "name": "Canvas2DStandaloneRenderable",
            "module": "src/elements/canvas2d/renderable.ts"
          }
        },
        {
          "kind": "js",
          "name": "Canvas2DShapePartRenderable",
          "declaration": {
            "name": "Canvas2DShapePartRenderable",
            "module": "src/elements/canvas2d/renderable.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/elements/canvas2d/shape.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "Canvas2DShape",
          "members": [
            {
              "kind": "field",
              "name": "tag",
              "type": {
                "text": "string"
              },
              "static": true,
              "inheritedFrom": {
                "name": "Canvas2DElement",
                "module": "src/elements/canvas2d/element.ts"
              },
              "readonly": true
            },
            {
              "kind": "field",
              "name": "#close",
              "privacy": "private",
              "type": {
                "text": "boolean"
              },
              "default": "false"
            },
            {
              "kind": "field",
              "name": "close"
            },
            {
              "kind": "method",
              "name": "render",
              "parameters": [
                {
                  "name": "canvas2D",
                  "type": {
                    "text": "Canvas2DCanvasElement"
                  }
                }
              ],
              "privacy": "private",
              "inheritedFrom": {
                "name": "Canvas2DBaseRenderable",
                "module": "src/elements/canvas2d/renderable.ts"
              },
              "return": {
                "type": {
                  "text": "void"
                }
              }
            },
            {
              "kind": "field",
              "name": "#fill",
              "privacy": "private",
              "type": {
                "text": "DrawStyle | null"
              },
              "default": "null",
              "inheritedFrom": {
                "name": "fillable",
                "module": "src/mixins/fill.ts"
              }
            },
            {
              "kind": "field",
              "name": "fill",
              "type": {
                "text": "DrawStyle | null"
              },
              "description": "The rendering style inside the element. This may be a color or gradient.\r\nWhen set to null, the parent element's style is used. When\r\nset to \"none\", the inside will be transparent.",
              "reflects": true,
              "attribute": "fill",
              "inheritedFrom": {
                "name": "fillable",
                "module": "src/mixins/fill.ts"
              }
            },
            {
              "kind": "method",
              "name": "afterRender",
              "parameters": [
                {
                  "name": "canvas2D",
                  "type": {
                    "text": "Canvas2DCanvasElement"
                  }
                }
              ],
              "privacy": "private",
              "inheritedFrom": {
                "name": "Canvas2DBaseRenderable",
                "module": "src/elements/canvas2d/renderable.ts"
              },
              "return": {
                "type": {
                  "text": "void"
                }
              }
            },
            {
              "kind": "field",
              "name": "#stroke",
              "privacy": "private",
              "type": {
                "text": "DrawStyle | null"
              },
              "default": "null",
              "inheritedFrom": {
                "name": "strokeable",
                "module": "src/mixins/stroke.ts"
              }
            },
            {
              "kind": "field",
              "name": "#lineWidth",
              "privacy": "private",
              "type": {
                "text": "number | null"
              },
              "default": "null",
              "inheritedFrom": {
                "name": "strokeable",
                "module": "src/mixins/stroke.ts"
              }
            },
            {
              "kind": "field",
              "name": "lineWidth",
              "type": {
                "text": "number | null"
              },
              "description": "Width in pixels for drawing lines.",
              "reflects": true,
              "attribute": "line-width",
              "inheritedFrom": {
                "name": "strokeable",
                "module": "src/mixins/stroke.ts"
              }
            },
            {
              "kind": "field",
              "name": "stroke",
              "type": {
                "text": "DrawStyle | null"
              },
              "description": "The rendering style for lines. This may be a color or gradient.\r\nWhen set to null, the parent element's style is used. When\r\nset to \"none\", no lines will be drawn.",
              "reflects": true,
              "attribute": "stroke",
              "inheritedFrom": {
                "name": "strokeable",
                "module": "src/mixins/stroke.ts"
              }
            },
            {
              "kind": "field",
              "name": "#anchor",
              "privacy": "private",
              "inheritedFrom": {
                "name": "transformeable",
                "module": "src/mixins/transform.ts"
              }
            },
            {
              "kind": "field",
              "name": "#angle",
              "privacy": "private",
              "inheritedFrom": {
                "name": "transformeable",
                "module": "src/mixins/transform.ts"
              }
            },
            {
              "kind": "field",
              "name": "#angularVelocity",
              "privacy": "private",
              "inheritedFrom": {
                "name": "transformeable",
                "module": "src/mixins/transform.ts"
              }
            },
            {
              "kind": "field",
              "name": "#scale",
              "privacy": "private",
              "inheritedFrom": {
                "name": "transformeable",
                "module": "src/mixins/transform.ts"
              }
            },
            {
              "kind": "field",
              "name": "#velocity",
              "privacy": "private",
              "inheritedFrom": {
                "name": "transformeable",
                "module": "src/mixins/transform.ts"
              }
            },
            {
              "kind": "field",
              "name": "#angleChangeListener",
              "privacy": "private",
              "type": {
                "text": "ChangeListener<number>"
              },
              "inheritedFrom": {
                "name": "transformeable",
                "module": "src/mixins/transform.ts"
              }
            },
            {
              "kind": "field",
              "name": "angle",
              "type": {
                "text": "Angle"
              },
              "description": "Clockwise rotation of the element around its anchor.",
              "reflects": true,
              "attribute": "angle",
              "inheritedFrom": {
                "name": "transformeable",
                "module": "src/mixins/transform.ts"
              }
            },
            {
              "kind": "field",
              "name": "#angularVelocityChangedTime",
              "privacy": "private",
              "type": {
                "text": "number"
              },
              "default": "-1",
              "inheritedFrom": {
                "name": "transformeable",
                "module": "src/mixins/transform.ts"
              }
            },
            {
              "kind": "field",
              "name": "angularVelocity",
              "type": {
                "text": "Angle"
              },
              "description": "Clockwise rotation per second.",
              "reflects": true,
              "attribute": "angular-velocity",
              "inheritedFrom": {
                "name": "transformeable",
                "module": "src/mixins/transform.ts"
              }
            },
            {
              "kind": "field",
              "name": "anchor",
              "type": {
                "text": "Vector2D"
              },
              "description": "Base position of the element relative to its parent's anchor.",
              "reflects": true,
              "attribute": "anchor",
              "inheritedFrom": {
                "name": "transformeable",
                "module": "src/mixins/transform.ts"
              }
            },
            {
              "kind": "field",
              "name": "#anchorChangeListener",
              "privacy": "private",
              "type": {
                "text": "ChangeListener<Vector2DBase>"
              },
              "inheritedFrom": {
                "name": "transformeable",
                "module": "src/mixins/transform.ts"
              }
            },
            {
              "kind": "method",
              "name": "moveAnchor",
              "parameters": [
                {
                  "name": "x",
                  "type": {
                    "text": "number"
                  }
                },
                {
                  "name": "y",
                  "type": {
                    "text": "number"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "transformeable",
                "module": "src/mixins/transform.ts"
              }
            },
            {
              "kind": "method",
              "name": "rotateClockwise",
              "parameters": [
                {
                  "name": "angle",
                  "type": {
                    "text": "Angle"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "transformeable",
                "module": "src/mixins/transform.ts"
              }
            },
            {
              "kind": "method",
              "name": "rotateCounterclockwise",
              "parameters": [
                {
                  "name": "angle",
                  "type": {
                    "text": "Angle"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "transformeable",
                "module": "src/mixins/transform.ts"
              }
            },
            {
              "kind": "field",
              "name": "scale",
              "inheritedFrom": {
                "name": "transformeable",
                "module": "src/mixins/transform.ts"
              }
            },
            {
              "kind": "field",
              "name": "#velocityChangedTime",
              "privacy": "private",
              "type": {
                "text": "number"
              },
              "default": "-1",
              "inheritedFrom": {
                "name": "transformeable",
                "module": "src/mixins/transform.ts"
              }
            },
            {
              "kind": "field",
              "name": "velocity",
              "type": {
                "text": "Vector2D"
              },
              "description": "Anchor movement per second.",
              "reflects": true,
              "attribute": "velocity",
              "inheritedFrom": {
                "name": "transformeable",
                "module": "src/mixins/transform.ts"
              }
            },
            {
              "kind": "field",
              "name": "#offset",
              "privacy": "private",
              "default": "new Vector2D(0, 0)",
              "inheritedFrom": {
                "name": "offset",
                "module": "src/mixins/offset.ts"
              }
            },
            {
              "kind": "method",
              "name": "moveOffset",
              "parameters": [
                {
                  "name": "x",
                  "type": {
                    "text": "number"
                  }
                },
                {
                  "name": "y",
                  "type": {
                    "text": "number"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "offset",
                "module": "src/mixins/offset.ts"
              }
            },
            {
              "kind": "field",
              "name": "#offsetChangeListener",
              "privacy": "private",
              "type": {
                "text": "ChangeListener<Vector2DBase>"
              },
              "inheritedFrom": {
                "name": "offset",
                "module": "src/mixins/offset.ts"
              }
            },
            {
              "kind": "field",
              "name": "offset",
              "type": {
                "text": "Vector2D"
              },
              "description": "Position of the element's origin relative to its anchor.",
              "reflects": true,
              "attribute": "offset",
              "inheritedFrom": {
                "name": "offset",
                "module": "src/mixins/offset.ts"
              }
            },
            {
              "kind": "method",
              "name": "bezier",
              "parameters": [
                {
                  "name": "options",
                  "optional": true,
                  "type": {
                    "text": "Options<Canvas2DShapeBezier>"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "partChildren",
                "module": "src/mixins/children.ts"
              }
            },
            {
              "kind": "method",
              "name": "ellipse",
              "parameters": [
                {
                  "name": "options",
                  "optional": true,
                  "type": {
                    "text": "Options<Canvas2DShapeEllipse>"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "partChildren",
                "module": "src/mixins/children.ts"
              }
            },
            {
              "kind": "method",
              "name": "line",
              "parameters": [
                {
                  "name": "options",
                  "optional": true,
                  "type": {
                    "text": "Options<Canvas2DShapeLine>"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "partChildren",
                "module": "src/mixins/children.ts"
              }
            },
            {
              "kind": "method",
              "name": "rectangle",
              "parameters": [
                {
                  "name": "options",
                  "optional": true,
                  "type": {
                    "text": "Options<Canvas2DShapeRectangle>"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "partChildren",
                "module": "src/mixins/children.ts"
              }
            },
            {
              "kind": "field",
              "name": "#changedSinceRender",
              "privacy": "private",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "inheritedFrom": {
                "name": "Canvas2DBaseRenderable",
                "module": "src/elements/canvas2d/renderable.ts"
              }
            },
            {
              "kind": "field",
              "name": "#clickListeners",
              "privacy": "private",
              "default": "new Set<EventListenerOrEventListenerObject>()",
              "inheritedFrom": {
                "name": "Canvas2DBaseRenderable",
                "module": "src/elements/canvas2d/renderable.ts"
              }
            },
            {
              "kind": "field",
              "name": "#localMouse",
              "privacy": "private",
              "default": "new MouseData()",
              "inheritedFrom": {
                "name": "Canvas2DBaseRenderable",
                "module": "src/elements/canvas2d/renderable.ts"
              }
            },
            {
              "kind": "field",
              "name": "#mouseListeners",
              "privacy": "private",
              "default": "new Set<EventListenerOrEventListenerObject>()",
              "inheritedFrom": {
                "name": "Canvas2DBaseRenderable",
                "module": "src/elements/canvas2d/renderable.ts"
              }
            },
            {
              "kind": "field",
              "name": "#shadow",
              "privacy": "private",
              "type": {
                "text": "Shadow | null"
              },
              "default": "null",
              "inheritedFrom": {
                "name": "Canvas2DBaseRenderable",
                "module": "src/elements/canvas2d/renderable.ts"
              }
            },
            {
              "kind": "method",
              "name": "addEventListener",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "type",
                  "type": {
                    "text": "keyof HTMLElementEventMap"
                  }
                },
                {
                  "name": "listener",
                  "type": {
                    "text": "EventListenerOrEventListenerObject"
                  }
                },
                {
                  "name": "options",
                  "optional": true,
                  "type": {
                    "text": "boolean | AddEventListenerOptions"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Canvas2DBaseRenderable",
                "module": "src/elements/canvas2d/renderable.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderConicalGradient",
              "parameters": [
                {
                  "name": "context",
                  "type": {
                    "text": "CanvasRenderingContext2D"
                  }
                },
                {
                  "name": "gradient",
                  "type": {
                    "text": "ConicalGradient"
                  }
                }
              ],
              "privacy": "private",
              "inheritedFrom": {
                "name": "Canvas2DBaseRenderable",
                "module": "src/elements/canvas2d/renderable.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderLinearGradient",
              "parameters": [
                {
                  "name": "context",
                  "type": {
                    "text": "CanvasRenderingContext2D"
                  }
                },
                {
                  "name": "gradient",
                  "type": {
                    "text": "LinearGradient"
                  }
                }
              ],
              "privacy": "private",
              "inheritedFrom": {
                "name": "Canvas2DBaseRenderable",
                "module": "src/elements/canvas2d/renderable.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderRadialGradient",
              "parameters": [
                {
                  "name": "context",
                  "type": {
                    "text": "CanvasRenderingContext2D"
                  }
                },
                {
                  "name": "gradient",
                  "type": {
                    "text": "RadialGradient"
                  }
                }
              ],
              "privacy": "private",
              "inheritedFrom": {
                "name": "Canvas2DBaseRenderable",
                "module": "src/elements/canvas2d/renderable.ts"
              }
            },
            {
              "kind": "method",
              "name": "removeEventListener",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "type",
                  "type": {
                    "text": "keyof HTMLElementEventMap"
                  }
                },
                {
                  "name": "listener",
                  "type": {
                    "text": "EventListenerOrEventListenerObject"
                  }
                },
                {
                  "name": "options",
                  "optional": true,
                  "type": {
                    "text": "boolean | AddEventListenerOptions"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Canvas2DBaseRenderable",
                "module": "src/elements/canvas2d/renderable.ts"
              }
            },
            {
              "kind": "field",
              "name": "changedSinceRender",
              "privacy": "private",
              "readonly": true,
              "inheritedFrom": {
                "name": "Canvas2DBaseRenderable",
                "module": "src/elements/canvas2d/renderable.ts"
              }
            },
            {
              "kind": "method",
              "name": "#handleClick",
              "privacy": "private",
              "parameters": [
                {
                  "name": "canvas2D",
                  "type": {
                    "text": "Canvas2DCanvasElement"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Canvas2DBaseRenderable",
                "module": "src/elements/canvas2d/renderable.ts"
              }
            },
            {
              "kind": "method",
              "name": "#handleMouse",
              "privacy": "private",
              "parameters": [
                {
                  "name": "canvas2D",
                  "type": {
                    "text": "Canvas2DCanvasElement"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Canvas2DBaseRenderable",
                "module": "src/elements/canvas2d/renderable.ts"
              }
            },
            {
              "kind": "method",
              "name": "registerChange",
              "parameters": [
                {
                  "name": "propertyName",
                  "type": {
                    "text": "P"
                  }
                },
                {
                  "name": "newValue",
                  "type": {
                    "text": "V"
                  }
                }
              ],
              "privacy": "private",
              "inheritedFrom": {
                "name": "Canvas2DBaseRenderable",
                "module": "src/elements/canvas2d/renderable.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderChildren",
              "parameters": [
                {
                  "name": "canvas2D",
                  "type": {
                    "text": "Canvas2DCanvasElement"
                  }
                }
              ],
              "privacy": "private",
              "inheritedFrom": {
                "name": "Canvas2DBaseRenderable",
                "module": "src/elements/canvas2d/renderable.ts"
              }
            },
            {
              "kind": "field",
              "name": "#shadowChangeListener",
              "privacy": "private",
              "type": {
                "text": "ChangeListener<Shadow>"
              },
              "inheritedFrom": {
                "name": "Canvas2DBaseRenderable",
                "module": "src/elements/canvas2d/renderable.ts"
              }
            },
            {
              "kind": "field",
              "name": "shadow",
              "inheritedFrom": {
                "name": "Canvas2DBaseRenderable",
                "module": "src/elements/canvas2d/renderable.ts"
              }
            },
            {
              "kind": "field",
              "name": "#eventProxy",
              "privacy": "private",
              "inheritedFrom": {
                "name": "Canvas2DElement",
                "module": "src/elements/canvas2d/element.ts"
              }
            },
            {
              "kind": "field",
              "name": "#everyFrame",
              "privacy": "private",
              "type": {
                "text": "Updater | null"
              },
              "default": "null",
              "inheritedFrom": {
                "name": "Canvas2DElement",
                "module": "src/elements/canvas2d/element.ts"
              }
            },
            {
              "kind": "field",
              "name": "canvas",
              "type": {
                "text": "Canvas2DCanvasElement"
              },
              "description": "The <c2d-canvas> element that is rendering this element. The <c2d-canvas>\r\nwill be an ancestor of this element.",
              "readonly": true,
              "inheritedFrom": {
                "name": "Canvas2DElement",
                "module": "src/elements/canvas2d/element.ts"
              }
            },
            {
              "kind": "method",
              "name": "createChild",
              "parameters": [
                {
                  "name": "ElementClass",
                  "type": {
                    "text": "E"
                  }
                },
                {
                  "name": "options",
                  "optional": true,
                  "type": {
                    "text": "Options<InstanceType<E>>"
                  }
                }
              ],
              "privacy": "private",
              "inheritedFrom": {
                "name": "Canvas2DElement",
                "module": "src/elements/canvas2d/element.ts"
              }
            },
            {
              "kind": "field",
              "name": "everyFrame",
              "type": {
                "text": "Updater | null"
              },
              "inheritedFrom": {
                "name": "Canvas2DElement",
                "module": "src/elements/canvas2d/element.ts"
              }
            },
            {
              "kind": "field",
              "name": "listen",
              "readonly": true,
              "inheritedFrom": {
                "name": "Canvas2DElement",
                "module": "src/elements/canvas2d/element.ts"
              }
            },
            {
              "kind": "method",
              "name": "scaleByPixelRatio",
              "parameters": [
                {
                  "name": "vector",
                  "type": {
                    "text": "Vector2D"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Canvas2DElement",
                "module": "src/elements/canvas2d/element.ts"
              }
            }
          ],
          "mixins": [
            {
              "name": "fillable",
              "module": "/src/mixins/fill"
            },
            {
              "name": "strokeable",
              "module": "/src/mixins/stroke"
            },
            {
              "name": "transformeable",
              "module": "/src/mixins/transform"
            },
            {
              "name": "offset",
              "module": "/src/mixins/offset"
            }
          ],
          "superclass": {
            "name": "Canvas2DShapePartRenderable",
            "module": "/src/elements/canvas2d/renderable"
          },
          "tagName": "c2d-shape",
          "customElement": true,
          "attributes": [
            {
              "name": "fill",
              "type": {
                "text": "DrawStyle | null"
              },
              "description": "The rendering style inside the element. This may be a color or gradient.\r\nWhen set to null, the parent element's style is used. When\r\nset to \"none\", the inside will be transparent.",
              "fieldName": "fill",
              "inheritedFrom": {
                "name": "fillable",
                "module": "src/mixins/fill.ts"
              }
            },
            {
              "name": "stroke",
              "type": {
                "text": "DrawStyle | null"
              },
              "description": "The rendering style for lines. This may be a color or gradient.\r\nWhen set to null, the parent element's style is used. When\r\nset to \"none\", no lines will be drawn.",
              "fieldName": "stroke",
              "inheritedFrom": {
                "name": "strokeable",
                "module": "src/mixins/stroke.ts"
              }
            },
            {
              "name": "line-width",
              "type": {
                "text": "number | null"
              },
              "description": "Width in pixels for drawing lines.",
              "fieldName": "lineWidth",
              "inheritedFrom": {
                "name": "strokeable",
                "module": "src/mixins/stroke.ts"
              }
            },
            {
              "name": "angle",
              "type": {
                "text": "Angle"
              },
              "description": "Clockwise rotation of the element around its anchor.",
              "fieldName": "angle",
              "inheritedFrom": {
                "name": "transformeable",
                "module": "src/mixins/transform.ts"
              }
            },
            {
              "name": "angular-velocity",
              "type": {
                "text": "Angle"
              },
              "description": "Clockwise rotation per second.",
              "fieldName": "angularVelocity",
              "inheritedFrom": {
                "name": "transformeable",
                "module": "src/mixins/transform.ts"
              }
            },
            {
              "name": "anchor",
              "type": {
                "text": "Vector2D"
              },
              "description": "Base position of the element relative to its parent's anchor.",
              "fieldName": "anchor",
              "inheritedFrom": {
                "name": "transformeable",
                "module": "src/mixins/transform.ts"
              }
            },
            {
              "name": "scale",
              "inheritedFrom": {
                "name": "transformeable",
                "module": "src/mixins/transform.ts"
              }
            },
            {
              "name": "velocity",
              "type": {
                "text": "Vector2D"
              },
              "description": "Anchor movement per second.",
              "fieldName": "velocity",
              "inheritedFrom": {
                "name": "transformeable",
                "module": "src/mixins/transform.ts"
              }
            },
            {
              "name": "offset",
              "type": {
                "text": "Vector2D"
              },
              "description": "Position of the element's origin relative to its anchor.",
              "fieldName": "offset",
              "inheritedFrom": {
                "name": "offset",
                "module": "src/mixins/offset.ts"
              }
            }
          ],
          "events": [
            {
              "name": "click",
              "type": {
                "text": "PointerEvent"
              },
              "inheritedFrom": {
                "name": "Canvas2DBaseRenderable",
                "module": "src/elements/canvas2d/renderable.ts"
              }
            },
            {
              "name": "mouseout",
              "type": {
                "text": "MouseEvent"
              },
              "inheritedFrom": {
                "name": "Canvas2DBaseRenderable",
                "module": "src/elements/canvas2d/renderable.ts"
              }
            },
            {
              "name": "mouseover",
              "type": {
                "text": "MouseEvent"
              },
              "inheritedFrom": {
                "name": "Canvas2DBaseRenderable",
                "module": "src/elements/canvas2d/renderable.ts"
              }
            },
            {
              "name": "mousemove",
              "type": {
                "text": "MouseEvent"
              },
              "inheritedFrom": {
                "name": "Canvas2DBaseRenderable",
                "module": "src/elements/canvas2d/renderable.ts"
              }
            },
            {
              "name": "mouseenter",
              "type": {
                "text": "MouseEvent"
              },
              "inheritedFrom": {
                "name": "Canvas2DBaseRenderable",
                "module": "src/elements/canvas2d/renderable.ts"
              }
            },
            {
              "name": "mousedown",
              "type": {
                "text": "MouseEvent"
              },
              "inheritedFrom": {
                "name": "Canvas2DBaseRenderable",
                "module": "src/elements/canvas2d/renderable.ts"
              }
            },
            {
              "name": "mouseup",
              "type": {
                "text": "MouseEvent"
              },
              "inheritedFrom": {
                "name": "Canvas2DBaseRenderable",
                "module": "src/elements/canvas2d/renderable.ts"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "Canvas2DShape",
          "declaration": {
            "name": "Canvas2DShape",
            "module": "src/elements/canvas2d/shape.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "c2d-shape",
          "declaration": {
            "name": "Canvas2DShape",
            "module": "src/elements/canvas2d/shape.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/elements/canvas2d/text.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "Canvas2DText",
          "members": [
            {
              "kind": "field",
              "name": "tag",
              "static": true,
              "readonly": true
            },
            {
              "kind": "field",
              "name": "#align",
              "privacy": "private",
              "type": {
                "text": "CanvasTextAlign | null"
              },
              "default": "null"
            },
            {
              "kind": "field",
              "name": "#baseline",
              "privacy": "private",
              "type": {
                "text": "CanvasTextBaseline | null"
              },
              "default": "null"
            },
            {
              "kind": "field",
              "name": "align"
            },
            {
              "kind": "field",
              "name": "baseline"
            },
            {
              "kind": "method",
              "name": "render",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "canvas2D",
                  "type": {
                    "text": "Canvas2DCanvasElement"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "renderLinearGradient",
              "return": {
                "type": {
                  "text": "CanvasGradient"
                }
              },
              "parameters": [
                {
                  "name": "context",
                  "type": {
                    "text": "CanvasRenderingContext2D"
                  }
                },
                {
                  "name": "gradient",
                  "type": {
                    "text": "LinearGradient"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "renderRadialGradient",
              "return": {
                "type": {
                  "text": "CanvasGradient"
                }
              },
              "parameters": [
                {
                  "name": "context",
                  "type": {
                    "text": "CanvasRenderingContext2D"
                  }
                },
                {
                  "name": "gradient",
                  "type": {
                    "text": "RadialGradient"
                  }
                }
              ]
            },
            {
              "kind": "field",
              "name": "textContent"
            }
          ],
          "attributes": [
            {
              "name": "size"
            },
            {
              "name": "align"
            },
            {
              "name": "baseline"
            },
            {
              "name": "font"
            },
            {
              "name": "stretch"
            }
          ],
          "superclass": {
            "name": "Base",
            "module": "src/elements/canvas2d/text.ts"
          },
          "tagName": "c2d-text",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "Canvas2DText",
          "declaration": {
            "name": "Canvas2DText",
            "module": "src/elements/canvas2d/text.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "c2d-text",
          "declaration": {
            "name": "Canvas2DText",
            "module": "src/elements/canvas2d/text.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/elements/canvas2d/video.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "Canvas2DVideo",
          "members": [
            {
              "kind": "field",
              "name": "tag",
              "type": {
                "text": "string"
              },
              "static": true,
              "inheritedFrom": {
                "name": "Canvas2DElement",
                "module": "src/elements/canvas2d/element.ts"
              },
              "readonly": true
            },
            {
              "kind": "field",
              "name": "#frameCallbackId",
              "privacy": "private",
              "type": {
                "text": "number"
              },
              "default": "-1"
            },
            {
              "kind": "method",
              "name": "#handleFrame",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "play"
            },
            {
              "kind": "method",
              "name": "pause"
            },
            {
              "kind": "field",
              "name": "paused",
              "readonly": true
            },
            {
              "kind": "method",
              "name": "togglePlay"
            },
            {
              "kind": "field",
              "name": "#mediaElement",
              "privacy": "private",
              "type": {
                "text": "HTMLElementTagNameMap[T]"
              },
              "inheritedFrom": {
                "name": "rendersVisualMedia",
                "module": "src/mixins/visualMedia.ts"
              }
            },
            {
              "kind": "field",
              "name": "#widthSet",
              "privacy": "private",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "inheritedFrom": {
                "name": "rendersVisualMedia",
                "module": "src/mixins/visualMedia.ts"
              }
            },
            {
              "kind": "field",
              "name": "#heightSet",
              "privacy": "private",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "inheritedFrom": {
                "name": "rendersVisualMedia",
                "module": "src/mixins/visualMedia.ts"
              }
            },
            {
              "kind": "field",
              "name": "mediaElement",
              "readonly": true,
              "inheritedFrom": {
                "name": "rendersVisualMedia",
                "module": "src/mixins/visualMedia.ts"
              }
            },
            {
              "kind": "field",
              "name": "source",
              "inheritedFrom": {
                "name": "rendersVisualMedia",
                "module": "src/mixins/visualMedia.ts"
              }
            },
            {
              "kind": "method",
              "name": "render",
              "parameters": [
                {
                  "name": "canvas2D",
                  "type": {
                    "text": "Canvas2DCanvasElement"
                  }
                }
              ],
              "privacy": "private",
              "inheritedFrom": {
                "name": "Canvas2DBaseRenderable",
                "module": "src/elements/canvas2d/renderable.ts"
              },
              "return": {
                "type": {
                  "text": "void"
                }
              }
            },
            {
              "kind": "field",
              "name": "mediaWidth",
              "readonly": true,
              "inheritedFrom": {
                "name": "rendersVisualMedia",
                "module": "src/mixins/visualMedia.ts"
              }
            },
            {
              "kind": "field",
              "name": "width",
              "inheritedFrom": {
                "name": "hasDimensions",
                "module": "src/mixins/dimensions.ts"
              }
            },
            {
              "kind": "field",
              "name": "mediaHeight",
              "readonly": true,
              "inheritedFrom": {
                "name": "rendersVisualMedia",
                "module": "src/mixins/visualMedia.ts"
              }
            },
            {
              "kind": "field",
              "name": "height",
              "inheritedFrom": {
                "name": "hasDimensions",
                "module": "src/mixins/dimensions.ts"
              }
            },
            {
              "kind": "field",
              "name": "#anchor",
              "privacy": "private",
              "inheritedFrom": {
                "name": "transformeable",
                "module": "src/mixins/transform.ts"
              }
            },
            {
              "kind": "field",
              "name": "#angle",
              "privacy": "private",
              "inheritedFrom": {
                "name": "transformeable",
                "module": "src/mixins/transform.ts"
              }
            },
            {
              "kind": "field",
              "name": "#angularVelocity",
              "privacy": "private",
              "inheritedFrom": {
                "name": "transformeable",
                "module": "src/mixins/transform.ts"
              }
            },
            {
              "kind": "field",
              "name": "#scale",
              "privacy": "private",
              "inheritedFrom": {
                "name": "transformeable",
                "module": "src/mixins/transform.ts"
              }
            },
            {
              "kind": "field",
              "name": "#velocity",
              "privacy": "private",
              "inheritedFrom": {
                "name": "transformeable",
                "module": "src/mixins/transform.ts"
              }
            },
            {
              "kind": "field",
              "name": "#angleChangeListener",
              "privacy": "private",
              "type": {
                "text": "ChangeListener<number>"
              },
              "inheritedFrom": {
                "name": "transformeable",
                "module": "src/mixins/transform.ts"
              }
            },
            {
              "kind": "field",
              "name": "angle",
              "type": {
                "text": "Angle"
              },
              "description": "Clockwise rotation of the element around its anchor.",
              "reflects": true,
              "attribute": "angle",
              "inheritedFrom": {
                "name": "transformeable",
                "module": "src/mixins/transform.ts"
              }
            },
            {
              "kind": "field",
              "name": "#angularVelocityChangedTime",
              "privacy": "private",
              "type": {
                "text": "number"
              },
              "default": "-1",
              "inheritedFrom": {
                "name": "transformeable",
                "module": "src/mixins/transform.ts"
              }
            },
            {
              "kind": "field",
              "name": "angularVelocity",
              "type": {
                "text": "Angle"
              },
              "description": "Clockwise rotation per second.",
              "reflects": true,
              "attribute": "angular-velocity",
              "inheritedFrom": {
                "name": "transformeable",
                "module": "src/mixins/transform.ts"
              }
            },
            {
              "kind": "field",
              "name": "anchor",
              "type": {
                "text": "Vector2D"
              },
              "description": "Base position of the element relative to its parent's anchor.",
              "reflects": true,
              "attribute": "anchor",
              "inheritedFrom": {
                "name": "transformeable",
                "module": "src/mixins/transform.ts"
              }
            },
            {
              "kind": "field",
              "name": "#anchorChangeListener",
              "privacy": "private",
              "type": {
                "text": "ChangeListener<Vector2DBase>"
              },
              "inheritedFrom": {
                "name": "transformeable",
                "module": "src/mixins/transform.ts"
              }
            },
            {
              "kind": "method",
              "name": "moveAnchor",
              "parameters": [
                {
                  "name": "x",
                  "type": {
                    "text": "number"
                  }
                },
                {
                  "name": "y",
                  "type": {
                    "text": "number"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "transformeable",
                "module": "src/mixins/transform.ts"
              }
            },
            {
              "kind": "method",
              "name": "afterRender",
              "parameters": [
                {
                  "name": "canvas2D",
                  "type": {
                    "text": "Canvas2DCanvasElement"
                  }
                }
              ],
              "privacy": "private",
              "inheritedFrom": {
                "name": "Canvas2DBaseRenderable",
                "module": "src/elements/canvas2d/renderable.ts"
              },
              "return": {
                "type": {
                  "text": "void"
                }
              }
            },
            {
              "kind": "method",
              "name": "rotateClockwise",
              "parameters": [
                {
                  "name": "angle",
                  "type": {
                    "text": "Angle"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "transformeable",
                "module": "src/mixins/transform.ts"
              }
            },
            {
              "kind": "method",
              "name": "rotateCounterclockwise",
              "parameters": [
                {
                  "name": "angle",
                  "type": {
                    "text": "Angle"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "transformeable",
                "module": "src/mixins/transform.ts"
              }
            },
            {
              "kind": "field",
              "name": "scale",
              "inheritedFrom": {
                "name": "transformeable",
                "module": "src/mixins/transform.ts"
              }
            },
            {
              "kind": "field",
              "name": "#velocityChangedTime",
              "privacy": "private",
              "type": {
                "text": "number"
              },
              "default": "-1",
              "inheritedFrom": {
                "name": "transformeable",
                "module": "src/mixins/transform.ts"
              }
            },
            {
              "kind": "field",
              "name": "velocity",
              "type": {
                "text": "Vector2D"
              },
              "description": "Anchor movement per second.",
              "reflects": true,
              "attribute": "velocity",
              "inheritedFrom": {
                "name": "transformeable",
                "module": "src/mixins/transform.ts"
              }
            },
            {
              "kind": "field",
              "name": "#origin",
              "privacy": "private",
              "type": {
                "text": "Origin"
              },
              "default": "\"topLeft\"",
              "inheritedFrom": {
                "name": "hasRectangleBounds",
                "module": "src/mixins/rectangleBounds.ts"
              }
            },
            {
              "kind": "field",
              "name": "topLeft",
              "readonly": true,
              "inheritedFrom": {
                "name": "hasRectangleBounds",
                "module": "src/mixins/rectangleBounds.ts"
              }
            },
            {
              "kind": "field",
              "name": "topRight",
              "readonly": true,
              "inheritedFrom": {
                "name": "hasRectangleBounds",
                "module": "src/mixins/rectangleBounds.ts"
              }
            },
            {
              "kind": "field",
              "name": "center",
              "readonly": true,
              "inheritedFrom": {
                "name": "hasRectangleBounds",
                "module": "src/mixins/rectangleBounds.ts"
              }
            },
            {
              "kind": "field",
              "name": "bottomLeft",
              "readonly": true,
              "inheritedFrom": {
                "name": "hasRectangleBounds",
                "module": "src/mixins/rectangleBounds.ts"
              }
            },
            {
              "kind": "field",
              "name": "bottomRight",
              "readonly": true,
              "inheritedFrom": {
                "name": "hasRectangleBounds",
                "module": "src/mixins/rectangleBounds.ts"
              }
            },
            {
              "kind": "field",
              "name": "origin",
              "inheritedFrom": {
                "name": "hasRectangleBounds",
                "module": "src/mixins/rectangleBounds.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderConicalGradient",
              "parameters": [
                {
                  "name": "context",
                  "type": {
                    "text": "CanvasRenderingContext2D"
                  }
                },
                {
                  "name": "gradient",
                  "type": {
                    "text": "ConicalGradient"
                  }
                }
              ],
              "privacy": "private",
              "inheritedFrom": {
                "name": "Canvas2DBaseRenderable",
                "module": "src/elements/canvas2d/renderable.ts"
              },
              "return": {
                "type": {
                  "text": "CanvasGradient"
                }
              }
            },
            {
              "kind": "method",
              "name": "renderLinearGradient",
              "parameters": [
                {
                  "name": "context",
                  "type": {
                    "text": "CanvasRenderingContext2D"
                  }
                },
                {
                  "name": "gradient",
                  "type": {
                    "text": "LinearGradient"
                  }
                }
              ],
              "privacy": "private",
              "inheritedFrom": {
                "name": "Canvas2DBaseRenderable",
                "module": "src/elements/canvas2d/renderable.ts"
              },
              "return": {
                "type": {
                  "text": "CanvasGradient"
                }
              }
            },
            {
              "kind": "field",
              "name": "#width",
              "privacy": "private",
              "type": {
                "text": "number"
              },
              "default": "100",
              "inheritedFrom": {
                "name": "hasDimensions",
                "module": "src/mixins/dimensions.ts"
              }
            },
            {
              "kind": "field",
              "name": "#height",
              "privacy": "private",
              "type": {
                "text": "number"
              },
              "default": "100",
              "inheritedFrom": {
                "name": "hasDimensions",
                "module": "src/mixins/dimensions.ts"
              }
            },
            {
              "kind": "field",
              "name": "#offset",
              "privacy": "private",
              "default": "new Vector2D(0, 0)",
              "inheritedFrom": {
                "name": "offset",
                "module": "src/mixins/offset.ts"
              }
            },
            {
              "kind": "method",
              "name": "moveOffset",
              "parameters": [
                {
                  "name": "x",
                  "type": {
                    "text": "number"
                  }
                },
                {
                  "name": "y",
                  "type": {
                    "text": "number"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "offset",
                "module": "src/mixins/offset.ts"
              }
            },
            {
              "kind": "field",
              "name": "#offsetChangeListener",
              "privacy": "private",
              "type": {
                "text": "ChangeListener<Vector2DBase>"
              },
              "inheritedFrom": {
                "name": "offset",
                "module": "src/mixins/offset.ts"
              }
            },
            {
              "kind": "field",
              "name": "offset",
              "type": {
                "text": "Vector2D"
              },
              "description": "Position of the element's origin relative to its anchor.",
              "reflects": true,
              "attribute": "offset",
              "inheritedFrom": {
                "name": "offset",
                "module": "src/mixins/offset.ts"
              }
            },
            {
              "kind": "method",
              "name": "bezier",
              "return": {
                "type": {
                  "text": "Canvas2DBezier"
                }
              },
              "parameters": [
                {
                  "name": "options",
                  "optional": true,
                  "type": {
                    "text": "Options<Canvas2DBezier>"
                  }
                }
              ],
              "description": "Creates a `<c2d-bezier>` child element and returns it.",
              "inheritedFrom": {
                "name": "standaloneChildren",
                "module": "src/mixins/children.ts"
              }
            },
            {
              "kind": "method",
              "name": "ellipse",
              "return": {
                "type": {
                  "text": "Canvas2DEllipse"
                }
              },
              "parameters": [
                {
                  "name": "options",
                  "optional": true,
                  "type": {
                    "text": "Options<Canvas2DEllipse>"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "standaloneChildren",
                "module": "src/mixins/children.ts"
              }
            },
            {
              "kind": "method",
              "name": "image",
              "return": {
                "type": {
                  "text": "Canvas2DImage"
                }
              },
              "parameters": [
                {
                  "name": "options",
                  "optional": true,
                  "type": {
                    "text": "Options<Canvas2DImage>"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "standaloneChildren",
                "module": "src/mixins/children.ts"
              }
            },
            {
              "kind": "method",
              "name": "multiple",
              "return": {
                "type": {
                  "text": "Node[]"
                }
              },
              "parameters": [
                {
                  "name": "callback",
                  "type": {
                    "text": "MultipleCallback"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "standaloneChildren",
                "module": "src/mixins/children.ts"
              }
            },
            {
              "kind": "method",
              "name": "line",
              "return": {
                "type": {
                  "text": "Canvas2DLine"
                }
              },
              "parameters": [
                {
                  "name": "options",
                  "optional": true,
                  "type": {
                    "text": "Options<Canvas2DLine>"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "standaloneChildren",
                "module": "src/mixins/children.ts"
              }
            },
            {
              "kind": "method",
              "name": "rectangle",
              "return": {
                "type": {
                  "text": "Canvas2DRectangle"
                }
              },
              "parameters": [
                {
                  "name": "options",
                  "optional": true,
                  "type": {
                    "text": "Options<Canvas2DRectangle>"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "standaloneChildren",
                "module": "src/mixins/children.ts"
              }
            },
            {
              "kind": "method",
              "name": "shape",
              "return": {
                "type": {
                  "text": "Canvas2DShape"
                }
              },
              "parameters": [
                {
                  "name": "options",
                  "optional": true,
                  "type": {
                    "text": "Options<Canvas2DShape>"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "standaloneChildren",
                "module": "src/mixins/children.ts"
              }
            },
            {
              "kind": "method",
              "name": "text",
              "return": {
                "type": {
                  "text": "Canvas2DText"
                }
              },
              "parameters": [
                {
                  "name": "options",
                  "optional": true,
                  "type": {
                    "text": "Options<Canvas2DText>"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "standaloneChildren",
                "module": "src/mixins/children.ts"
              }
            },
            {
              "kind": "method",
              "name": "video",
              "return": {
                "type": {
                  "text": "Canvas2DVideo"
                }
              },
              "parameters": [
                {
                  "name": "options",
                  "optional": true,
                  "type": {
                    "text": "Options<Canvas2DVideo>"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "standaloneChildren",
                "module": "src/mixins/children.ts"
              }
            },
            {
              "kind": "field",
              "name": "#changedSinceRender",
              "privacy": "private",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "inheritedFrom": {
                "name": "Canvas2DBaseRenderable",
                "module": "src/elements/canvas2d/renderable.ts"
              }
            },
            {
              "kind": "field",
              "name": "#clickListeners",
              "privacy": "private",
              "default": "new Set<EventListenerOrEventListenerObject>()",
              "inheritedFrom": {
                "name": "Canvas2DBaseRenderable",
                "module": "src/elements/canvas2d/renderable.ts"
              }
            },
            {
              "kind": "field",
              "name": "#localMouse",
              "privacy": "private",
              "default": "new MouseData()",
              "inheritedFrom": {
                "name": "Canvas2DBaseRenderable",
                "module": "src/elements/canvas2d/renderable.ts"
              }
            },
            {
              "kind": "field",
              "name": "#mouseListeners",
              "privacy": "private",
              "default": "new Set<EventListenerOrEventListenerObject>()",
              "inheritedFrom": {
                "name": "Canvas2DBaseRenderable",
                "module": "src/elements/canvas2d/renderable.ts"
              }
            },
            {
              "kind": "field",
              "name": "#shadow",
              "privacy": "private",
              "type": {
                "text": "Shadow | null"
              },
              "default": "null",
              "inheritedFrom": {
                "name": "Canvas2DBaseRenderable",
                "module": "src/elements/canvas2d/renderable.ts"
              }
            },
            {
              "kind": "method",
              "name": "addEventListener",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "type",
                  "type": {
                    "text": "keyof HTMLElementEventMap"
                  }
                },
                {
                  "name": "listener",
                  "type": {
                    "text": "EventListenerOrEventListenerObject"
                  }
                },
                {
                  "name": "options",
                  "optional": true,
                  "type": {
                    "text": "boolean | AddEventListenerOptions"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Canvas2DBaseRenderable",
                "module": "src/elements/canvas2d/renderable.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderRadialGradient",
              "parameters": [
                {
                  "name": "context",
                  "type": {
                    "text": "CanvasRenderingContext2D"
                  }
                },
                {
                  "name": "gradient",
                  "type": {
                    "text": "RadialGradient"
                  }
                }
              ],
              "privacy": "private",
              "inheritedFrom": {
                "name": "Canvas2DBaseRenderable",
                "module": "src/elements/canvas2d/renderable.ts"
              }
            },
            {
              "kind": "method",
              "name": "removeEventListener",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "type",
                  "type": {
                    "text": "keyof HTMLElementEventMap"
                  }
                },
                {
                  "name": "listener",
                  "type": {
                    "text": "EventListenerOrEventListenerObject"
                  }
                },
                {
                  "name": "options",
                  "optional": true,
                  "type": {
                    "text": "boolean | AddEventListenerOptions"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Canvas2DBaseRenderable",
                "module": "src/elements/canvas2d/renderable.ts"
              }
            },
            {
              "kind": "field",
              "name": "changedSinceRender",
              "privacy": "private",
              "readonly": true,
              "inheritedFrom": {
                "name": "Canvas2DBaseRenderable",
                "module": "src/elements/canvas2d/renderable.ts"
              }
            },
            {
              "kind": "method",
              "name": "#handleClick",
              "privacy": "private",
              "parameters": [
                {
                  "name": "canvas2D",
                  "type": {
                    "text": "Canvas2DCanvasElement"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Canvas2DBaseRenderable",
                "module": "src/elements/canvas2d/renderable.ts"
              }
            },
            {
              "kind": "method",
              "name": "#handleMouse",
              "privacy": "private",
              "parameters": [
                {
                  "name": "canvas2D",
                  "type": {
                    "text": "Canvas2DCanvasElement"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Canvas2DBaseRenderable",
                "module": "src/elements/canvas2d/renderable.ts"
              }
            },
            {
              "kind": "method",
              "name": "registerChange",
              "parameters": [
                {
                  "name": "propertyName",
                  "type": {
                    "text": "P"
                  }
                },
                {
                  "name": "newValue",
                  "type": {
                    "text": "V"
                  }
                }
              ],
              "privacy": "private",
              "inheritedFrom": {
                "name": "Canvas2DBaseRenderable",
                "module": "src/elements/canvas2d/renderable.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderChildren",
              "parameters": [
                {
                  "name": "canvas2D",
                  "type": {
                    "text": "Canvas2DCanvasElement"
                  }
                }
              ],
              "privacy": "private",
              "inheritedFrom": {
                "name": "Canvas2DBaseRenderable",
                "module": "src/elements/canvas2d/renderable.ts"
              }
            },
            {
              "kind": "field",
              "name": "#shadowChangeListener",
              "privacy": "private",
              "type": {
                "text": "ChangeListener<Shadow>"
              },
              "inheritedFrom": {
                "name": "Canvas2DBaseRenderable",
                "module": "src/elements/canvas2d/renderable.ts"
              }
            },
            {
              "kind": "field",
              "name": "shadow",
              "inheritedFrom": {
                "name": "Canvas2DBaseRenderable",
                "module": "src/elements/canvas2d/renderable.ts"
              }
            },
            {
              "kind": "field",
              "name": "#eventProxy",
              "privacy": "private",
              "inheritedFrom": {
                "name": "Canvas2DElement",
                "module": "src/elements/canvas2d/element.ts"
              }
            },
            {
              "kind": "field",
              "name": "#everyFrame",
              "privacy": "private",
              "type": {
                "text": "Updater | null"
              },
              "default": "null",
              "inheritedFrom": {
                "name": "Canvas2DElement",
                "module": "src/elements/canvas2d/element.ts"
              }
            },
            {
              "kind": "field",
              "name": "canvas",
              "type": {
                "text": "Canvas2DCanvasElement"
              },
              "description": "The <c2d-canvas> element that is rendering this element. The <c2d-canvas>\r\nwill be an ancestor of this element.",
              "readonly": true,
              "inheritedFrom": {
                "name": "Canvas2DElement",
                "module": "src/elements/canvas2d/element.ts"
              }
            },
            {
              "kind": "method",
              "name": "createChild",
              "parameters": [
                {
                  "name": "ElementClass",
                  "type": {
                    "text": "E"
                  }
                },
                {
                  "name": "options",
                  "optional": true,
                  "type": {
                    "text": "Options<InstanceType<E>>"
                  }
                }
              ],
              "privacy": "private",
              "inheritedFrom": {
                "name": "Canvas2DElement",
                "module": "src/elements/canvas2d/element.ts"
              }
            },
            {
              "kind": "field",
              "name": "everyFrame",
              "type": {
                "text": "Updater | null"
              },
              "inheritedFrom": {
                "name": "Canvas2DElement",
                "module": "src/elements/canvas2d/element.ts"
              }
            },
            {
              "kind": "field",
              "name": "listen",
              "readonly": true,
              "inheritedFrom": {
                "name": "Canvas2DElement",
                "module": "src/elements/canvas2d/element.ts"
              }
            },
            {
              "kind": "method",
              "name": "scaleByPixelRatio",
              "parameters": [
                {
                  "name": "vector",
                  "type": {
                    "text": "Vector2D"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Canvas2DElement",
                "module": "src/elements/canvas2d/element.ts"
              }
            }
          ],
          "mixins": [
            {
              "name": "rendersVisualMedia",
              "module": "/src/mixins/visualMedia"
            }
          ],
          "superclass": {
            "name": "Canvas2DStandaloneRenderable",
            "module": "/src/elements/canvas2d/renderable"
          },
          "tagName": "c2d-video",
          "customElement": true,
          "attributes": [
            {
              "name": "angle",
              "type": {
                "text": "Angle"
              },
              "description": "Clockwise rotation of the element around its anchor.",
              "fieldName": "angle",
              "inheritedFrom": {
                "name": "transformeable",
                "module": "src/mixins/transform.ts"
              }
            },
            {
              "name": "angular-velocity",
              "type": {
                "text": "Angle"
              },
              "description": "Clockwise rotation per second.",
              "fieldName": "angularVelocity",
              "inheritedFrom": {
                "name": "transformeable",
                "module": "src/mixins/transform.ts"
              }
            },
            {
              "name": "anchor",
              "type": {
                "text": "Vector2D"
              },
              "description": "Base position of the element relative to its parent's anchor.",
              "fieldName": "anchor",
              "inheritedFrom": {
                "name": "transformeable",
                "module": "src/mixins/transform.ts"
              }
            },
            {
              "name": "scale",
              "inheritedFrom": {
                "name": "transformeable",
                "module": "src/mixins/transform.ts"
              }
            },
            {
              "name": "velocity",
              "type": {
                "text": "Vector2D"
              },
              "description": "Anchor movement per second.",
              "fieldName": "velocity",
              "inheritedFrom": {
                "name": "transformeable",
                "module": "src/mixins/transform.ts"
              }
            },
            {
              "name": "offset",
              "type": {
                "text": "Vector2D"
              },
              "description": "Position of the element's origin relative to its anchor.",
              "fieldName": "offset",
              "inheritedFrom": {
                "name": "offset",
                "module": "src/mixins/offset.ts"
              }
            }
          ],
          "events": [
            {
              "name": "click",
              "type": {
                "text": "PointerEvent"
              },
              "inheritedFrom": {
                "name": "Canvas2DBaseRenderable",
                "module": "src/elements/canvas2d/renderable.ts"
              }
            },
            {
              "name": "mouseout",
              "type": {
                "text": "MouseEvent"
              },
              "inheritedFrom": {
                "name": "Canvas2DBaseRenderable",
                "module": "src/elements/canvas2d/renderable.ts"
              }
            },
            {
              "name": "mouseover",
              "type": {
                "text": "MouseEvent"
              },
              "inheritedFrom": {
                "name": "Canvas2DBaseRenderable",
                "module": "src/elements/canvas2d/renderable.ts"
              }
            },
            {
              "name": "mousemove",
              "type": {
                "text": "MouseEvent"
              },
              "inheritedFrom": {
                "name": "Canvas2DBaseRenderable",
                "module": "src/elements/canvas2d/renderable.ts"
              }
            },
            {
              "name": "mouseenter",
              "type": {
                "text": "MouseEvent"
              },
              "inheritedFrom": {
                "name": "Canvas2DBaseRenderable",
                "module": "src/elements/canvas2d/renderable.ts"
              }
            },
            {
              "name": "mousedown",
              "type": {
                "text": "MouseEvent"
              },
              "inheritedFrom": {
                "name": "Canvas2DBaseRenderable",
                "module": "src/elements/canvas2d/renderable.ts"
              }
            },
            {
              "name": "mouseup",
              "type": {
                "text": "MouseEvent"
              },
              "inheritedFrom": {
                "name": "Canvas2DBaseRenderable",
                "module": "src/elements/canvas2d/renderable.ts"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "Canvas2DVideo",
          "declaration": {
            "name": "Canvas2DVideo",
            "module": "src/elements/canvas2d/video.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "c2d-video",
          "declaration": {
            "name": "Canvas2DVideo",
            "module": "src/elements/canvas2d/video.ts"
          }
        }
      ]
    }
  ]
}
